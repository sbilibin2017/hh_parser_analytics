components:
  examples:
    VacancyDraftVacancyDraftResponse:
      value:
        id: '22'
        ignored_fields:
          - area
          - salary
          - employment
        name: Новая вакансия черновик1
        publication_ready: false
        validation_errors:
          - reason: too_short
            value: description
          - reason: too_long
            value: name
    WebhookBaseUser:
      value:
        action_type: VACANCY_ARCHIVATION
        id: notification7vacancyId7
        payload:
          vacancy_id: '7'
        subscription_id: '7'
        user_id: '54751591'
    EmployerAddressItem:
      value:
        found: 1
        items:
          - building: 9с10
            city: Москва
            deleted: false
            description: на проходной потребуется паспорт
            id: '15'
            lat: 55.807794
            lng: 37.638699
            metro_stations:
              - lat: 55.728994
                line_id: '5'
                line_name: Кольцевая
                lng: 37.622533
                station_id: '5.36'
                station_name: Добрынинская
            raw: 'Москва, улица Годовикова, 9с10'
            street: улица Годовикова
        page: 0
        pages: 1
        per_page: 20
    ProfileVideosProfileVideosList:
      value:
        items:
          - download_url:
              expires_at: '2022-01-01T12:00:00+0300'
              url: 'https://storage.yandexcloud.net/...'
            id: ec6b42e5-b0fb-4f72-b81b-5b44f8c09968
    SuggestsResumeSearchKeyword:
      value:
        items:
          - text: Москва
          - text: Мосты
          - text: Московская государственная юридическая академия
    VacancyAddVacancyRequestBody:
      value:
        accept_handicapped: true
        accept_incomplete_resumes: false
        accept_kids: false
        accept_temporary: true
        address:
          id: '123'
          show_metro_only: true
        allow_messages: true
        area:
          id: '1'
        billing_type:
          id: standard
        branded_template:
          id: marketing
        code: код-1234
        contacts:
          email: i.ivanov@example.com
          name: Иванов Иван
          phones:
            - city: '495'
              comment: с 10 до 20
              country: '7'
              formatted: '79198883344'
              number: '1234567'
        description: Работа в дружном коллективе
        driver_license_types:
          - id: A
          - id: B
        employment:
          id: full
        experience:
          id: moreThan6
        key_skills:
          - name: Холодные продажи
          - name: Проведение промо-акций
        languages:
          - id: eng
            level:
              id: a1
        manager:
          id: '321'
        name: Менеджер по продажам
        professional_roles:
          - id: '59'
        response_letter_required: true
        response_notifications: true
        salary:
          currency: USD
          from: 100
          gross: true
          to: 500
        schedule:
          id: flyInFlyOut
        specializations:
          - id: '17.324'
          - id: '3.148'
        test:
          id: '42'
          required: true
        type:
          id: open
        working_days:
          - id: only_saturday_and_sunday
        working_time_intervals:
          - id: from_four_to_six_hours_in_a_day
        working_time_modes:
          - id: start_after_sixteen
    SavedSearchesSavedSearchResumes:
      value:
        found: 2
        items:
          - created_at: '2015-01-01T13:12:17+0400'
            id: '609535'
            items:
              count: 55
              url: 'https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1'
            name: Managers in Moscow
            new_items:
              count: 15
              url: 'https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1&last_used=2015-11-12T18%3A06%3A04%2B0300'
            subscription: true
        page: 0
        pages: 1
        per_page: 0
    MetroCityMetro:
      value:
        id: '1'
        lines:
          - hex_color: '339999'
            id: '11'
            name: Каховская
            stations:
              - id: '11.46'
                lat: 55.654327
                lng: 37.647705
                name: Каширская
                order: 1
        name: Москва
    EmployersEmployerVacancyAreas:
      value:
        found: 1
        items:
          - id: '1'
            name: Москва
            url: 'https://api.hh.ru...'
        page: 0
        pages: 1
        per_page: 1
    VacancyDraftVacancyDraftCreation:
      value:
        accept_handicapped: true
        accept_incomplete_resumes: false
        accept_kids: false
        accept_temporary: false
        address:
          id: '123'
          show_metro_only: true
        allow_messages: true
        area:
          id: '1'
        billing_type:
          id: standard
        branded_template:
          id: marketing
        code: код-1234
        contacts:
          email: i.ivanov@example.com
          name: Иванов Иван
          phones:
            - comment: с 10 до 20
              formatted: '79198883344'
        department:
          id: '1'
          name: Спецотдел
        description: Приветствуется опыт работы менеджером по продажам
        driver_license_types:
          - id: A
          - id: B
        employment:
          id: full
        experience:
          id: moreThan6
        key_skills:
          - name: Холодные продажи
          - name: Проведение промо акций
        languages:
          - id: spa
            level:
              id: b2
          - id: ita
            level:
              id: a1
        name: Менеджер по продажам
        professional_roles:
          - id: '59'
        response_letter_required: true
        response_notifications: true
        salary:
          currency: USD
          from: 100
          gross: true
          to: 500
        schedule:
          id: flyInFlyOut
        test:
          id: '42'
          required: true
        type:
          id: open
        with_zp: true
        working_days:
          - id: only_saturday_and_sunday
        working_time_intervals:
          - id: from_four_to_six_hours_in_a_day
        working_time_modes:
          - id: start_after_sixteen
    MetroMetro:
      value:
        - id: '1'
          lines:
            - hex_color: '339999'
              id: '11'
              name: Каховская
              stations:
                - id: '11.46'
                  lat: 55.654327
                  lng: 37.647705
                  name: Каширская
                  order: 1
          name: Москва
          url: 'https://api.hh.ru/metro/1'
    DictionariesSkills:
      value:
        items:
          - id: '2716'
            text: Системы тепло - и холодоснабжения
          - id: '3019'
            text: Холодный цех
    VacanciesDraft:
      value:
        found: 2
        items:
          - areas:
              - id: '4786'
                name: Артышта
              - id: '4787'
                name: Бачатский
              - id: '1231'
                name: Белово
            auto_publication: null
            billing_type:
              id: standard
              name: Стандарт
            completed_fields_percentage: 100
            draft_id: '1110032'
            insufficient_publications:
              - billing_type:
                  id: standard
                  name: Стандарт
                count: 2
                publication_type: standard
                vacancy_type: open
            insufficient_quotas:
              - billing_type:
                  id: standard
                  name: Стандарт
                count: 1
                publication_type: standard
                vacancy_type: open
            last_change_time: '2021-05-18T11:20:48+03:00'
            name: Заведующий отделом розничных продаж
            publication_ready: true
            publication_type: standard
            required_publications:
              - billing_type:
                  id: standard
                  name: Стандарт
                count: 3
                publication_type: standard
                vacancy_type: open
            url: 'https://api.hh.ru/vacancies/drafts/1110032'
            vacancy_type: open
          - areas:
              - id: '2842'
                name: Балыкчы
            auto_publication:
              bill_uid: 4011054/3
              cart_id: '5967030'
            billing_type:
              id: standard_plus
              name: Стандарт плюс
            completed_fields_percentage: 100
            draft_id: '1110031'
            insufficient_publications: null
            insufficient_quotas: null
            last_change_time: null
            name: Куратор
            publication_ready: true
            publication_type: standard_plus
            required_publications: null
            url: 'https://api.hh.ru/vacancies/drafts/1110031'
            vacancy_type: open
        page: 0
        pages: 1
        per_page: 20
    ArtifactsArtifactConditions:
      value:
        counters:
          max: 20
          uploaded: 2
        fields:
          description:
            max_length: 255
            min_length: 0
            required: false
          file:
            max_size: 6291456
            mime_type:
              - image/jpeg
              - image/png
              - image/psd
            required: true
          type:
            required: true
    SavedSearchesSavedSearchesVacancies:
      value:
        found: 1
        items:
          - created_at: '2014-04-11T13:12:17+0400'
            id: '123'
            items:
              count: 304234
              url: 'https://api.hh.ru/vacancies?area=1&saved_search_id=123'
            name: Test autosearch
            new_items:
              count: 12
              url: 'https://api.hh.ru/vacancies?area=1&saved_search_id=123&date_from=2014-01-11T13%3A12%3A17%2B0400'
            subscription: true
        page: 0
        pages: 1
        per_page: 1
    VacanciesVacanciesBlacklisted:
      value:
        found: 1
        items:
          - address: null
            adv_response_url: 'https://api.hh.ru.ts68.pyn.ru/vacancies/8/adv_response?host=hh.ru'
            alternate_url: 'https://hh.ru.ts68.pyn.ru/vacancy/8'
            apply_alternate_url: 'https://hh.ru.ts68.pyn.ru/applicant/vacancy_response?vacancyId=8'
            archived: false
            area:
              id: '1'
              name: Москва
              url: 'https://api.hh.ru.ts68.pyn.ru/areas/1'
            created_at: '2022-09-26T12:37:14+0300'
            department: null
            employer:
              alternate_url: 'https://hh.ru.ts68.pyn.ru/employer/48'
              id: '48'
              logo_urls: null
              name: ADAGFJSKGRRKQ
              trusted: true
              url: 'https://api.hh.ru.ts68.pyn.ru/employers/48'
              vacancies_url: 'https://api.hh.ru.ts68.pyn.ru/vacancies?employer_id=48'
            has_test: false
            id: '8'
            insider_interview: null
            name: JЛEтмюАНрG ДAsёЙtпЁёж
            premium: false
            published_at: '2022-09-26T12:37:14+0300'
            relations:
              - blacklisted
            response_letter_required: false
            response_url: null
            salary:
              currency: USD
              from: 1209
              gross: true
              to: 1506
            sort_point_distance: null
            type:
              id: open
              name: Открытая
            url: 'https://api.hh.ru.ts68.pyn.ru/vacancies/8?host=hh.ru'
        limit_reached: false
        page: 0
        pages: 1
        per_page: 20
    VacanciesAvailableVacancyType:
      value:
        items:
          - available_publications_count: 21
            description: Автоматически поднимается в поисковой выдаче вакансий каждые 3 дня; размещается на 30 дней. Вакансия видна только приглашенным кандидатам. Такую вакансию нельзя будет найти через поиск и увидеть неприглашенным кандидатам
            name: 'Стандарт: без обновления'
            publications:
              - areas_url: 'https://api.hh.ru/areas?price_region_id=1000224&vacancy_publication_flag=true'
                count: 10
                name: Москва и Московская область
              - areas_url: 'https://api.hh.ru/areas?vacancy_publication_flag=true'
                count: 11
                name: В любом регионе
            vacancy_billing_type:
              id: standart
            vacancy_types:
              - id: closed
              - id: open
          - available_publications_count: 0
            description: 'Первые 7 дней публикация выделена цветом, брендирована логотипом вашей компании и находится вверху поисковой выдачи; вакансия отправляется в рассылке подходящим соискателям; размещается на 30 дней.'
            name: 'Премиум: неделя в топе'
            publications: []
            vacancy_billing_type:
              id: free
            vacancy_types:
              - id: open
    VacancyDraftVacancyDraftFull:
      value:
        accept_handicapped: false
        accept_incomplete_resumes: false
        accept_kids: false
        accept_temporary: false
        address:
          building: '10'
          city: Москва
          description: Направо под знак
          id: '4321234'
          lat: 55.807794
          lng: 37.638699
          metro_stations:
            - lat: 55.789704
              line_id: '2'
              line_name: Замоскворецкая
              lng: 37.558212
              station_id: '6.8'
              station_name: Динамо
          show_metro_only: true
          street: ул. Динамо
        allow_messages: true
        areas:
          - id: '1'
            name: Москва
            url: 'https://api.hh.ru/areas/1'
        billing_type:
          id: standard
          name: Стандарт
        branded_template:
          id: marketing
          name: Маркетинг
        code: HRR-3487
        contacts:
          email: user@example.com
          name: Имя
          phones:
            - comment: null
              formatted: '79190000000'
        department:
          id: HH-1455-TECH
          name: 'HeadHunter::Технический департамент'
        description: ...
        driver_license_types:
          - id: A
          - id: B
        employer:
          alternate_url: 'https://hh.ru/employer/4011061'
          id: '4011061'
          logo_urls:
            '90': 'https://hh.ru/employer/logo/3568'
            '240': 'https://hh.ru/employer/logo/3569'
          name: ООО СибНефть
          url: 'https://localhost:2000/employers/4011061'
        employer_service_id: '4325621'
        employment:
          id: full
          name: Полная занятость
        experience:
          id: between1And3
          name: От 1 года до 3 лет
        has_test: false
        key_skills:
          - name: Прием посетителей
          - name: Первичный документооборот
        languages:
          - id: spa
            level:
              id: b2
              name: B2 — Средне-продвинутый
            name: Испанский
          - id: ita
            level:
              id: a1
              name: A1 — Начальный
            name: Итальянский
        manager:
          id: '657438'
        meta_info:
          auto_publication:
            bill_uid: 4011054/3
            cart_id: '5967030'
          completed_fields_percentage: 100
          draft_id: '1110031'
          insufficient_publications: null
          insufficient_quotas: null
          last_change_time: null
          publication_ready: true
          required_publications: null
        name: Секретарь
        professional_roles:
          - id: '96'
            name: 'Программист, разработчик'
        response_letter_required: true
        response_notifications: false
        response_url: null
        salary:
          currency: RUR
          from: 30000
          gross: true
          to: null
        schedule:
          id: fullDay
          name: Полный день
        test:
          required: false
        type:
          id: open
          name: Открытая
        with_zp: false
        working_days:
          - id: only_saturday_and_sunday
            name: Работа только по сб и вс
        working_time_intervals:
          - id: from_four_to_six_hours_in_a_day
            name: Можно работать сменами по 4-6 часов в день
        working_time_modes:
          - id: start_after_sixteen
            name: Можно начинать работать после 16-00
    VacanciesVacanciesFavorited:
      value:
        found: 20
        items:
          - address: null
            adv_response_url: 'https://api.hh.ru.ts68.pyn.ru/vacancies/239/adv_response?host=hh.ru'
            alternate_url: 'https://hh.ru.ts68.pyn.ru/vacancy/239'
            apply_alternate_url: 'https://hh.ru.ts68.pyn.ru/applicant/vacancy_response?vacancyId=239'
            archived: false
            area:
              id: '1'
              name: Москва
              url: 'https://api.hh.ru.ts68.pyn.ru/areas/1'
            created_at: '2022-09-19T12:31:51+0300'
            department: null
            employer:
              alternate_url: 'https://hh.ru.ts68.pyn.ru/employer/275'
              id: '275'
              logo_urls: null
              name: JAFJGESKCUOPG
              trusted: true
              url: 'https://api.hh.ru.ts68.pyn.ru/employers/275'
              vacancies_url: 'https://api.hh.ru.ts68.pyn.ru/vacancies?employer_id=275'
            has_test: false
            id: '239'
            insider_interview: null
            name: TEST_VACANCY 1
            premium: false
            published_at: '2022-09-19T12:31:51+0300'
            relations:
              - favorited
            response_letter_required: false
            response_url: null
            salary:
              currency: USD
              from: 1209
              gross: true
              to: 1508
            sort_point_distance: null
            type:
              id: open
              name: Открытая
            url: 'https://api.hh.ru.ts68.pyn.ru/vacancies/239?host=hh.ru'
        page: 0
        pages: 1
        per_page: 20
    ApplicantCommentsAddApplicantCommentExample:
      value:
        access_type:
          id: owner
          name: Виден только мне
        author:
          full_name: Иванова Мария Ивановна
        created_at: '2015-08-27T10:30:14+0300'
        id: '123654'
        is_mine: true
        text: не считаю нужным
    SuggestsSuggestsPositions:
      value:
        items:
          - id: '2569'
            professional_roles:
              - accept_incomplete_resumes: false
                id: '70'
                name: 'Менеджер по продажам, менеджер по работе с клиентами'
            text: Менеджер по развитию бизнеса
    EmployerManagerInfo:
      value:
        additional_phone:
          city: '916'
          comment: личный
          country: '7'
          number: '4555555'
        area:
          id: '1'
          name: Москва
          url: 'https://api.hh.ru/areas/1'
        email: employer@example.com
        first_name: Иван
        full_name: Иванов Иван Иванович
        id: '1507922'
        is_main_contact_person: false
        last_name: Иванов
        manager_type:
          id: manager
          name: Менеджер
        middle_name: Иванович
        permissions:
          - id: can_create_vacancy
            name: Создание и продление вакансий
          - id: can_view_resume_contacts
            name: Просмотр контактов соискателей
        phone:
          city: '495'
          comment: с 9 до 17
          country: '7'
          number: '1568055'
        position: Менеджер по подбору персонала
        vacancies_count: 0
    ArtifactsPortfolioDescription:
      value:
        description: ...
    ApplicantCommentsApplicantCommentsListExample:
      value:
        found: 2
        items:
          - access_type:
              id: coworkers
              name: Виден мне и моим коллегам
            author:
              full_name: Иванов Иван Иванович
            created_at: '2015-08-27T10:19:55+0300'
            id: '123456'
            is_mine: false
            text: |-
              обратить внимание на данного кандидата
              срочно!
          - access_type:
              id: owner
              name: Виден только мне
            author:
              full_name: Иванова Мария Ивановна
            created_at: '2015-08-27T10:30:14+0300'
            id: '123654'
            is_mine: true
            text: не считаю нужным
        page: 0
        pages: 1
        per_page: 20
    VacanciesVacancyProlongateUnavailable:
      value:
        actions:
          - disable_reason:
              id: standard_plus_publication_is_updated_automatically
              name: 'Вакансия "Стандарт Плюс" не может быть обновлена, это происходит автоматически раз в три дня.'
            enabled: false
            id: prolongate
        expires_at: '2015-11-19T17:10:48+0300'
        id: '123456789'
    AddEmployerManager:
      value:
        additional_phone:
          city: '916'
          comment: личный
          country: '7'
          number: '4555555'
        area:
          id: '1'
        email: employer@example.com
        first_name: Илья
        is_main_contact_person: false
        last_name: Федотов
        manager_type:
          id: manager
        middle_name: Игоревич
        permissions:
          - id: can_create_vacancy
          - id: can_view_resume_contacts
        phone:
          city: '495'
          comment: с 9 до 17
          country: '7'
          number: '1568055'
        position: Менеджер по подбору персонала
    SavedSearchesSavedSearchResumeItem:
      value:
        created_at: '2015-01-01T13:12:17+0400'
        id: '609535'
        items:
          count: 55
          url: 'https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1'
        name: Managers in Moscow
        new_items:
          count: 15
          url: 'https://api.hh.ru/resumes?order_by=publication_time&saved_search_id=123456&text=manager&area=1&last_used=2015-11-12T18%3A06%3A04%2B0300'
        subscription: true
    EmployerDictionariesTests:
      value:
        items:
          - id: '75169'
            name: Базовый тест на знание C++
          - id: '75168'
            name: Логический тест
    EmployersEmployersExample:
      value:
        found: 1
        items:
          - alternate_url: 'https://hh.ru/employer/1455'
            id: '1455'
            logo_urls:
              '90': 'https://hh.ru/employer-logo/289027.png'
              '240': 'https://hh.ru/employer-logo/289169.png'
              original: 'https://hh.ru/file/2352807.png'
            name: HeadHunter
            open_vacancies: 19
            url: 'https://api.hh.ru/employers/1455'
            vacancies_url: 'https://api.hh.ru/vacancies?employer_id=1455'
        page: 0
        pages: 1
        per_page: 20
    DictionariesDictionaries:
      value:
        applicant_comment_access_type:
          - id: coworkers
            name: Виден мне и моим коллегам
          - id: owner
            name: Виден только мне
        applicant_comments_order:
          - id: creation_time_desc
            name: по убыванию даты публикации
          - id: creation_time_asc
            name: по дате публикации
        applicant_negotiation_status:
          - id: all
            name: Все
          - id: active
            name: Активные
          - id: invitations
            name: Активные приглашения
          - id: response
            name: Активные отклики
          - id: discard
            name: Отказ
          - id: archived
            name: Архивированные
          - id: non_archived
            name: 'Все, кроме архивированных'
          - id: deleted
            name: Скрытые
        business_trip_readiness:
          - id: ready
            name: готов к командировкам
          - id: sometimes
            name: готов к редким командировкам
          - id: never
            name: не готов к командировкам
        currency:
          - abbr: AZN
            code: AZN
            default: false
            in_use: false
            name: Манаты
            rate: 0.027728
          - abbr: "бел.\_руб."
            code: BYR
            default: false
            in_use: false
            name: Белорусские рубли
            rate: 0.042685
          - abbr: EUR
            code: EUR
            default: false
            in_use: true
            name: Евро
            rate: 0.015982
          - abbr: GEL
            code: GEL
            default: false
            in_use: false
            name: Грузинский лари
            rate: 0.0344
          - abbr: KGS
            code: KGS
            default: false
            in_use: false
            name: Киргизский сом
            rate: 1.356611
          - abbr: KZT
            code: KZT
            default: false
            in_use: false
            name: Тенге
            rate: 7.809145
          - abbr: руб.
            code: RUR
            default: true
            in_use: true
            name: Рубли
            rate: 1
          - abbr: грн.
            code: UAH
            default: false
            in_use: false
            name: Гривны
            rate: 0.596833
          - abbr: USD
            code: USD
            default: false
            in_use: true
            name: Доллары
            rate: 0.016311
          - abbr: сум
            code: UZS
            default: false
            in_use: false
            name: Узбекский сум
            rate: 177.916948
        driver_license_types:
          - id: A
          - id: B
          - id: C
          - id: D
          - id: E
          - id: BE
          - id: CE
          - id: DE
          - id: TM
          - id: TB
        education_level:
          - id: secondary
            name: Среднее
          - id: special_secondary
            name: Среднее специальное
          - id: unfinished_higher
            name: Неоконченное высшее
          - id: higher
            name: Высшее
          - id: bachelor
            name: Бакалавр
          - id: master
            name: Магистр
          - id: candidate
            name: Кандидат наук
          - id: doctor
            name: Доктор наук
        employer_active_vacancies_order:
          - id: name_asc
            name: по заголовку
          - id: name_desc
            name: 'по заголовку, в обратном порядке'
          - id: expiration_date_asc
            name: по дате
          - id: expiration_date_desc
            name: по убыванию даты
        employer_archived_vacancies_order:
          - id: name_asc
            name: по заголовку
          - id: name_desc
            name: 'по заголовку, в обратном порядке'
          - id: archive_time_asc
            name: по дате архивации
          - id: archive_time_desc
            name: по убыванию даты архивации
        employer_hidden_vacancies_order:
          - id: name_asc
            name: по заголовку
          - id: name_desc
            name: 'по заголовку, в обратном порядке'
          - id: archive_time_asc
            name: по дате архивации
          - id: archive_time_desc
            name: по убыванию даты архивации
        employer_relation:
          - id: blacklisted
            name: Скрыт из поиска вакансий
        employer_type:
          - id: company
            name: Прямой работодатель
          - id: agency
            name: Кадровое агентство
          - id: project_director
            name: Руководитель проекта
          - id: private_recruiter
            name: Частный рекрутер
        employment:
          - id: full
            name: Полная занятость
          - id: part
            name: Частичная занятость
          - id: project
            name: Проектная работа
          - id: volunteer
            name: Волонтерство
          - id: probation
            name: Стажировка
        experience:
          - id: noExperience
            name: Нет опыта
          - id: between1And3
            name: От 1 года до 3 лет
          - id: between3And6
            name: От 3 до 6 лет
          - id: moreThan6
            name: Более 6 лет
        gender:
          - id: male
            name: Мужской
          - id: female
            name: Женский
        language_level:
          - id: a1
            name: A1 — Начальный
          - id: a2
            name: A2 — Элементарный
          - id: b1
            name: B1 — Средний
          - id: b2
            name: B2 — Средне-продвинутый
          - id: c1
            name: C1 — Продвинутый
          - id: c2
            name: C2 — В совершенстве
          - id: l1
            name: Родной
        messaging_status:
          - id: archived
            name: Вакансия отправлена в архив
          - id: ok
            name: Переписка доступна
          - id: disabled_by_employer
            name: Работодатель отключил переписку
          - id: in_a_row_limit
            name: 'Вы отправили 5 сообщений подряд. Дождитесь ответа, чтобы написать еще'
          - id: overall_limit
            name: Превышено число сообщений в переписке
          - id: no_invitation
            name: Переписка доступна только после приглашения
          - id: resume_deleted
            name: Резюме удалено
          - id: prohibited
            name: Переписка недоступна
        negotiations_order:
          - id: updated_at
            name: по дате обновления
          - id: created_at
            name: по дате добавления
        negotiations_participant_type:
          - id: applicant
            name: Соискатель
          - id: employer
            name: Работодатель
        negotiations_state:
          - id: response
            name: Отклик
          - id: invitation
            name: Приглашение
          - id: discard
            name: Отказ
          - id: hidden
            name: Скрытый
        phone_call_status:
          - id: pick_successful
            name: Установка соединения
          - id: calling
            name: Звонок
          - id: did_not_connect
            name: Абонент временно недоступен
          - id: call_in_progress
            name: Телефонный разговор
          - id: call_error
            name: Техническая ошибка
          - id: call_ended
            name: Телефонный разговор завершен
        preferred_contact_type:
          - id: home
            name: Домашний телефон
          - id: work
            name: Рабочий телефон
          - id: cell
            name: Мобильный телефон
          - id: email
            name: Эл. почта
        relocation_type:
          - id: no_relocation
            name: не готов к переезду
          - id: relocation_possible
            name: готов к переезду
          - id: relocation_desirable
            name: хочу переехать
        resume_access_type:
          - id: no_one
            name: не видно никому
          - id: whitelist
            name: видно выбранным компаниям
          - id: blacklist
            name: скрыто от выбранных компаний
          - id: clients
            name: 'видно всем компаниям, зарегистрированным на HeadHunter'
          - id: everyone
            name: видно всему интернету
          - id: direct
            name: доступно только по прямой ссылке
        resume_contacts_site_type:
          - id: personal
            name: Другой сайт
          - id: moi_krug
            name: Мой круг
          - id: livejournal
            name: LiveJournal
          - id: linkedin
            name: LinkedIn
          - id: freelance
            name: Free-lance
          - id: skype
            name: Skype
          - id: icq
            name: ICQ
        resume_hidden_fields:
          - id: names_and_photo
            name: ФИО и фотографию
          - id: phones
            name: Все указанные в резюме телефоны
          - id: email
            name: Электронную почту
          - id: other_contacts
            name: 'Прочие контакты (Skype, ICQ, соцсети)'
          - id: experience
            name: Все места работы
        resume_moderation_note:
          - id: bad
            name: Резюме составлено небрежно.
          - id: block_full_name
            name: В резюме отсутствует полное имя кандидата.
          - id: bad_description
            name: 'Укажите желаемую позицию, чтобы повысить свои шансы найти работу.'
          - id: block_no_education_place_or_date
            name: Отсутствуют данные об учебном заведении и дате его окончания.
          - id: bad_education
            name: Плохо описано образование.
          - id: bad_education_student
            name: 'Укажите полное название учебного заведения, факультет и планируемый год окончания.'
          - id: block_no_function
            name: Опишите подробнее свои обязанности и функции.
          - id: block_work_place
            name: Не указан опыт работы за последнее время
          - id: no_company_name
            name: Укажите названия мест работы.
          - id: no_company_description
            name: 'Укажите сферу деятельности компаний, в которых Вы работали.'
          - id: no_position
            name: Плохо описаны занимаемые должности.
          - id: no_date
            name: Отсутствуют даты начала и окончания работы.
          - id: bad_function
            name: Плохо описаны функции и обязанности.
          - id: not_enough_information
            name: 'Укажите больше дополнительной информации: владение иностранными языками, знание компьютерных программ и др.'
          - id: lot_information
            name: Слишком много дополнительной информации.
          - id: no_recommendation
            name: Вы не предоставили ни одну рекомендацию.
          - id: careless_additional_information
            name: 'Обратите внимание на раздел «Ключевые навыки». Укажите в нём сведения, которые выгодно отличат Вас в качестве претендента на желаемую позицию. Проверьте орфографию и опечатки.'
          - id: careless_photo
            name: 'Рекомендуем Вам изменить фотографию для резюме. Лучше размещать фотографии, где Вы изображены в деловом или повседневном костюме.'
          - id: careless_key_skill_information
            name: 'Отредактируйте раздел «Ключевые навыки» Вашего резюме, поскольку указанная информация не вполне соответствует формату и/или содержит опечатки.'
          - id: incorrect_phone_number
            name: 'В резюме указан несуществующий номер телефона. Если номер корректен, свяжитесь со службой поддержки'
          - id: block_obscenity
            name: Мат в резюме
          - id: block_obscenity_name
            name: Мат в ФИО
          - id: block_obscenity_title
            name: Мат в названии должности
          - id: block_obscenity_experience
            name: Мат в разделе "Опыт работы"
          - id: block_obscenity_skills
            name: Мат в поле "О себе"
          - id: block_obscenity_key_skills
            name: Мат в ключевых навыках
          - id: block_obscenity_education
            name: Мат в разделе "Образование"
          - id: block_obscenity_recommendation
            name: Мат в разделе "Рекомендации"
          - id: block_experience_in_one_place
            name: Укажите опыт отдельно для каждой компании
          - id: experience_caps
            name: 'При описании опыта работы проследите, что заглавные буквы использованы только в начале предложений или для имен собственных'
          - id: experience_multilang
            name: Опыт работы должен быть описан на одном языке
          - id: experience_spelling
            name: Исправьте орфографические ошибки в описании опыта работы
          - id: block_experience_in_additional_information
            name: Опишите опыт работы в соответствующих полях
          - id: additional_information_caps
            name: 'При заполнении поля "О себе" проследите, что ЗАГЛАВНЫЕ БУКВЫ использованы только в начале предложений или для имен собственных'
          - id: additional_information_multilang
            name: Поле "О себе" должно быть написано на одном языке
          - id: additional_information_spelling
            name: Исправьте орфографические ошибки в поле "О себе"
        resume_search_experience_period:
          - id: all_time
            name: за всё время опыта
          - id: last_year
            name: за последний год
          - id: last_three_years
            name: за последние 3 года
          - id: last_six_years
            name: за последние 6 лет
        resume_search_fields:
          - id: everywhere
            name: везде
          - id: title
            name: в названии резюме
          - id: education
            name: в образовании
          - id: skills
            name: в ключевых навыках
          - id: experience
            name: в опыте работы
          - id: experience_company
            name: в компаниях и отраслях
          - id: experience_position
            name: в должностях
          - id: experience_description
            name: в обязанностях
        resume_search_label:
          - id: only_with_photo
            name: Только с фотографией
          - id: only_with_salary
            name: Не показывать резюме без зарплаты
          - id: only_with_age
            name: Не показывать резюме без указания возраста
          - id: only_with_gender
            name: Не показывать резюме без указания пола
          - id: only_with_vehicle
            name: Есть личный автомобиль
          - id: exclude_viewed_by_user_id
            name: 'Скрыть резюме, просмотренные мной'
          - id: exclude_viewed_by_employer_id
            name: 'Скрыть резюме, просмотренные всей компанией'
          - id: only_in_responses
            name: "Показать только из\_откликов и\_приглашений"
        resume_search_logic:
          - id: all
            name: Все слова встречаются
          - id: any
            name: Любое из слов встречается
          - id: phrase
            name: Точная фраза встречается
          - id: except
            name: Не встречаются
        resume_search_order:
          - id: publication_time
            name: по дате изменения
          - id: salary_desc
            name: по убыванию зарплат
          - id: salary_asc
            name: по возрастанию зарплаты
          - id: relevance
            name: по соответствию
        resume_search_relocation:
          - id: living_or_relocation
            name: Живут в указанном регионе или готовы переехать в него
          - id: living
            name: Живут в указанном регионе
          - id: living_but_relocation
            name: Живут в указанном регионе и готовы к переезду куда-либо
          - id: relocation
            name: 'Не живут в указанном регионе, но готовы переехать в него'
        resume_status:
          - id: not_published
            name: не опубликовано
          - id: published
            name: опубликовано
          - id: blocked
            name: заблокировано
          - id: on_moderation
            name: на модерации
        schedule:
          - id: fullDay
            name: Полный день
          - id: shift
            name: Сменный график
          - id: flexible
            name: Гибкий график
          - id: remote
            name: Удаленная работа
          - id: flyInFlyOut
            name: Вахтовый метод
        travel_time:
          - id: any
            name: Не имеет значения
          - id: less_than_hour
            name: Не более часа
          - id: from_hour_to_one_and_half
            name: Не более полутора часов
        vacancy_billing_type:
          - id: free
            name: Бесплатная
          - id: standard
            name: Стандарт
          - id: standard_plus
            name: Стандарт плюс
          - id: premium
            name: Премиум
        vacancy_cluster:
          - id: area
            name: Регион
          - id: metro
            name: Метро
          - id: salary
            name: Уровень дохода
          - id: professional_area
            name: Профобласть
          - id: specialization
            name: Специализация
          - id: industry
            name: Отрасль компании
          - id: sub_industry
            name: Сфера компании
          - id: experience
            name: Опыт работы
          - id: employment
            name: Тип занятости
          - id: schedule
            name: График работы
          - id: label
            name: Исключение
          - id: professional_role
            name: Профессиональная роль
          - id: district
            name: Район
        vacancy_label:
          - id: with_address
            name: Только с адресом
          - id: accept_handicapped
            name: Только доступные для людей с инвалидностью
          - id: not_from_agency
            name: Без вакансий агентств
          - id: accept_kids
            name: Только доступные для соискателей от 14 лет
          - id: accredited_it
            name: Только аккредитованные ИТ-компании
          - id: low_performance
            name: 'Только вакансии, у которых меньше 10 откликов'
        vacancy_not_prolonged_reason:
          - id: vacancy_archived
            name: Вы не можете продлевать архивную/заблокированную вакансию.
          - id: standard_plus_cannot_be_closed
            name: Вакансия "Стандарт Плюс" не может быть закрытой.
          - id: standard_plus_publication_is_updated_automatically
            name: 'Вакансия "Стандарт Плюс" не может быть обновлена, это происходит автоматически раз в три дня.'
          - id: too_early_to_prolongate_free_publication
            name: 'Бесплатная вакансия не может быть обновлена, т.к. предыдущее обновление было менее трех дней назад.'
          - id: too_early_to_prolongate_standard_publication
            name: 'Вакансия "Стандарт" не может быть обновлена, т.к. предыдущее обновление было менее трех дней назад.'
          - id: free_prolongation_not_available
            name: Бесплатная вакансия не может быть обновлена.
          - id: not_enough_quotas
            name: Вакансия не может быть обновлена. Квота на публикацию исчерпана.
          - id: not_enough_purchased_services
            name: Вакансия не может быть обновлена. Недостаточно купленных услуг.
          - id: vacancy_publication_disabled_in_area
            name: Размещение в данном регионе невозможно. Для размещения вакансий в странах Прибалтики обратитесь к персональному менеджеру
        vacancy_relation:
          - id: favorited
            name: В избранном
          - id: got_response
            name: Вы отправили резюме
          - id: got_invitation
            name: Вас пригласили
          - id: got_rejection
            name: Вам отказали
          - id: blacklisted
            name: Скрыта из поиска
        vacancy_search_fields:
          - id: name
            name: в названии вакансии
          - id: company_name
            name: в названии компании
          - id: description
            name: в описании вакансии
        vacancy_search_order:
          - id: publication_time
            name: по дате
          - id: salary_desc
            name: по убыванию дохода
          - id: salary_asc
            name: по возрастанию дохода
          - id: relevance
            name: по соответствию
          - id: distance
            name: по удалённости
        vacancy_type:
          - id: open
            name: Открытая
          - id: closed
            name: Закрытая
          - id: anonymous
            name: Анонимная
          - id: direct
            name: Рекламная
        working_days:
          - id: only_saturday_and_sunday
            name: "Работа только по\_сб\_и\_вс"
        working_time_intervals:
          - id: from_four_to_six_hours_in_a_day
            name: "Можно работать сменами по\_4–6 часов в\_день"
        working_time_modes:
          - id: start_after_sixteen
            name: 'Можно начинать работать после 16:00'
    EmployerManagers:
      value:
        found: 1
        items:
          - additional_phone:
              city: '916'
              comment: личный
              country: '7'
              number: '4555555'
            area:
              id: '1'
              name: Москва
              url: 'https://api.hh.ru/areas/1'
            email: employer@example.com
            first_name: Иван
            full_name: Иванов Иван Иванович
            id: '1507922'
            is_main_contact_person: false
            last_name: Иванов
            middle_name: Иванович
            phone:
              city: '495'
              comment: с 9 до 17
              country: '7'
              number: '1568055'
            position: Менеджер по подбору персонала
            vacancies_count: 0
        page: 0
        pages: 1
        per_page: 20
    DictionariesIndustries:
      value:
        - id: '49'
          industries:
            - id: '49.408'
              name: Ритуальные услуги
          name: Услуги для населения
    SuggestsCompanies:
      value:
        items:
          - area:
              id: '113'
              name: Россия
            id: '1455'
            industries:
              - id: '7.541'
                name: Интернет-компания
            logo_urls:
              '90': 'https://hh.ru/employer-logo/289055.png'
            text: HeadHunter
            url: 'http:/hh.ru'
    EmployersEmployerDepartments:
      value:
        items:
          - id: 18320489-18320489-dept1
            name: DEPT#1
          - id: 18320489-18320489-dept2
            name: DEPT#2
    SavedSearchesSavedSearchVacancyItem:
      value:
        created_at: '2014-04-11T13:12:17+0400'
        id: '123'
        items:
          count: 304234
          url: 'https://api.hh.ru/vacancies?area=1&saved_search_id=123'
        name: Test autosearch
        new_items:
          count: 12
          url: 'https://api.hh.ru/vacancies?area=1&saved_search_id=123&date_from=2014-01-11T13%3A12%3A17%2B0400'
        subscription: true
    Languages:
      value:
        - id: ita
          name: Итальянский
        - id: nld
          name: Голландский
        - id: ell
          name: Греческий
    SuggestsEducationalInstitutions:
      value:
        items:
          - acronym: МГТУ им. Н.Э. Баумана
            area:
              id: '1'
              name: Москва
            id: '38921'
            synonyms: бывш. МВТУ им. Н.Э. Баумана
            text: 'Московский государственный технический университет им. Н.Э. Баумана, Москва'
    Locales:
      value:
        - current: true
          id: RU
          name: Русский
        - current: false
          id: EN
          name: English
    EmployerManagerId:
      value:
        id: '78789890'
    SuggestsSkillSet:
      value:
        items:
          - id: '2716'
            text: Системы тепло- и холодоснабжения
          - id: '3019'
            text: Холодный цех
          - id: '3018'
            text: Холодные продажи
    VacanciesVacancies:
      value:
        arguments: null
        clusters: null
        found: 13
        items:
          - address:
              building: 9с10
              city: Москва
              description: на проходной потребуется паспорт
              lat: 55.807794
              lng: 37.638699
              metro_stations:
                - lat: 55.807794
                  line_id: '6'
                  line_name: Калужско-Рижская
                  lng: 37.638699
                  station_id: '6.8'
                  station_name: Алексеевская
              street: улица Годовикова
            alternate_url: 'https://hh.ru/vacancy/8331228'
            apply_alternate_url: 'https://hh.ru/applicant/vacancy_response?vacancyId=8331228'
            area:
              id: '1'
              name: Москва
              url: 'https://api.hh.ru/areas/1'
            contacts:
              email: user@example.com
              name: Имя
              phones:
                - city: '985'
                  comment: null
                  country: '7'
                  number: 000-00-00
            counters:
              responses: 0
            department:
              id: HH-1455-TECH
              name: 'HeadHunter::Технический департамент'
            employer:
              alternate_url: 'https://hh.ru/employer/1455'
              id: '1455'
              logo_urls:
                '90': 'https://hh.ru/employer-logo/289027.png'
                '240': 'https://hh.ru/employer-logo/289169.png'
                original: 'https://hh.ru/file/2352807.png'
              name: HeadHunter
              trusted: true
              url: 'https://api.hh.ru/employers/1455'
            has_test: true
            id: '8331228'
            insider_interview:
              id: '12345'
              url: 'https://hh.ru/interview/12345?employerId=777'
            name: Секретарь
            published_at: '2013-07-08T16:17:21+0400'
            relations: []
            response_letter_required: true
            response_url: null
            salary:
              currency: RUR
              from: 30000
              gross: true
              to: null
            schedule:
              id: fullDay
              name: Полный день
            snippet:
              requirement: 'Высшее образование. Опыт работы в качестве <highlighttext>секретаря</highlighttext>, офис-менеджера. Знание делопроизводства, документооборота. Коммуникативные навыки.'
              responsibility: 'Документооборот (регистрация, отправка, контроль исполнения писем, ведение протоколов, отчетность). Распределение корреспонденции. Прием и распределение телефонных звонков.'
            sort_point_distance: 226.001293
            type:
              id: open
              name: Открытая
            url: 'https://api.hh.ru/vacancies/8331228'
        page: 0
        pages: 13
        per_page: 1
    VacanciesVacancyProlongateAvailable:
      value:
        actions:
          - enabled: true
            id: prolongate
            method: POST
            url: 'https://api.hh.ru/vacancies/123456789/prolongate'
        expires_at: '2015-11-19T17:10:48+0300'
        id: '123456789'
    EmployerManagerTypes:
      value:
        items:
          - available_permissions:
              - id: can_create_vacancy
                name: Создание и продление вакансий
              - id: can_view_resume_contacts
                name: Просмотр контактов соискателей
            id: manager
            name: Менеджер
    EditEmployerManagers:
      value:
        additional_phone:
          city: '916'
          comment: личный
          country: '7'
          number: '4555555'
        permissions:
          - id: can_create_vacancy
            name: Создание и продление вакансий
          - id: can_view_resume_contacts
            name: Просмотр контактов соискателей
        phone:
          city: '495'
          comment: с 9 до 17
          country: '7'
          number: '1568055'
        position: Менеджер по подбору персонала
    SuggestsVacancySearchKeyword:
      value:
        items:
          - text: Java
          - text: JavaScript
          - text: Java программист
    DictionariesFaculties:
      value:
        - id: '23'
          name: Физико-химический факультет
    Id:
      value:
        id: '754'
    SuggestsSuggestsAreas:
      value:
        items:
          - id: '1'
            text: Москва
            url: 'https://api.hh.ru/areas/1'
          - id: '2019'
            text: Московская область
            url: 'https://api.hh.ru/areas/2019'
    ArtifactsArtifactsPhoto:
      value:
        found: 1
        items:
          - id: '92278992'
            medium: 'http://...'
            small: 'http://...'
            state:
              id: ok
              name: ok
        page: 0
        pages: 1
        per_page: 1
    EmployersEmployerInfoExample:
      value:
        alternate_url: 'https://hh.ru/employer/1455'
        applicant_services:
          target_employer:
            count: 2
        area:
          id: '113'
          name: Россия
          url: 'https://api.hh.ru/areas/113'
        branded_description: <style>...</style><div>...</div><script></script>
        branding:
          template_code: 'makeup:123'
          template_version_id: '10'
          type: makeup
        description: ...
        id: '1455'
        industries:
          - id: '7.540'
            name: Разработка программного обеспечения
          - id: '9.399'
            name: Мобильная связь
        insider_interviews:
          - id: '12345'
            title: Лучшие из лучших
            url: 'https://hh.ru/interview/12345?employerId=1455'
          - id: '54321'
            title: История успеха
            url: 'https://hh.ru/interview/54321?employerId=1455'
        logo_urls:
          '90': 'https://hh.ru/employer-logo/289027.png'
          '240': 'https://hh.ru/employer-logo/289169.png'
          original: 'https://hh.ru/file/2352807.png'
        name: HeadHunter
        open_vacancies: 19
        relations: []
        site_url: 'https://hh.ru'
        trusted: true
        type: company
        vacancies_url: 'https://api.hh.ru/vacancies?employer_id=1455'
    EmployersEmployersBlacklisted:
      value:
        found: 1
        items:
          - alternate_url: 'https://hh.ru.ts68.pyn.ru/employer/40'
            id: '40'
            logo_urls:
              '90': 'https://hhcdn.ru.ts68.pyn.ru/employer-logo/00003.jpeg'
              '240': 'https://hhcdn.ru.ts68.pyn.ru/employer-logo/00004.jpeg'
              original: 'https://hhcdn.ru.ts68.pyn.ru/employer-logo-original/1.jpeg'
            name: test name
            open_vacancies: 0
            url: 'https://api.hh.ru.ts68.pyn.ru/employers/40'
            vacancies_url: 'https://api.hh.ru.ts68.pyn.ru/vacancies?employer_id=40'
        limit_reached: false
        page: 0
        pages: 1
        per_page: 20
    ArtifactsArtifactsPortfolio:
      value:
        found: 1
        items:
          - description: ...
            id: '92278992'
            medium: 'http://...'
            small: 'http://...'
            state:
              id: ok
              name: ok
        page: 0
        pages: 1
        per_page: 1
    SuggestsFieldsOfStudy:
      value:
        items:
          - id: '382'
            text: 'Холодильная, криогенная техника и кондиционирование (Инженер)'
    ServicesEmployerServices:
      value:
        items:
          - activated_at: '2018-02-01T12:00:00+0300'
            balance: null
            expires_at: '2019-01-31T12:00:00+0300'
            id: '12345678'
            service_type:
              id: API_UNLIMITED
              name: Доступ к API HH
          - activated_at: '2019-02-01T12:00:00+0300'
            balance:
              actual: 10000
              initial: 10000
            expires_at: '2020-01-31T12:00:00+0300'
            id: '12345680'
            service_type:
              id: API_LIMITED
              name: Пакет запросов к API HH
    ArtifactsArtifactUpload:
      value:
        id: '123456'
        medium: null
        small: null
        state:
          id: processing
          name: processing
    EmployerManagerLimits:
      value:
        left:
          resume_view: 50
          resume_view_from_api: 48
        limits:
          resume_view: 100
          resume_view_from_api: 50
        spend:
          resume_view: 1
          resume_view_from_api: 2
    ResumesResumeNegotiationsHistory:
      value:
        vacancies:
          - archived: false
            can_edit: true
            id: '321'
            items:
              - created_at: '2017-01-30T15:06:47+0300'
                employer_state:
                  id: offer
                  name: Предложение о работе
                with_message: true
            messages_url: 'https://api.hh.ru/negotiations/123/messages'
            name: Тестовая вакансия
            negotiations_url: 'https://api.hh.ru/negotiations/123'
            url: 'https://api.hh.ru/vacancies/321'
  parameters:
    Locale:
      description: |
        Идентификатор локали (см. [Локализация](#tag/Obshie-spravochniki/paths/~1locales/get))
      example: EN
      in: query
      name: locale
      required: false
      schema:
        default: RU
        type: string
    HHUserAgent:
      description: |
        Название приложения и контактная почта разработчика (см. [Информация о клиенте](https://github.com/hhru/api/blob/master/docs/general.md#%D1%82%D1%80%D0%B5%D0%B1%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%BA-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%B0%D0%BC)).
      example: MyApp/1.0 (my-app-feedback@example.com)
      in: header
      name: HH-User-Agent
      required: true
      schema:
        type: string
    Host:
      description: |
        Доменное имя сайта (см. [Выбор сайта](https://github.com/hhru/api/blob/master/docs/hosts.md))
      example: hh.ru
      in: query
      name: host
      required: false
      schema:
        default: hh.ru
        enum:
          - hh.ru
          - grc.ua
          - rabota.by
          - hh1.az
          - hh.uz
          - hh.kz
          - headhunter.ge
          - headhunter.kg
        type: string
  responses:
    ErrorBadArgument:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsBadArgumentErrors'
      description: Ошибка в параметре запроса
    SuccessCreated:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Id'
      description: Успешно создано
    ErrorSavedSearchNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsNotFoundSavedSearchErrors'
      description: Автопоиск или менеджер не найден
    ErrorNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsNotFoundErrors'
      description: Не найдено или не доступно текущему пользователю
    ErrorBothChangedConflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsConflictBothChangedErrors'
      description: Ошибка запроса при одновременном изменении параметров
    SuccessNoContent:
      description: Успешный ответ
    ErrorBadAuthorization:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      description: Ошибка авторизации пользователя
  schemas:
    VacancyDraftDraftResponseSchema:
      allOf:
        - $ref: '#/components/schemas/Id'
        - example:
            $ref: '#/components/examples/VacancyDraftVacancyDraftResponse'
          properties:
            ignored_fields:
              description: 'Поля, которые не были сохранены при создании черновика, вследствие не верного заполнения'
              items:
                description: Имя проигнорированного поля
                type: string
              type: array
            name:
              description: Заголовок черновика
              type: string
            publication_ready:
              description: Готовность черновика к публикации
              type: boolean
            validation_errors:
              description: 'Поля, которые были сохранены при создании черновика, с соответствующими ошибками, которые необходимо поправить для успешной публикации вакансии на основе черновика'
              items:
                $ref: '#/components/schemas/VacancyDraftDraftVacancyError'
              type: array
          required:
            - name
            - publication_ready
          type: object
      type: object
    VacancyDraftDraftVacancyError:
      properties:
        reason:
          description: Причина ошибки
          type: string
        value:
          description: 'Название поля, в котором допущена ошибка'
          type: string
      required:
        - value
      title: Ошибка
      type: object
    Id:
      description: Информация о созданном объекте
      nullable: false
      properties:
        id:
          description: Идентификатор созданного объекта
          example: '22'
          type: string
      required:
        - id
      type: object
    WebhookSubscriptionCreate:
      additionalProperties: false
      properties:
        actions:
          description: 'Cписок событий, на которые нужно подписаться. Дубликаты игнорируются'
          items:
            anyOf:
              - $ref: '#/components/schemas/WebhookActionItem'
          minItems: 1
          type: array
        url:
          description: 'URL, на который будет отправляться POST запрос при наступлении события.'
          example: 'http://www.example.com'
          format: uri
          type: string
      required:
        - url
        - actions
      title: Объект подписки
      type: object
    WebhookActionItem:
      additionalProperties: false
      properties:
        type:
          description: |
            <a name="ACTION_TYPE"></a>
            тип события - доступны для типа подписчика USER:
              * NEW_NEGOTIATION_VACANCY - новый отклик на вакансию
              * NEW_RESPONSE_OR_INVITATION_VACANCY - новый отклик или приглашение на вакансии
              * VACANCY_ARCHIVATION - архивация вакансии
              * VACANCY_PUBLICATION_FOR_VACANCY_MANAGER - публикация вакансии
              * VACANCY_PROLONGATION - продление вакансии
          enum:
            - NEW_NEGOTIATION_VACANCY
            - NEW_RESPONSE_OR_INVITATION_VACANCY
            - VACANCY_ARCHIVATION
            - VACANCY_PUBLICATION_FOR_VACANCY_MANAGER
            - VACANCY_PROLONGATION
          example: NEW_NEGOTIATION_VACANCY
          type: string
      required:
        - type
      title: Типы событий
      type: object
    EmployersEmployersBlacklistedResponse:
      allOf:
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
        - $ref: '#/components/schemas/EmployersEmployersBlacklisted'
          type: object
      title: Скрытые работодатели
      type: object
    EmployersEmployersBlacklisted:
      properties:
        items:
          description: Массив скрытых работодателей
          items:
            $ref: '#/components/schemas/EmployersEmployersBlacklistedItem'
          type: array
        limit_reached:
          description: Превышено ли максимальное количество элементов в списке
          type: boolean
    EmployersEmployersBlacklistedItem:
      properties:
        alternate_url:
          description: Ссылка на представление компании на сайте
          nullable: true
          type: string
        id:
          description: Идентификатор компании
          nullable: true
          type: string
        logo_urls:
          description: Ссылки на логотипы работодателя разных размеров
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/_IncludesLogoUrls'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        name:
          description: Название компании
          type: string
        open_vacancies:
          description: Количество открытых вакансий у работодателя
          type: number
        url:
          description: 'URL, на который нужно сделать GET-запрос, чтобы получить информацию о компании'
          nullable: true
          type: string
        vacancies_url:
          description: Ссылка на поисковую выдачу вакансий данной компании
          nullable: true
          type: string
      required:
        - name
        - open_vacancies
      title: Информация о скрытом работодателе
      type: object
    _IncludesLogoUrls:
      properties:
        '90':
          description: URL логотипа с размером менее 90px по меньшей стороне
          type: string
        '240':
          description: URL логотипа с размером менее 240px по меньшей стороне
          type: string
        original:
          description: URL необработанного логотипа
          type: string
      required:
        - '90'
        - '240'
        - original
      title: Ссылка на логотип
      type: object
    _IncludesNullableObject:
      description: 'объект, значение которого null'
      enum:
        - null
      nullable: true
      title: null-объект
    _IncludesPagination:
      properties:
        found:
          description: Найдено результатов
          type: number
        page:
          description: Номер страницы
          type: number
        pages:
          description: Всего страниц
          type: number
        per_page:
          description: Результатов на странице
          type: number
      required:
        - found
        - page
        - pages
        - per_page
    SuggestsErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            bad_argument:
              deprecated: true
              enum:
                - locale
                - text
                - area_id
              type: string
            bad_arguments:
              deprecated: true
              items:
                properties:
                  description:
                    type: string
                  name:
                    description: |
                      Поле, в котором допущена ошибка. 
                      Возможные значения:
                      * `locale` — указан неподдерживаемый язык
                      * `text` — искомый текст должен быть длиной от 2 до 30000 символов
                      * `area_id` - указан не валидный идентификатор
                    enum:
                      - locale
                      - text
                      - area_id
                    type: string
                type: object
              type: array
            description:
              deprecated: true
              type: string
            errors:
              items:
                properties:
                  type:
                    enum:
                      - bad_argument
                    type: string
                  value:
                    description: |
                      Поле, в котором допущена ошибка. 
                      Возможные значения:
                      * `locale` — указан неподдерживаемый язык
                      * `text` — искомый текст должен быть длиной от 2 до 30000 символов
                      * `area_id` - указан не валидный идентификатор
                    enum:
                      - locale
                      - text
                      - area_id
                    type: string
                type: object
              type: array
          required:
            - errors
          type: object
      title: Ошибка
    ErrorsErrorRequestId:
      description: В теле выдается request_id для упрощения решения проблем при обращении в поддержку hh.ru (api@hh.ru).
      properties:
        request_id:
          description: Идентификатор запроса
          example: q1ww2e2r4ty
          type: string
      required:
        - request_id
      type: object
    ErrorsCaptchaCaptchaErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsCaptchaCaptchaError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Плохая авторизация
    ErrorsCaptchaCaptchaError:
      additionalProperties: false
      properties:
        captcha_url:
          description: 'Адрес веб-страницы, на которой можно пройти капчу. После прохождения капчи аналогичный запрос в апи должен выполниться успешно. Приложение должно добавить в captcha_url обязательный параметр backurl, на который произойдет редирект после прохождения капчи. backurl должен обязательно содержать схему, например, https:// или схему приложения'
          example: 'https://hh.ru/account/captcha?state=...'
          type: string
        fallback_url:
          description: 'Адрес веб-страницы, на котором можно выполнить аналогичную операцию (страница, чаще всего, сама защищена капчей)'
          example: 'https://hh.ru/auth/employer?captcha=true&backurl=...'
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - captcha_required
            - employer_registration_change_email
          example: captcha_required
          type: string
        value:
          description: |
            `captcha_required` — Необходимо пройти капчу
          enum:
            - captcha_required
          example: captcha_required
          type: string
      required:
        - type
        - value
      title: Ошибка
      type: object
    AuthClientCredentials:
      additionalProperties: false
      properties:
        client_id:
          description: 'Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin).'
          example: ETVQdMs2n9VKw7SMXkh9nX5H
          minLength: 1
          type: string
        client_secret:
          description: 'Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin).'
          example: 95dNjB8FmtxQsmygm6dtEy53
          minLength: 1
          type: string
        grant_type:
          description: Cпособ запроса токена
          enum:
            - client_credentials
          example: client_credentials
          type: string
      required:
        - grant_type
        - client_id
        - client_secret
      title: Параметры для получения нового токена приложения
      type: object
    ErrorsBadAuthorizationAddEditVacancyErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadAuthorizationAddEditVacancyError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки авторизации при публикации и редактировании вакансии
    ErrorsBadAuthorizationAddEditVacancyError:
      additionalProperties: false
      properties:
        found:
          description: |
            Общее количество дубликатов вакансии. Возвращается только для `"value": "duplicate"`
          example: 2
          nullable: true
          type: number
        items:
          description: |
            Ограниченное количество записей с информацией о дубликатах. Не гарантирует выдачу всех дубликатов. Возвращается только для `"value": "duplicate"`
          items:
            $ref: '#/components/schemas/_IncludesNumericId'
          nullable: true
          type: array
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - vacancies
          example: vacancies
          type: string
        value:
          description: |
            Ошибки при публикации и редактировании вакансии:
              * `not_enough_purchased_services` — купленных услуг недостаточно для публикации или обновления данного типа вакансии
              * `quota_exceeded` — квота менеджера на публикацию данного типа вакансии закончилась
              * `duplicate` — аналогичная вакансия уже опубликована. В ответе передается информация по дубликатам вакансии. Данную ошибку можно форсировано отключить параметром `?ignore_duplicates=true`
              * `creation_forbidden` — публикация вакансий недоступна текущему менеджеру
              * `unavailable_for_archived` — редактирование недоступно для архивной вакансии
              * `conflict_changes` — [конфликтные изменения](https://github.com/hhru/api/blob/master/docs/employer_vacancies.md#%D1%81%D0%BC%D0%B5%D0%BD%D0%B0-%D0%B1%D0%B8%D0%BB%D0%BB%D0%B8%D0%BD%D0%B3-%D1%82%D0%B8%D0%BF%D0%B0-%D0%BC%D0%B5%D0%BD%D0%B5%D0%B4%D0%B6%D0%B5%D1%80%D0%B0-%D0%B2%D0%B0%D0%BA%D0%B0%D0%BD%D1%81%D0%B8%D0%B8) данных вакансии
          enum:
            - not_enough_purchased_services
            - quota_exceeded
            - duplicate
            - creation_forbidden
            - unavailable_for_archived
            - conflict_changes
          example: not_enough_purchased_services
          type: string
      required:
        - type
        - value
      title: Ошибка авторизации при публикации и редактировании вакансии
      type: object
    _IncludesNumericId:
      properties:
        id:
          description: Идентификатор
          type: number
      required:
        - id
      type: object
    MetroCityMetroItem:
      properties:
        id:
          description: Идентификатор города
          type: string
        lines:
          description: Список линий метро в городе
          items:
            $ref: '#/components/schemas/MetroMetroLine'
          type: array
        name:
          description: Название города
          type: string
      required:
        - id
        - name
        - lines
      title: Город
    MetroMetroLine:
      properties:
        hex_color:
          description: Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)
          pattern: '^[0-9A-Fa-f]{6}$'
          type: string
        id:
          description: Идентификатор линии
          type: string
        name:
          description: Название линии
          type: string
        stations:
          description: Список станций метро на линии
          items:
            $ref: '#/components/schemas/MetroLineStation'
          type: array
      required:
        - hex_color
        - id
        - name
        - stations
      title: Линия метро
    MetroLineStation:
      properties:
        id:
          description: Идентификатор станции
          type: string
        lat:
          description: Широта расположения станции
          type: number
        lng:
          description: Долгота расположения станции
          type: number
        name:
          description: Название станции
          type: string
        order:
          description: 'Порядковый номер станции на линии, начиная с 0'
          type: integer
      required:
        - id
        - name
        - lat
        - lng
        - order
      title: Станция метро
    AuthCode:
      additionalProperties: false
      properties:
        client_id:
          description: 'Идентификатор, полученный при [создании приложения](https://dev.hh.ru/admin).'
          example: ETVQdMs2n9VKw7SMXkh9nX5H
          minLength: 1
          type: string
        client_secret:
          description: 'Защищенный ключ, полученный при [создании приложения](https://dev.hh.ru/admin).'
          example: 95dNjB8FmtxQsmygm6dtEy53
          minLength: 1
          type: string
        code:
          description: |
            Значение `authorization_code`, полученное при [перенаправлении пользователя](#get-authorization_code).
          example: 29CtxMcaA8pRFDYyC8e8Gkm4
          minLength: 1
          type: string
        grant_type:
          description: Способ запроса токена
          enum:
            - authorization_code
          example: authorization_code
          type: string
        redirect_uri:
          description: |
            Uri для перенаправления пользователя после авторизации. Если не указать, используется из настроек приложения. При наличии происходит валидация значения. Вероятнее всего, потребуется сделать urlencode значения параметра.
          example: 'http://www.example.com/oauth'
          minLength: 1
          type: string
      required:
        - grant_type
        - client_id
        - client_secret
        - redirect_uri
        - code
      title: Параметры для получения токена пользователя
      type: object
    ResumesResumeNegotiationsHistoryResponse:
      properties:
        vacancies:
          description: Массив вакансий
          items:
            $ref: '#/components/schemas/ResumesResumeNegotiationsHistoryVacancy'
          type: array
      required:
        - vacancies
      title: История откликов/приглашений по резюме
      type: object
    ResumesResumeNegotiationsHistoryVacancy:
      properties:
        archived:
          description: 'Признак того, что вакансия находится в архиве'
          type: boolean
        can_edit:
          description: 'Признак того, что менеджер может редактировать данные вакансии, а также работать с информацией об откликах/приглашениях по этой вакансии'
          type: boolean
        id:
          description: Уникальный идентификатор вакансии
          type: string
        items:
          description: Список последних изменений состояний откликов/приглашений по указанному резюме и данной вакансии
          items:
            $ref: '#/components/schemas/ResumesResumeNegotiationsHistoryVacancyItem'
          type: array
        messages_url:
          description: 'URL, на который необходимо делать GET запрос для получения [списка сообщений в отклике/приглашении](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-messages). Если `can_edit` равно `false`, значение поля должно игнорироваться'
          type: string
        name:
          description: Название вакансии
          type: string
        negotiations_url:
          description: 'URL, на который необходимо делать GET-запрос для получения [данных об отклике/приглашении](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#get-negotiation). Если `can_edit` равно `false`, значение поля должно игнорироваться'
          type: string
        url:
          description: 'URL, на который необходимо делать GET-запрос для [получения данных о вакансии](https://github.com/hhru/api/blob/master/docs/vacancies.md#item)'
          type: string
      required:
        - id
        - name
        - url
        - archived
        - can_edit
        - items
        - negotiations_url
        - messages_url
      title: 'Вакансия, связанная с резюме'
      type: object
    ResumesResumeNegotiationsHistoryVacancyItem:
      properties:
        created_at:
          description: Дата изменения состояния отклика/приглашения
          type: string
        employer_state:
          allOf:
            - description: Отклик/приглашение
              type: object
            - $ref: '#/components/schemas/_IncludesIdName'
        with_message:
          description: 'Признак того, что при изменении состояния отклика/приглашения было отправлено сообщение соискателю'
          type: boolean
      required:
        - employer_state
        - created_at
        - with_message
      title: Изменение состояния откликов/приглашений
      type: object
    _IncludesIdName:
      properties:
        id:
          description: Идентификатор
          type: string
        name:
          description: Название
          type: string
      required:
        - id
        - name
      title: Объект
      type: object
    MeChangeName:
      properties:
        first_name:
          description: Имя
          example: Иван
          minLength: 1
          type: string
        last_name:
          description: Фамилия
          example: Иванов
          minLength: 1
          type: string
        middle_name:
          description: 'Отчество, поле может быть пустым'
          example: Иванович
          minLength: 0
          type: string
      required:
        - last_name
        - first_name
        - middle_name
      type: object
    ArtifactsArtifactItem:
      properties:
        id:
          description: Идентификатор изображения
          type: string
        medium:
          description: 'URL для получения среднего по размеру изображения или `null`, если изображение ещё не готово'
          nullable: true
          type: string
        small:
          description: 'URL для получения уменьшенного изображения или `null`, если изображение ещё не готово'
          nullable: true
          type: string
        state:
          $ref: '#/components/schemas/ArtifactsState'
          description: Текущий статус изображения
      required:
        - id
        - state
      title: Изображение
    ArtifactsState:
      properties:
        id:
          description: |
            Идентификатор текущего статуса изображения:

            - `processing` — в процессе обработки;
            - `failed` — ошибка, скорее всего неподдерживаемый формат;
            - `ok` — обработан, доступен для использования в резюме
          enum:
            - processing
            - failed
            - ok
          type: string
        name:
          description: Название текущего статуса изображения
          type: string
      required:
        - id
        - name
      title: Статус изображения
      type: object
    WebhookSendObjectBaseUser:
      example:
        $ref: '#/components/examples/WebhookBaseUser/value'
      properties:
        action_type:
          description: Тип экшена
          type: string
        id:
          description: Идентификатор сообщения
          type: string
        payload:
          oneOf:
            - $ref: '#/components/schemas/WebhookPayloadNewNegotiationVacancy'
            - $ref: '#/components/schemas/WebhookPayloadNewResponseOrInvitationVacancy'
            - $ref: '#/components/schemas/WebhookPayloadVacancyArchivation'
            - $ref: '#/components/schemas/WebhookPayloadVacancyPublicationForVacancyManager'
            - $ref: '#/components/schemas/WebhookPayloadVacancyProlongation'
        subscription_id:
          description: Идентификатор подписки
          type: string
        user_id:
          description: Идентификатор пользователя
          type: string
      required:
        - id
        - subscription_id
        - action_type
        - user_id
        - payload
      title: Сообщение о событии на уровне менеджера
      type: object
    WebhookPayloadNewNegotiationVacancy:
      description: Новый отклик на вакансию
      properties:
        employer_id:
          description: Идентификатор работодателя
          type: string
        resume_id:
          description: Идентификатор резюме
          nullable: true
          type: string
        topic_id:
          description: Идентификатор топика
          type: string
        vacancy_id:
          description: Идентификатор вакансии
          nullable: true
          type: string
      required:
        - topic_id
        - resume_id
        - vacancy_id
        - employer_id
      title: NEW_NEGOTIATION_VACANCY
      type: object
    WebhookPayloadVacancyArchivation:
      description: Архивация вакансии
      properties:
        archivation_date:
          description: 'Дата архивации вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
          type: string
        vacancy_id:
          description: Идентификатор вакансии
          nullable: true
          type: string
      required:
        - vacancy_id
      title: VACANCY_ARCHIVATION
      type: object
    WebhookPayloadVacancyPublicationForVacancyManager:
      properties:
        employer_manager_id:
          description: Идентификатор модератора вакансии
          type: string
        vacancy_id:
          description: Идентификатор вакансии
          type: string
      required:
        - vacancy_id
        - employer_manager_id
      title: VACANCY_PUBLICATION_FOR_VACANCY_MANAGER
      type: object
    WebhookPayloadVacancyProlongation:
      description: Продление вакансии
      properties:
        prolongation_date:
          description: 'Дата продления вакансии в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
          type: string
        vacancy_id:
          description: Идентификатор вакансии
          type: string
      required:
        - vacancy_id
        - prolongation_date
      title: VACANCY_PROLONGATION
      type: object
    WebhookPayloadNewResponseOrInvitationVacancy:
      description: 'Новый отклик или приглашение на вакансии (в отличие от NEW_NEGOTIATION_VACANCY, данное событие будет вызываться как на отклик со стороны соискателя, так и на приглашение со стороны работодателя)'
      properties:
        employer_id:
          description: Идентификатор работодателя
          type: string
        resume_id:
          description: Идентификатор резюме
          nullable: true
          type: string
        topic_id:
          description: Идентификатор топика
          type: string
        vacancy_id:
          description: Идентификатор вакансии
          nullable: true
          type: string
      required:
        - topic_id
        - resume_id
        - vacancy_id
        - employer_id
      title: NEW_RESPONSE_OR_INVITATION_VACANCY
      type: object
    VacanciesVacanciesBlacklistedResponse:
      allOf:
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
        - $ref: '#/components/schemas/VacanciesVacanciesBlacklisted'
          type: object
      title: Скрытые вакансии
      type: object
    VacanciesVacanciesBlacklisted:
      properties:
        items:
          description: Массив скрытых вакансий
          items:
            $ref: '#/components/schemas/VacanciesVacanciesBlacklistedItem'
          type: array
        limit_reached:
          description: Превышено ли максимальное количество элементов в списке
          type: boolean
    VacanciesVacanciesBlacklistedItem:
      properties:
        address:
          $ref: '#/components/schemas/VacancyAddress'
        adv_response_url:
          description: URL для регистрации нажатия кнопки отклика
          type: string
        alternate_url:
          description: Ссылка на представление вакансии на сайте
          type: string
        apply_alternate_url:
          description: Ссылка на отклик на вакансию на сайте
          type: string
        archived:
          description: Находится ли данная вакансия в архиве
          type: boolean
        area:
          $ref: '#/components/schemas/_IncludesArea'
          type: object
        created_at:
          description: Дата и время публикации вакансии
          type: string
        department:
          $ref: '#/components/schemas/VacancyDepartment'
        employer:
          $ref: '#/components/schemas/VacanciesEmployerPublic'
        has_test:
          description: Информация о наличии прикрепленного тестового задании к вакансии
          type: boolean
        id:
          description: Идентификатор вакансии
          type: string
        insider_interview:
          $ref: '#/components/schemas/VacancyInsiderInterview'
          nullable: true
        name:
          $ref: '#/components/schemas/VacancyName'
        premium:
          description: Является ли данная вакансия премиум-вакансией
          type: boolean
        published_at:
          description: Дата и время публикации вакансии
          type: string
        relations:
          $ref: '#/components/schemas/VacancyRelations'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_url:
          $ref: '#/components/schemas/VacancyResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        sort_point_distance:
          $ref: '#/components/schemas/VacancySortPointDistance'
        type:
          $ref: '#/components/schemas/VacancyTypeOutput'
        url:
          description: URL вакансии
          type: string
      required:
        - id
        - premium
        - name
        - department
        - has_test
        - response_letter_required
        - area
        - salary
        - type
        - published_at
        - archived
        - apply_alternate_url
        - url
        - adv_response_url
        - alternate_url
        - relations
        - employer
      title: Скрытая вакансия
      type: object
    VacancyName:
      description: название
      title: Название
      type: string
    VacancyTypeOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyType'
        - properties:
            name:
              description: название типа вакансии
              type: string
          type: object
      title: Тип вакансии
    VacancyType:
      properties:
        id:
          description: 'тип из [справочника vacancy_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      required:
        - id
      type: object
    VacancyInsiderInterview:
      properties:
        id:
          description: идентификатор интервью
          type: string
        url:
          description: 'адрес страницы, содержащей интервью'
          type: string
      required:
        - id
        - url
      title: объект с информацией об интервью о жизни в компании
      type: object
    VacancyAddress:
      description: адрес
      nullable: true
      properties:
        id:
          description: 'адрес из [списка доступных адресов работодателя](#tag/Adresa-rabotodatelya/paths/~1employers~1{employer_id}~1addresses/get)'
          nullable: true
          type: string
        show_metro_only:
          description: показывать только метро для указанного адреса
          nullable: true
          type: boolean
      type: object
    VacanciesEmployerPublic:
      properties:
        alternate_url:
          description: ссылка на представление компании на сайте
          example: 'https://hh.ru/employer/1455'
          nullable: true
          type: string
        id:
          description: Идентификатор компании
          example: '1455'
          nullable: true
          type: string
        logo_urls:
          description: cсылки на логотипы работодателя разных размеров
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/_IncludesLogoUrls'
            - $ref: '#/components/schemas/_IncludesNullableObject'
          type: object
        name:
          description: Название компании
          example: HeadHunter
          type: string
        trusted:
          description: 'флаг, показывающий, прошла ли компания проверку на сайте'
          type: boolean
        url:
          description: 'URL, на который нужно сделать GET-запрос, чтобы получить информацию о компании'
          example: 'https://api.hh.ru/employers/1455'
          nullable: true
          type: string
        vacancies_url:
          description: ссылка на поисковую выдачу вакансий данной компании
          example: 'https://api.hh.ru/vacancies?employer_id=1455'
          nullable: true
          type: string
      required:
        - name
        - trusted
      title: Информация о компании работодателя
      type: object
    VacancyDepartment:
      nullable: true
      properties:
        id:
          description: 'департамент [из справочника](https://api.hh.ru/openapi/redoc#tag/Informaciya-o-rabotodatele/paths/~1employers~1%7Bemployer_id%7D~1departments/get), от имени которого размещается вакансия (если данная возможность доступна для компании)'
          type: string
      title: Департамент
      type: object
    VacancyResponseUrl:
      description: URL отклика для прямых вакансий (`type.id=direct`)
      nullable: true
      title: URL
      type: string
    VacancySortPointDistance:
      description: |-
        Расстояние в метрах между центром сортировки (заданной параметрами `sort_point_lat`, `sort_point_lng`) и указанным в вакансии адресом. В случае, если в адресе указаны только станции метро, выдается расстояние между центром сортировки и средней геометрической точкой указанных станций.

        Значение `sort_point_distance` выдается только в случае, если заданы параметры `sort_point_lat`, `sort_point_lng`, `order_by=distance`
      nullable: true
      title: Расстояние между центром сортировки и указанным в вакансии адресом
      type: number
    VacancyRelations:
      description: 'Возвращает связи соискателя с вакансией. Значения из поля `vacancy_relation` в [справочнике полей](#tag/Obshie-spravochniki/paths/~1dictionaries/get).'
      items:
        description: Текстовый идентификатор связи
        enum:
          - favorited
          - got_response
          - got_invitation
          - got_rejection
          - blacklisted
        type: string
      title: Связи соискателя с вакансией
      type: array
    VacancySalary:
      description: зарплата
      nullable: true
      properties:
        currency:
          description: 'код валюты из [справочника currency](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          nullable: true
          type: string
        from:
          description: нижняя граница зарплаты
          nullable: true
          type: integer
        gross:
          description: признак что границы зарплаты указаны до вычета налогов
          nullable: true
          type: boolean
        to:
          description: верхняя граница зарплаты
          nullable: true
          type: integer
      title: Зарплата
      type: object
    _IncludesArea:
      properties:
        id:
          description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
          type: string
        name:
          description: Название региона
          type: string
        url:
          description: Ссылка на информацию о регионе
          type: string
      required:
        - id
        - name
        - url
      title: Регион
    VacancyResponseLetterRequired:
      description: требовать сопроводительное письмо
      nullable: true
      title: Сопроводительное письмо
      type: boolean
    SuggestsCompanies:
      additionalProperties: false
      description: Подсказки по организациям
      properties:
        items:
          description: Информация о найденных организациях
          items:
            $ref: '#/components/schemas/SuggestsCompanyItem'
          title: Массив найденных организаций
          type: array
      required:
        - items
      title: Подсказки по организациям
      type: object
    SuggestsCompanyItem:
      allOf:
        - $ref: '#/components/schemas/SuggestsEmployerItem'
        - properties:
            area:
              $ref: '#/components/schemas/SuggestsArea'
            industries:
              description: Сферы деятельности
              items:
                $ref: '#/components/schemas/_IncludesIdName'
              type: array
          required:
            - area
          type: object
      type: object
    SuggestsEmployerItem:
      properties:
        id:
          description: Идентификатор организации
          type: string
        logo_urls:
          $ref: '#/components/schemas/SuggestsLogoUrl'
          description: Ссылка на логотип организации
          type: object
        text:
          description: Название организации
          type: string
        url:
          description: Сайт организации
          type: string
      required:
        - id
        - text
    SuggestsLogoUrl:
      properties:
        '90':
          description: URL логотипа
          type: string
      required:
        - '90'
      title: Ссылка на логотип
    SuggestsArea:
      properties:
        id:
          description: Идентификатор региона
          type: string
        name:
          description: Название региона
          type: string
      required:
        - id
        - name
      title: Регион
    SavedSearchesSavedSearchResponse:
      allOf:
        - $ref: '#/components/schemas/SavedSearchesSavedSearchItems'
          type: object
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
      title: Успешный ответ
    SavedSearchesSavedSearchItems:
      properties:
        items:
          description: Список сохраненных поисков вакансий/резюме
          items:
            $ref: '#/components/schemas/SavedSearchesSavedSearchItem'
          minItems: 0
          type: array
      required:
        - items
    SavedSearchesSavedSearchItem:
      properties:
        created_at:
          description: Дата и время создания
          type: string
        id:
          description: Идентификатор поиска
          type: string
        items:
          allOf:
            - $ref: '#/components/schemas/_IncludesCountUrl'
            - description: Данные о списке найденных вакансий/резюме
              type: object
        name:
          description: Название поиска
          type: string
        new_items:
          allOf:
            - $ref: '#/components/schemas/_IncludesCountUrl'
            - description: |
                Данные о найденных вакансиях/резюме, появившихся с момента последнего просмотра автопоиска. При переходе по ссылке счетчик новых элементов будет сброшен (возможна небольшая задержка по времени).

                Счетчик `new_items.count` обновляется раз в час. Из-за этого реальное количество новых найденных элементов может расходиться со значением этого счетчика
              type: object
        subscription:
          description: Статус подписки
          type: boolean
      required:
        - id
        - name
        - created_at
        - subscription
        - items
        - new_items
      title: Сохраненный поиск вакансий/резюме
      type: object
    _IncludesCountUrl:
      properties:
        count:
          description: Количество элементов
          type: number
        url:
          description: Ссылка на получение элементов
          type: string
      required:
        - count
        - url
      type: object
    VacanciesVacanciesFavoritedResponse:
      allOf:
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
        - $ref: '#/components/schemas/VacanciesVacanciesFavorited'
          type: object
      title: Отобранные вакансии
      type: object
    VacanciesVacanciesFavorited:
      properties:
        items:
          description: Массив отобранных вакансий
          items:
            $ref: '#/components/schemas/VacanciesVacanciesFavoritedItem'
          type: array
    VacanciesVacanciesFavoritedItem:
      properties:
        address:
          $ref: '#/components/schemas/VacancyAddressRawOutput'
        adv_response_url:
          description: URL для регистрации нажатия кнопки отклика
          type: string
        alternate_url:
          description: Ссылка на представление вакансии на сайте
          type: string
        apply_alternate_url:
          description: Ссылка на отклик на вакансию на сайте
          type: string
        archived:
          description: Находится ли данная вакансия в архиве
          type: boolean
        area:
          $ref: '#/components/schemas/_IncludesArea'
          type: object
        created_at:
          description: Дата и время публикации вакансии
          type: string
        department:
          description: Объект с информацией о департаменте в компании
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VacancyDepartmentOutput'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        employer:
          $ref: '#/components/schemas/VacanciesEmployerPublic'
        has_test:
          description: Информация о наличии прикрепленного тестового задании к вакансии
          type: boolean
        id:
          description: Идентификатор вакансии
          type: string
        insider_interview:
          description: Объект с информацией об интервью о жизни в компании
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VacancyInsiderInterview'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        name:
          $ref: '#/components/schemas/VacancyName'
        negotiations_url:
          description: Ссылка для получения списка откликов/приглашений
          nullable: true
          type: string
        premium:
          description: Является ли данная вакансия премиум-вакансией
          type: boolean
        published_at:
          description: Дата и время публикации вакансии
          type: string
        relations:
          $ref: '#/components/schemas/VacancyRelations'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_url:
          $ref: '#/components/schemas/VacancyResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        sort_point_distance:
          $ref: '#/components/schemas/VacancySortPointDistance'
        suitable_resumes_url:
          description: Подходящие резюме на вакансию
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/VacancyTypeOutput'
        url:
          description: URL вакансии
          type: string
      required:
        - id
        - premium
        - name
        - department
        - has_test
        - response_letter_required
        - area
        - salary
        - type
        - published_at
        - archived
        - apply_alternate_url
        - url
        - adv_response_url
        - alternate_url
        - relations
        - employer
      title: Отобранная вакансия
      type: object
    VacancyAddressRawOutput:
      description: адрес
      nullable: true
      properties:
        building:
          description: дом
          nullable: true
          type: string
        city:
          description: город
          nullable: true
          type: string
        description:
          description: описание
          nullable: true
          type: string
        id:
          description: 'адрес из [списка доступных адресов работодателя](https://api.hh.ru/openapi/redoc#tag/Adresa-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1addresses/get)'
          nullable: true
          type: string
        lat:
          description: широта
          nullable: true
          type: number
        lng:
          description: долгота
          nullable: true
          type: number
        metro:
          $ref: '#/components/schemas/_IncludesMetroStation'
        metro_stations:
          items:
            $ref: '#/components/schemas/_IncludesMetroStation'
          type: array
        raw:
          description: полный адрес
          nullable: true
          type: string
        street:
          description: улица
          nullable: true
          type: string
      title: Адрес
      type: object
    _IncludesMetroStation:
      properties:
        lat:
          description: широта
          nullable: true
          type: number
        line_id:
          description: идентификатор линии метро
          type: string
        line_name:
          description: названии линии метро
          type: string
        lng:
          description: долгота
          nullable: true
          type: number
        station_id:
          description: идентификатор станции метро
          type: string
        station_name:
          description: название станции метро
          type: string
      required:
        - station_id
        - station_name
        - line_id
        - line_name
        - lat
        - lng
      title: Станция метро
      type: object
    VacancyDepartmentOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyDepartment'
        - properties:
            name:
              description: название департамента работодателя
              type: string
          type: object
      nullable: true
      title: Департамент
    ArtifactsArtifactPortfolioResponse:
      allOf:
        - $ref: '#/components/schemas/ArtifactsArtifactPortfolioItems'
        - $ref: '#/components/schemas/_IncludesPagination'
      title: Успешный ответ
    ArtifactsArtifactPortfolioItems:
      properties:
        items:
          description: Список изображений
          items:
            $ref: '#/components/schemas/ArtifactsArtifactPortfolioItem'
          minItems: 0
          type: array
      required:
        - items
    ArtifactsArtifactPortfolioItem:
      allOf:
        - $ref: '#/components/schemas/ArtifactsArtifactItem'
        - $ref: '#/components/schemas/ArtifactsPortfolioDescription'
      title: Изображение
    ArtifactsPortfolioDescription:
      properties:
        description:
          description: Описание изображения
          type: string
      required:
        - description
    EmployerManagersEmployerManagerId:
      properties:
        id:
          description: Идентификатор менеджера
          type: string
      required:
        - id
    SuggestsFieldsOfStudy:
      additionalProperties: false
      description: Подсказки по специализациям
      properties:
        items:
          description: Информация о найденных специализациях
          items:
            $ref: '#/components/schemas/SuggestsFieldsOfStudyItem'
          title: Массив специализаций
          type: array
      required:
        - items
      title: Подсказки по специализациям
      type: object
    SuggestsFieldsOfStudyItem:
      properties:
        id:
          description: Идентификатор специализации
          type: string
        text:
          description: Название специализации
          type: string
      required:
        - id
        - text
      type: object
    ArtifactsArtifactPhotoResponse:
      allOf:
        - $ref: '#/components/schemas/ArtifactsArtifactPhotoItems'
        - $ref: '#/components/schemas/_IncludesPagination'
      title: Успешный ответ
    ArtifactsArtifactPhotoItems:
      properties:
        items:
          description: Список изображений
          items:
            $ref: '#/components/schemas/ArtifactsArtifactItem'
          minItems: 0
          type: array
      required:
        - items
    SuggestsSkillSet:
      additionalProperties: false
      description: Подсказки по ключевым навыкам
      properties:
        items:
          description: Массив найденных ключевых навыков
          items:
            $ref: '#/components/schemas/_IncludesSkillSetItem'
          type: array
      required:
        - items
      title: Подсказки по ключевым навыкам
      type: object
    _IncludesSkillSetItem:
      properties:
        id:
          description: Идентификатор ключевого навыка
          type: string
        text:
          description: Название ключевого навыка
          type: string
      required:
        - id
        - text
      title: Ключевой навык
      type: object
    VacancyDraftDraftCreate:
      properties:
        accept_handicapped:
          $ref: '#/components/schemas/VacancyAcceptHandicapped'
        accept_incomplete_resumes:
          $ref: '#/components/schemas/VacancyAcceptIncompleteResumes'
        accept_kids:
          $ref: '#/components/schemas/VacancyAcceptKids'
        accept_temporary:
          $ref: '#/components/schemas/VacancyAcceptTemporary'
        address:
          $ref: '#/components/schemas/VacancyDraftAddress'
        allow_messages:
          $ref: '#/components/schemas/VacancyAllowMessages'
        area:
          $ref: '#/components/schemas/VacancyArea'
        billing_type:
          $ref: '#/components/schemas/VacancyDraftBillingType'
        branded_template:
          $ref: '#/components/schemas/VacancyBrandedTemplate'
        code:
          $ref: '#/components/schemas/VacancyDraftCode'
        contacts:
          $ref: '#/components/schemas/VacancyDraftContacts'
        custom_employer_name:
          $ref: '#/components/schemas/VacancyCustomEmployerName'
        department:
          $ref: '#/components/schemas/VacancyDepartment'
        description:
          $ref: '#/components/schemas/VacancyDraftDescription'
        driver_license_types:
          $ref: '#/components/schemas/VacancyDriverLicenseTypes'
        employment:
          $ref: '#/components/schemas/VacancyDraftEmployment'
        experience:
          $ref: '#/components/schemas/VacancyExperience'
        key_skills:
          $ref: '#/components/schemas/VacancyDraftKeySkills'
        languages:
          $ref: '#/components/schemas/VacancyLanguages'
        name:
          $ref: '#/components/schemas/VacancyDraftName'
        professional_roles:
          $ref: '#/components/schemas/VacancyDraftProfessionalRoles'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_notifications:
          $ref: '#/components/schemas/VacancyResponseNotifications'
        response_url:
          $ref: '#/components/schemas/VacancyDraftResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        schedule:
          $ref: '#/components/schemas/VacancySchedule'
        test:
          $ref: '#/components/schemas/VacancyDraftTest'
        type:
          $ref: '#/components/schemas/VacancyDraftType'
        with_zp:
          $ref: '#/components/schemas/VacancyDraftWithZp'
        working_days:
          $ref: '#/components/schemas/VacancyWorkingDays'
        working_time_intervals:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervals'
        working_time_modes:
          $ref: '#/components/schemas/VacancyWorkingTimeModes'
      title: Объект создания черновика вакансии
      type: object
    VacancyDraftTest:
      description: 'объект - [тест](#tag/Spravochniki-rabotodatelya/paths/~1employers~1{employer_id}~1tests/get) для вакансии'
      nullable: true
      properties:
        id:
          description: 'тест, который будет добавлен в вакансию'
          nullable: true
          pattern: ^\d+$
          type: string
        required:
          description: флаг обязательности прохождения теста при отклике на вакансию
          nullable: true
          type: boolean
      title: Тест
      type: object
    VacancyDraftBillingType:
      properties:
        id:
          description: 'биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      title: Биллинговый тип
      type: object
    VacancyDraftCode:
      description: внутренний код вакансии
      minLength: 1
      nullable: true
      title: Код вакансии
      type: string
    VacancyDraftDescription:
      description: 'описание в html, минимум 1 символ, для успешной публикации вакансии не менее 200 символов'
      minLength: 1
      title: Описание
      type: string
    VacancyWorkingTimeModes:
      description: список режимов времени работы
      items:
        $ref: '#/components/schemas/VacancyWorkingTimeModeItem'
      nullable: true
      title: Режимы работы
      type: array
    VacancyWorkingTimeModeItem:
      properties:
        id:
          description: 'режимы времени работы из [справочника working_time_modes](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      type: object
    VacancyDraftProfessionalRoles:
      description: список профессиональных ролей
      items:
        $ref: '#/components/schemas/VacancyDraftProfessionalRoleItem'
      title: Профессиональные роли
      type: array
    VacancyDraftProfessionalRoleItem:
      properties:
        id:
          description: Идентификатор профессиональной роли
          pattern: ^\d+$
          type: string
      title: Объект профессиональной роли
      type: object
    VacancyDraftEmployment:
      nullable: true
      properties:
        id:
          description: 'тип занятости из [справочника employment](#tag/Obshie-spravochniki/paths/~1dictionaries/get). По умолчанию или ошибке в поле ставится full'
          nullable: true
          type: string
      title: Тип занятости
      type: object
    VacancyResponseNotifications:
      description: уведомлять о новых откликах
      nullable: true
      title: Новые отклики
      type: boolean
    VacancyArea:
      properties:
        id:
          description: 'город публикации из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
          example: 1625
          pattern: ^\d+$
          type: string
      required:
        - id
      title: Область
      type: object
    VacancyDraftWithZp:
      description: Вашу вакансию увидят больше людей. Мы разместим ее дополнительно на сервисе Зарплата.ру
      title: Разместить на Зарплата.ру
      type: boolean
    VacancyAcceptHandicapped:
      description: 'указание, что вакансия доступна для соискателей с инвалидностью'
      nullable: true
      title: Соискатель с инвалидностью
      type: boolean
    VacancySchedule:
      nullable: true
      properties:
        id:
          description: 'график работы из [справочника schedule](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          nullable: true
          type: string
      title: График работы
      type: object
    VacancyDraftResponseUrl:
      description: URL отклика для прямых вакансий (`type.id=direct`)
      minLength: 1
      nullable: true
      title: URL
      type: string
    VacancyLanguages:
      description: список языков вакансии
      items:
        $ref: '#/components/schemas/VacancyLanguage'
      title: Языки вакансии
      type: array
    VacancyLanguage:
      nullable: true
      properties:
        id:
          description: идентификатор языка
          type: string
        level:
          properties:
            id:
              description: идентификатор уровня владения языком
              type: string
          required:
            - id
          type: object
      required:
        - id
        - level
      title: Объект языка
      type: object
    VacancyAcceptIncompleteResumes:
      description: разрешен ли отклик на вакансию неполным резюме
      nullable: true
      title: Неполное резюме
      type: boolean
    VacancyDraftType:
      properties:
        id:
          description: 'тип из [справочника vacancy_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          minLength: 1
          type: string
      title: Тип
      type: object
    VacancyDraftName:
      description: название
      minLength: 1
      title: Название
      type: string
    VacancyAllowMessages:
      description: 'возможность [переписки с кандидатами](https://inboxemp.hh.ru/) по данной вакансии'
      nullable: true
      title: Разрешение сообщений
      type: boolean
    VacancyAcceptTemporary:
      description: 'указание, что вакансия доступна с временным трудоустройством'
      nullable: true
      title: Временное трудоустройство
      type: boolean
    VacancyDraftAddress:
      description: адрес
      nullable: true
      properties:
        id:
          description: 'адрес из [списка доступных адресов работодателя](#tag/Adresa-rabotodatelya/paths/~1employers~1{employer_id}~1addresses/get)'
          nullable: true
          pattern: ^\d+$
          type: string
        show_metro_only:
          description: показывать только метро для указанного адреса
          nullable: true
          type: boolean
      title: Адрес
      type: object
    VacancyCustomEmployerName:
      description: 'название компании для анонимных вакансий (`type.id=anonymous`), например "крупный российский банк". Если не передать, проставится автоматом пустая строка.'
      nullable: true
      title: Название
      type: string
    VacancyWorkingDays:
      description: список рабочих дней
      items:
        $ref: '#/components/schemas/VacancyWorkingDayItem'
      nullable: true
      title: Список рабочих дней
      type: array
    VacancyWorkingDayItem:
      properties:
        id:
          description: 'рабочие дни из [справочника working_days](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      title: Рабочий день
      type: object
    VacancyAcceptKids:
      description: 'указание, что вакансия доступна для соискателей старше 14 лет [подробнее](https://github.com/hhru/api/blob/master/docs/employer_vacancies_accept_kids.md#accept-kids)'
      nullable: true
      title: Соискатель старше 14 лет
      type: boolean
    VacancyDriverLicenseTypes:
      description: список требуемых категорий водительских прав
      items:
        $ref: '#/components/schemas/VacancyDriverLicenceTypeItem'
      nullable: true
      title: Категория водительских прав
      type: array
    VacancyDriverLicenceTypeItem:
      properties:
        id:
          description: 'категория водительских прав. элемент справочника [driver_license_types](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      title: Категория водительских прав
      type: object
    VacancyExperience:
      nullable: true
      properties:
        id:
          description: 'требуемый опыт работы из [справочника experience](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      title: Опыт работы
      type: object
    VacancyDraftContacts:
      description: контактная информация
      nullable: true
      properties:
        email:
          description: email
          nullable: true
          type: string
        name:
          description: имя менеджера
          nullable: true
          type: string
        phones:
          description: список телефонов для связи
          items:
            $ref: '#/components/schemas/VacancyDraftPhoneItem'
          nullable: true
          type: array
      title: Контакты
      type: object
    VacancyDraftPhoneItem:
      oneOf:
        - $ref: '#/components/schemas/VacancyDraftPhone'
        - $ref: '#/components/schemas/VacancyDraftPhoneFormatted'
      title: Объект телефона для связи
    VacancyDraftPhone:
      properties:
        city:
          description: код города
          pattern: ^\d+$
          type: string
        comment:
          description: комментарий (удобное время для звонка по этому номеру)
          nullable: true
          type: string
        country:
          description: код страны
          pattern: ^\d+$
          type: string
        number:
          description: абонентская часть телефонного номера
          pattern: ^\d+$
          type: string
      required:
        - country
        - city
        - number
      type: object
    VacancyDraftPhoneFormatted:
      properties:
        comment:
          description: комментарий (удобное время для звонка по этому номеру)
          nullable: true
          type: string
        formatted:
          description: телефонный номер целиком
          pattern: ^\d+$
          type: string
      required:
        - formatted
      type: object
    VacancyDraftKeySkills:
      description: 'список ключевых навыков, не более 30'
      items:
        $ref: '#/components/schemas/VacancyDraftKeySkillItem'
      nullable: true
      title: Ключевые навыки
      type: array
    VacancyDraftKeySkillItem:
      nullable: true
      properties:
        name:
          description: название ключевого навыка
          minLength: 1
          type: string
      title: Объект ключевых навыков
      type: object
    VacancyBrandedTemplate:
      additionalProperties: false
      description: |
        Предпочитаемый брендированный шаблон вакансий работодателя либо `null`, если не используется у компании.
      nullable: true
      properties:
        id:
          description: Идентификатор брендированного шаблона вакансий
          example: default
          minLength: 1
          nullable: true
          type: string
        name:
          description: Название брендированного шаблона вакансий
          example: Стандартный шаблон
          nullable: true
          type: string
      title: Брендированный шаблон
      type: object
    VacancyWorkingTimeIntervals:
      description: список с временными интервалами работы
      items:
        $ref: '#/components/schemas/VacancyWorkingTimeIntervalItem'
      nullable: true
      title: Интервалы работы
      type: array
    VacancyWorkingTimeIntervalItem:
      properties:
        id:
          description: 'временной интервал работы из [справочника working_time_intervals](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      type: object
    SuggestsSearchKeyword:
      additionalProperties: false
      description: Подсказки по ключевым словам поиска
      properties:
        items:
          items:
            $ref: '#/components/schemas/SuggestsSearchKeywordItem'
          title: Массив ключевых слов
          type: array
      required:
        - items
      title: Подсказки по ключевым словам поиска
      type: object
    SuggestsSearchKeywordItem:
      properties:
        text:
          description: Ключевое слово
          type: string
      required:
        - text
      type: object
    VacanciesVacancyProlongate:
      properties:
        actions:
          description: 'Список действий, которые можно предпринять для продления вакансии'
          items:
            oneOf:
              - $ref: '#/components/schemas/VacanciesVacancyProlongateAvailableActions'
              - $ref: '#/components/schemas/VacanciesVacancyProlongateUnavailableActions'
          type: array
        expires_at:
          description: Дата окончания публикации вакансии
          type: string
        id:
          description: Идентификатор вакансии
          type: string
      required:
        - id
        - expires_at
        - actions
      type: object
    VacanciesVacancyProlongateUnavailableActions:
      properties:
        disable_reason:
          allOf:
            - description: 'Причина, по которой совершить действие невозможно. Элемент `vacancy_not_prolonged_reason` в [справочнике полей](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
              type: object
            - $ref: '#/components/schemas/_IncludesIdName'
        enabled:
          description: Возможно ли выполнить действие
          type: boolean
        id:
          description: Идентификатор действия
          type: string
      required:
        - id
        - enabled
        - disable_reason
      title: Продление невозможно
      type: object
    VacanciesVacancyProlongateAvailableActions:
      properties:
        enabled:
          description: Возможно ли выполнить действие
          type: boolean
        id:
          description: Идентификатор действия
          type: string
        method:
          description: HTTP-метод запроса для выполнения действия
          type: string
        url:
          description: URL запроса для выполнения действия
          type: string
      required:
        - id
        - enabled
        - url
        - method
      title: Продление возможно
      type: object
    ProfessionalRolesCatalog:
      additionalProperties: false
      description: Каталог профессиональных ролей и категорий
      properties:
        categories:
          description: Информация о категории профессиональной роли
          items:
            $ref: '#/components/schemas/ProfessionalRolesCategory'
          minItems: 1
          title: Категория профессиональной роли
          type: array
      required:
        - categories
      title: Каталог профессиональных ролей
      type: object
    ProfessionalRolesCategory:
      properties:
        id:
          description: Идентификатор категории профессиональной роли
          example: '123'
          minLength: 1
          type: string
        name:
          description: Имя категории профессиональной роли
          example: 'Строительство, недвижимость'
          minLength: 1
          type: string
        roles:
          description: |
            Список профессиональных ролей, входящих в эту категорию
          items:
            $ref: '#/components/schemas/ProfessionalRolesRole'
          minItems: 1
          type: array
      required:
        - id
        - name
        - roles
      type: object
    ProfessionalRolesRole:
      properties:
        accept_incomplete_resumes:
          description: На роль принимаются отклики неполным резюме
          example: true
          type: boolean
        id:
          description: Идентификатор профессиональной роли
          example: '1'
          minLength: 1
          type: string
        is_default:
          description: Дефолтная роль
          example: true
          type: boolean
        name:
          description: Имя профессиональной роли
          example: Архитектор
          minLength: 1
          type: string
      required:
        - id
        - name
        - accept_incomplete_resumes
        - is_default
      title: Профессиональная роль
      type: object
    VacanciesVacanciesResponse:
      allOf:
        - $ref: '#/components/schemas/VacanciesVacanciesItems'
          type: object
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
        - $ref: '#/components/schemas/VacanciesClusters'
          type: object
        - $ref: '#/components/schemas/VacanciesArguments'
          type: object
        - properties:
            alternate_url:
              description: ссылка на вакансию
              nullable: true
              type: string
          type: object
      title: Успешный ответ
    VacanciesVacanciesItems:
      properties:
        items:
          description: Список вакансий
          items:
            $ref: '#/components/schemas/VacanciesVacanciesItem'
          minItems: 0
          type: array
      required:
        - items
    VacanciesVacanciesItem:
      allOf:
        - $ref: '#/components/schemas/VacanciesStandardVacancyFields'
        - $ref: '#/components/schemas/VacanciesAdditionalVacancyFields'
      title: Вакансия
    VacanciesStandardVacancyFields:
      properties:
        accept_temporary:
          $ref: '#/components/schemas/VacancyAcceptTemporary'
        address:
          $ref: '#/components/schemas/VacancyAddressRawOutput'
        adv_response_url:
          description: URL для регистрации нажатия кнопки отклика
          nullable: true
          type: string
        alternate_url:
          description: Ссылка на представление вакансии на сайте
          type: string
        apply_alternate_url:
          description: Ссылка на отклик на вакансию на сайте
          type: string
        archived:
          description: Находится ли данная вакансия в архиве
          nullable: true
          type: boolean
        area:
          $ref: '#/components/schemas/_IncludesArea'
          type: object
        contacts:
          $ref: '#/components/schemas/VacancyContacts'
        created_at:
          description: Дата и время публикации вакансии
          type: string
        department:
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VacancyDepartmentOutput'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        employer:
          $ref: '#/components/schemas/VacanciesEmployerPublic'
        has_test:
          description: Информация о наличии прикрепленного тестового задании к вакансии
          type: boolean
        id:
          description: Идентификатор вакансии
          type: string
        insider_interview:
          description: Объект с информацией об интервью о жизни в компании
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VacancyInsiderInterview'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        metro_stations:
          $ref: '#/components/schemas/_IncludesMetroStation'
        name:
          $ref: '#/components/schemas/VacancyName'
        premium:
          description: Является ли данная вакансия премиум-вакансией
          nullable: true
          type: boolean
        published_at:
          description: Дата и время публикации вакансии
          type: string
        relations:
          $ref: '#/components/schemas/VacancyRelations'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_url:
          $ref: '#/components/schemas/VacancyResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        schedule:
          $ref: '#/components/schemas/VacancyScheduleOutput'
        sort_point_distance:
          $ref: '#/components/schemas/VacancySortPointDistance'
        type:
          $ref: '#/components/schemas/VacancyTypeOutput'
        url:
          description: URL вакансии
          type: string
        working_days:
          $ref: '#/components/schemas/VacancyWorkingDaysOutput'
        working_time_intervals:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervalsOutput'
        working_time_modes:
          $ref: '#/components/schemas/VacancyWorkingTimeModesOutput'
      required:
        - id
        - name
        - department
        - has_test
        - response_letter_required
        - area
        - salary
        - type
        - published_at
        - apply_alternate_url
        - url
        - alternate_url
        - relations
        - employer
      title: Вакансия
      type: object
    VacancyScheduleOutput:
      allOf:
        - $ref: '#/components/schemas/VacancySchedule'
        - properties:
            name:
              description: название графика работы
              type: string
          type: object
      nullable: true
      title: График работы
    VacancyWorkingDaysOutput:
      description: список рабочих дней
      items:
        $ref: '#/components/schemas/VacancyWorkingDayItemOutput'
      nullable: true
      title: Список рабочих дней
      type: array
    VacancyWorkingDayItemOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyWorkingDayItem'
        - properties:
            name:
              description: название рабочего дня
              type: string
          type: object
      nullable: true
    VacancyContacts:
      description: Контактная информация
      nullable: true
      properties:
        email:
          description: Электронная почта
          nullable: true
          type: string
        name:
          description: Имя контакта
          nullable: true
          type: string
        phones:
          description: Список телефонов для связи
          items:
            $ref: '#/components/schemas/VacancyPhoneItem'
          nullable: true
          type: array
      type: object
    VacancyPhoneItem:
      properties:
        city:
          description: код города
          type: string
        comment:
          description: комментарий (удобное время для звонка по этому номеру)
          nullable: true
          type: string
        country:
          description: код страны
          type: string
        formatted:
          description: телефонный номер
          nullable: true
          type: string
        number:
          description: телефон
          type: string
      title: Объект телефона для связи
      type: object
    VacancyWorkingTimeIntervalsOutput:
      description: список с временными интервалами работы
      items:
        $ref: '#/components/schemas/VacancyWorkingTimeIntervalItemOutput'
      nullable: true
      title: Интервалы работы
      type: array
    VacancyWorkingTimeIntervalItemOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyWorkingTimeIntervalItem'
        - properties:
            name:
              description: название интервала работы
              type: string
          type: object
      nullable: true
    VacancyWorkingTimeModesOutput:
      description: список режимов времени работы
      items:
        $ref: '#/components/schemas/VacancyWorkingTimeModeItemOutput'
      nullable: true
      title: Режимы работы
      type: array
    VacancyWorkingTimeModeItemOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyWorkingTimeModeItem'
        - properties:
            name:
              description: название интервала работы
              type: string
          type: object
      nullable: true
    VacanciesAdditionalVacancyFields:
      properties:
        counters:
          $ref: '#/components/schemas/VacancyCounters'
        snippet:
          $ref: '#/components/schemas/VacancySnippet'
          description: 'Дополнительные текстовые снипеты (отрывки) по найденной вакансии. Если в тексте снипета встретилась поисковая фраза (параметр `text`), она будет подсвечена тегом `highlighttext`'
        sort_point_distance:
          $ref: '#/components/schemas/VacancySortPointDistance'
      required:
        - snippet
      title: Вакансия
      type: object
    VacancyCounters:
      properties:
        responses:
          description: Количество откликов на вакансию
          type: number
      title: Счетчики
      type: object
    VacancySnippet:
      properties:
        requirement:
          description: 'Отрывок из требований по вакансии, если они найдены в тексте описания'
          nullable: true
          type: string
        responsibility:
          description: 'Отрывок из обязанностей по вакансии, если они найдены в тексте описания'
          nullable: true
          type: string
      title: Дополнительные текстовые отрывки
      type: object
    VacanciesArguments:
      properties:
        arguments:
          description: Массив параметров поиска
          items:
            $ref: '#/components/schemas/VacanciesArgumentItem'
          nullable: true
          type: array
      title: Использованные параметры в поиске вакансий
      type: object
    VacanciesArgumentItem:
      properties:
        argument:
          description: Параметр поиска вакансии
          type: string
        cluster_group:
          allOf:
            - description: 'Группа кластеров, которая связана с данным параметром'
              nullable: true
              type: object
            - $ref: '#/components/schemas/_IncludesIdName'
        disable_url:
          description: 'URL поиска вакансий, который получится, если перестать учитывать в поиске данный параметр'
          type: string
        hex_color:
          description: Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)
          nullable: true
          type: string
        metro_type:
          description: Станция или линия метро (`station`/`line`)
          nullable: true
          type: string
        name:
          description: Название значения
          nullable: true
          type: string
        value:
          description: Значение параметра
          type: string
        value_description:
          description: Описание параметра
          type: string
      required:
        - argument
        - value
        - disable_url
      title: Аргумент поиска
      type: object
    VacanciesClusters:
      properties:
        clusters:
          description: Массив кластеров поиска
          items:
            $ref: '#/components/schemas/VacanciesClusterItem'
          nullable: true
          type: array
      title: Кластеры в поиске вакансий
      type: object
    VacanciesClusterItem:
      properties:
        id:
          description: Идентификатор кластера
          type: string
        items:
          description: Массив поисковых запросов в данном кластере с указанием дополнительных параметров
          items:
            $ref: '#/components/schemas/VacanciesItemsOfClusterItem'
          type: array
        name:
          description: Название типа кластера
          type: string
      required:
        - id
        - name
        - items
      title: Кластер
      type: object
    VacanciesItemsOfClusterItem:
      properties:
        count:
          description: Количество вакансий в данном элементе кластера
          type: number
        metro_line:
          $ref: '#/components/schemas/_IncludesClusterMetroLine'
          nullable: true
          type: object
        metro_station:
          $ref: '#/components/schemas/_IncludesClusterMetroStation'
          nullable: true
          type: object
        name:
          description: Название элемента кластера
          type: string
        type:
          description: 'Тип значения, связанного с группой'
          enum:
            - metro_station
            - metro_line
          nullable: true
          type: string
        url:
          description: Ссылка на поисковую выдачу по данному элементу кластера
          type: string
      required:
        - name
        - url
        - count
      title: Поисковый запрос в кластере
      type: object
    _IncludesClusterMetroStation:
      properties:
        area:
          allOf:
            - description: 'Регион, в котором находится станция'
              type: object
            - $ref: '#/components/schemas/_IncludesArea'
        hex_color:
          description: Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)
          type: string
        id:
          description: Идентификатор станции метро
          type: string
        lat:
          description: Широта
          type: number
        lng:
          description: Долгота
          type: number
        order:
          description: Порядковый номер станции в линии метро
          type: number
      required:
        - id
        - hex_color
        - lat
        - lng
        - order
        - area
      title: Станция метро
      type: object
    _IncludesClusterMetroLine:
      properties:
        area:
          allOf:
            - description: 'Регион (город), в котором находится линия'
              type: object
            - $ref: '#/components/schemas/_IncludesArea'
        hex_color:
          description: Цвет линии в HEX-формате `RRGGBB` (от `000000` до `FFFFFF`)
          type: string
        id:
          description: Идентификатор линии
          type: string
      required:
        - id
        - hex_color
        - area
      title: Линия метро
      type: object
    WebhookSubscriptionsOutput:
      additionalProperties: false
      properties:
        items:
          description: Cписок подписок пользователя
          items:
            $ref: '#/components/schemas/WebhookSubscriptionItem'
          minItems: 0
          type: array
      required:
        - items
      title: Объект с подписками
      type: object
    WebhookSubscriptionItem:
      allOf:
        - $ref: '#/components/schemas/WebhookSubscriptionCreate'
        - additionalProperties: false
          properties:
            id:
              description: Идентификатор подписки
              example: q1ww2e2r4ty
              type: string
          required:
            - id
          type: object
      title: Подписка пользователя
    ErrorsDraftError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки.
          enum:
            - vacancy
          example: vacancy
          type: string
        value:
          description: Значение ошибки
          enum:
            - vacancy_draft_limit_exceeded
          example: vacancy_draft_limit_exceeded
          type: string
      required:
        - type
        - value
      title: Ошибка.
      type: object
    ErrorsBadJsonDataErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadJsonDataError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Невалидный json
    ErrorsBadJsonDataError:
      properties:
        description:
          description: Описание ошибки
          example: Значение неправильное
          nullable: true
          type: string
        pointer:
          description: |
            Путь до параметра, в котором возникла ошибка.

            Для указания параметра используется формат JsonPointer [RFC 6901](https://tools.ietf.org/html/rfc6901)
          example: /contacts/phones/1/number
          type: string
        reason:
          description: |
            Причина ошибки. Возможные значения:
              * `required` - отсутствует обязательное поле
              * `invalid` - значение введено не корректно
              * `size_less_than_min` - пустой массив
          enum:
            - required
            - invalid
            - size_less_than_min
          example: required
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          example: bad_json_data
          type: string
        value:
          description: Название поля с ошибкой
          example: employer_id
          type: string
      required:
        - type
      title: Общая ошибка
      type: object
    ErrorsVacancyErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsVacancyError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Oшибки
    ErrorsVacancyError:
      additionalProperties: false
      properties:
        found:
          description: Количество найденных дублей вакансии
          type: number
        items:
          description: Массив идентификаторов вакансий-дублей
          items:
            nullable: false
            properties:
              id:
                description: Идентификатор вакансии
                example: 78789890
                type: number
            required:
              - id
            type: object
          minItems: 1
          type: array
        reason:
          description: Причина ошибки
          example: is_empty
          type: string
        type:
          description: Тип ошибки
          example: bad_json_data
          type: string
        value:
          description: Наименование поля с ошибкой
          example: specializations
          type: string
      required:
        - type
        - value
      title: Ошибка
      type: object
    ErrorsBadArgumentEmployerManagerErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки в параметрах запроса
    ErrorsBadArgumentEmployerManagerError:
      additionalProperties: false
      properties:
        reason:
          description: Описание ошибки
          example: too_long_value
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_argument
            - bad_request
            - managers
          example: bad_argument
          type: string
        value:
          description: Название поля с ошибкой
          example: resume_id
          type: string
      required:
        - type
      title: Ошибка в параметре запроса
      type: object
    ErrorsBadJsonDataArtifactUploadErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadJsonDataArtifactUploadError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибка при загрузке артефакта
    ErrorsBadJsonDataArtifactUploadError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - artifacts
          example: artifacts
          type: string
        value:
          description: |
            Название поля с ошибкой. Возможные значения:
            * `file` — не указан файл, либо указано несколько.
            * `type` — некорректное значение параметра `type`.
            * `description` — слишком длинное описание.
            * `limit_exceeded` — превышено количество артефактов.
            * `unknown_format` — неизвестный формат файла.
          enum:
            - file
            - type
            - description
            - limit_exceeded
            - unknown_format
          example: limit_exceeded
          type: string
      required:
        - type
        - value
      title: Ошибка при загрузке артефакта
      type: object
    DictionariesSkillsResponse:
      description: Список ключевых навыков
      properties:
        items:
          description: Массив ключевых навыков
          items:
            $ref: '#/components/schemas/_IncludesSkillSetItem'
          type: array
      required:
        - items
      title: Список ключевых навыков
      type: object
    DictionariesLangResponse:
      items:
        $ref: '#/components/schemas/DictionariesLangItem'
      title: Список языков
      type: array
    DictionariesLangItem:
      properties:
        id:
          description: Идентификатор языка
          example: ita
          type: string
        name:
          description: Название языка
          example: Итальянский
          type: string
      required:
        - id
        - name
      title: Язык
    ErrorsNotFoundVacancyBlacklistedErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок.
              items:
                $ref: '#/components/schemas/ErrorsNotFoundVacancyBlacklistedError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках.
      title: Не найдено.
    ErrorsNotFoundVacancyBlacklistedError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - vacancies_blacklist
          example: vacancies_blacklist
          type: string
        value:
          description: |
            Название поля с ошибкой. Возможные значения:
            * `not_found` — вакансия для добавления в список не найдена
          enum:
            - not_found
          example: not_found
          type: string
      required:
        - type
        - value
      title: Ошибка.
      type: object
    AuthUserToken:
      additionalProperties: false
      properties:
        access_token:
          type: string
        expires_in:
          description: Время жизни токена в секундах.
          format: int64
          minimum: 0
          type: integer
        refresh_token:
          description: 'Токен, который можно использовать для продления срока жизни соответствующего access токена.'
          type: string
        token_type:
          description: Тип выданного токена. Всегда принимает значение `bearer`.
          enum:
            - bearer
          type: string
      required:
        - access_token
        - token_type
        - expires_in
        - refresh_token
      title: Авторизация пользователя
      type: object
    ErrorsVacancyProlongateErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsVacancyProlongateError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Oшибки при продлении вакансии
    ErrorsVacancyProlongateError:
      additionalProperties: false
      properties:
        type:
          description: Тип ошибки
          enum:
            - vacancies
          example: vacancies
          type: string
        value:
          description: |
            Причина ошибки:

            * `not_enough_purchased_services` — купленных услуг недостаточно для продления данного типа вакансии.
            * `quota_exceeded` — квота менеджера на публикацию данного типа вакансии закончилась.
            * `prolongation_forbidden` — продление вакансий недоступно текущему менеджеру.
            * `unavailable_for_archived` — продление недоступно для архивной вакансии.
            * `too_early` — продление раньше времени
          enum:
            - not_enough_purchased_services
            - quota_exceeded
            - prolongation_forbidden
            - unavailable_for_archived
            - too_early
          example: quota_exceeded
          type: string
      required:
        - type
        - value
      title: Ошибка
      type: object
    EmployerManagersAddEmployerManager:
      properties:
        additional_phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Дополнительный телефон менеджера
        area:
          $ref: '#/components/schemas/EmployerManagersAreaId'
        email:
          description: Адрес электронной почты менеджера
          type: string
        first_name:
          description: Имя менеджера
          type: string
        is_main_contact_person:
          description: Является ли менеджер основным контактным лицом
          type: boolean
        last_name:
          description: Фамилия менеджера
          type: string
        manager_type:
          $ref: '#/components/schemas/EmployerManagersManagerTypeId'
        middle_name:
          description: Отчество менеджера
          type: string
        permissions:
          description: 'Список [прав менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
          items:
            $ref: '#/components/schemas/EmployerManagersPermissions'
          type: array
        phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Основной телефон менеджера
        position:
          description: Должность менеджера
          type: string
      required:
        - manager_type
        - email
        - position
        - first_name
        - last_name
        - is_main_contact_person
        - phone
        - area
      title: Информация о новом менеджере
    EmployerManagersAreaId:
      properties:
        id:
          description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
          type: string
      required:
        - id
      title: Регион
    EmployerManagersManagerTypeId:
      properties:
        id:
          description: 'Идентификатор [типа менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
          type: string
      required:
        - id
      title: Тип менеджера
    EmployerManagersPermissions:
      properties:
        id:
          description: Идентификатор права
          type: string
      required:
        - id
      title: Права доступа
    EmployerManagersPhone:
      properties:
        city:
          description: Код города
          type: string
        comment:
          description: Комментарий
          type: string
        country:
          description: Код страны
          type: string
        formatted:
          description: Номер телефона отформатированный
          type: string
        number:
          description: Номер
          type: string
      required:
        - country
        - city
        - number
    WebhookErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/WebhookError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Бизнес ошибки
    WebhookError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          example: notifications
          type: string
        value:
          description: |
            Описание ошибки:
              * already_exist - У текущего пользователя/компании уже есть подписка для данного приложения (включая подписку на резюме)
          enum:
            - already_exist
          example: already_exist
          type: string
      required:
        - type
        - value
      title: Ошибка
      type: object
    SuggestsEducationalInstitutions:
      properties:
        items:
          description: Информация о найденных учебных заведениях
          items:
            $ref: '#/components/schemas/_IncludesEducationalInstitutionItem'
          title: Массив найденных учебных заведений
          type: array
      required:
        - items
      type: object
    _IncludesEducationalInstitutionItem:
      properties:
        acronym:
          description: Сокращенное название учебного заведения
          nullable: true
          type: string
        area:
          allOf:
            - $ref: '#/components/schemas/SuggestsArea'
            - type: object
          description: Регион
        id:
          description: Идентификатор учебного заведения
          type: string
        synonyms:
          description: Альтернативное название учебного заведения
          nullable: true
          type: string
        text:
          description: Полное название учебного заведения
          type: string
      required:
        - id
        - text
        - area
      type: object
    ErrorsRequestEntityTooLargeErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsRequestEntityTooLargeError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: В запросе передана слишком большая сущность
    ErrorsRequestEntityTooLargeError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - artifacts
          example: artifacts
          type: string
        value:
          description: Краткое текстовое описание причины ошибки
          enum:
            - image_too_large
          example: image_too_large
          type: string
      required:
        - type
        - value
      title: Слишком большой файл
      type: object
    ErrorsBadJsonErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadJsonError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Переданный формат не json
    ErrorsBadJsonError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_json_data
          example: bad_json_data
          type: string
      required:
        - type
      title: Общая ошибка
      type: object
    ErrorsBadAuthorizationVacancyErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadAuthorizationVacancyError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки добавления вакансии в отобранное
    ErrorsBadAuthorizationVacancyError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - vacancies_favorited
          example: vacancies_favorited
          type: string
        value:
          description: |
            Возможные ошибки:
              * `vacancy_archived` — Вакансия уже в архиве и не может быть добавлена в отобранное
              * `limit_exceeded` — Превышен лимит количества отобранных вакансий
          enum:
            - vacancy_archived
            - limit_exceeded
          example: vacancy_archived
          type: string
      required:
        - type
        - value
      title: Ошибка добавления вакансии в отобранные
      type: object
    _IncludesId:
      properties:
        id:
          description: Идентификатор
          type: string
      required:
        - id
      type: object
    ErrorsNotFoundEmployersBlacklistedErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок.
              items:
                $ref: '#/components/schemas/ErrorsNotFoundEmployersBlacklistedError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках.
      title: Не найдено.
    ErrorsNotFoundEmployersBlacklistedError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - employers_blacklist
          example: employers_blacklist
          type: string
        value:
          description: |
            Название поля с ошибкой. Возможные значения:
            * `not_found` — работодатель для добавления в список не найден
          enum:
            - not_found
          example: not_found
          type: string
      required:
        - type
        - value
      title: Ошибка.
      type: object
    ErrorsBadArgumentVacancyErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadArgumentVacancyError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибка добавления вакансии в скрытые
    ErrorsBadArgumentVacancyError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - vacancies_blacklist
          example: vacancies_blacklist
          type: string
        value:
          description: |
            Название поля с ошибкой:

            * `limit_exceeded` — превышен лимит на количество вакансий в списке скрытых
          enum:
            - limit_exceeded
          example: limit_exceeded
          type: string
      required:
        - type
      title: Ошибка в параметре запроса
      type: object
    ErrorsBadAuthorizationErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadAuthorizationError'
              minItems: 1
              type: array
            oauth_error:
              description: |
                Ошибки авторизации:
                  * `token-revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](https://github.com/hhru/api/blob/master/docs/authorization.md)
                  * `token-expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](https://github.com/hhru/api/blob/master/docs/authorization.md#refresh_token)
              enum:
                - token-revoked
                - token-expired
              example: token-revoked
              type: string
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки авторизации пользователя
    ErrorsBadAuthorizationError:
      additionalProperties: false
      properties:
        allowed_accounts:
          description: |
            Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.
            Актуально только в случае авторизации работодателя.
          items:
            $ref: '#/components/schemas/ManagerAccount'
          minItems: 1
          type: array
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - forbidden
            - oauth
            - manager_extra_accounts
            - manager_accounts
          example: oauth
          type: string
        value:
          description: |
            Общие ошибки:
              * `bad_authorization` — Токен авторизации не существует или не валидный
              * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](https://github.com/hhru/api/blob/master/docs/authorization.md#refresh_token)
              * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](https://github.com/hhru/api/blob/master/docs/authorization.md)
              * `application_not_found` — Ваше приложение было удалено
              * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)
              * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта
              * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](https://github.com/hhru/api/blob/master/docs/authorization_for_user.md)
              * `application_auth_expected` — Передана авторизация пользователя, метод требует [авторизации приложения](https://github.com/hhru/api/blob/master/docs/authorization_for_application.md)
          enum:
            - bad_authorization
            - token_expired
            - token_revoked
            - application_not_found
            - manager_extra_account_not_found
            - used_manager_account_forbidden
            - user_auth_expected
            - application_auth_expected
          example: bad_authorization
          type: string
      required:
        - type
      title: Ошибка авторизации пользователя
      type: object
    ManagerAccount:
      additionalProperties: false
      description: Информация о рабочем аккаунте менеджера
      properties:
        employer:
          $ref: '#/components/schemas/ManagerAccountCompany'
        id:
          description: Идентификатор рабочего аккаунта менеджера
          example: '12345678'
          type: string
      required:
        - id
        - employer
      title: Рабочий аккаунт менеджера
      type: object
    ManagerAccountCompany:
      additionalProperties: false
      description: 'Информация о компании, к которой прикреплен рабочий аккаунт менеджера'
      properties:
        id:
          description: Идентификатор компании
          example: '1455'
          type: string
        name:
          description: Название компании
          example: HeadHunter
          type: string
      required:
        - id
        - name
      title: Компания
      type: object
    ManagerSettings:
      additionalProperties: false
      description: Информация о предпочтениях менеджера
      properties:
        default_currency:
          $ref: '#/components/schemas/ManagerSettingsCurrency'
        default_vacancy_branded_template:
          $ref: '#/components/schemas/VacancyBrandedTemplate'
        use_sms_notification:
          description: |
            Предпочтение по использованию флага `send_sms`
            при [приглашении соискателя](https://github.com/hhru/api/blob/master/docs/employer_negotiations.md#add-invite).
          example: true
          type: boolean
      required:
        - default_currency
        - use_sms_notification
      title: Предпочтения менеджера
      type: object
    ManagerSettingsCurrency:
      additionalProperties: false
      description: |
        Предпочитаемая валюта при [публикации вакансии](#tag/Upravlenie-vakansiyami/paths/~1vacancies/post).
      properties:
        abbr:
          description: Краткое обозначение валюты
          example: руб.
          type: string
        code:
          description: Код валюты
          example: RUR
          type: string
        name:
          description: Название валюты
          example: Рубли
          type: string
      required:
        - code
        - name
        - abbr
      title: Предпочитаемая валюта
      type: object
    VacancyAddVacancyRequestBody:
      allOf:
        - $ref: '#/components/schemas/VacancyAddVacancyRequestBodyGeneral'
        - anyOf:
            - $ref: '#/components/schemas/VacancyProfessionalRolesWithSpecializations'
            - $ref: '#/components/schemas/VacancySpecializationsWithProfessionalRoles'
      description: 'Поля, передаваемые в запросе на создание вакансии'
      type: object
    VacancyProfessionalRolesWithSpecializations:
      properties:
        professional_roles:
          $ref: '#/components/schemas/VacancyProfessionalRoles'
        specializations:
          allOf:
            - nullable: true
            - $ref: '#/components/schemas/VacancySpecializations'
      required:
        - professional_roles
      title: with_professional_roles=true
    VacancyProfessionalRoles:
      description: список профессиональных ролей
      items:
        $ref: '#/components/schemas/VacancyProfessionalRoleItem'
      type: array
    VacancyProfessionalRoleItem:
      properties:
        id:
          description: Идентификатор профессиональной роли
          type: string
      title: Объект профессиональной роли
      type: object
    VacancySpecializations:
      description: список специализаций
      items:
        $ref: '#/components/schemas/VacancySpecializationItem'
      type: array
    VacancySpecializationItem:
      properties:
        id:
          description: 'специализация из [справочника](https://github.com/hhru/api/blob/master/docs/specializations.md)'
          type: string
      title: Объект специализаций
      type: object
    VacancyAddVacancyRequestBodyGeneral:
      description: 'Поля, передаваемые в запросе на создание вакансии'
      properties:
        accept_handicapped:
          $ref: '#/components/schemas/VacancyAcceptHandicapped'
        accept_incomplete_resumes:
          $ref: '#/components/schemas/VacancyAcceptIncompleteResumes'
        accept_kids:
          $ref: '#/components/schemas/VacancyAcceptKids'
        accept_temporary:
          $ref: '#/components/schemas/VacancyAcceptTemporary'
        address:
          $ref: '#/components/schemas/VacancyAddress'
        allow_messages:
          $ref: '#/components/schemas/VacancyAllowMessages'
        area:
          $ref: '#/components/schemas/VacancyArea'
        billing_type:
          $ref: '#/components/schemas/VacancyBillingType'
        branded_template:
          $ref: '#/components/schemas/VacancyBrandedTemplate'
        code:
          $ref: '#/components/schemas/VacancyCode'
        contacts:
          $ref: '#/components/schemas/VacancyContacts'
        custom_employer_name:
          $ref: '#/components/schemas/VacancyCustomEmployerName'
        department:
          $ref: '#/components/schemas/VacancyDepartment'
        description:
          $ref: '#/components/schemas/VacancyDescription'
        driver_license_types:
          $ref: '#/components/schemas/VacancyDriverLicenseTypes'
        employment:
          $ref: '#/components/schemas/VacancyEmployment'
        experience:
          $ref: '#/components/schemas/VacancyExperience'
        key_skills:
          $ref: '#/components/schemas/VacancyKeySkills'
        languages:
          $ref: '#/components/schemas/VacancyLanguages'
        manager:
          $ref: '#/components/schemas/VacancyManager'
        name:
          $ref: '#/components/schemas/VacancyName'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_notifications:
          $ref: '#/components/schemas/VacancyResponseNotifications'
        response_url:
          $ref: '#/components/schemas/VacancyResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        schedule:
          $ref: '#/components/schemas/VacancySchedule'
        test:
          $ref: '#/components/schemas/VacancyTest'
        type:
          $ref: '#/components/schemas/VacancyType'
        working_days:
          $ref: '#/components/schemas/VacancyWorkingDays'
        working_time_intervals:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervals'
        working_time_modes:
          $ref: '#/components/schemas/VacancyWorkingTimeModes'
      required:
        - name
        - description
        - key_skills
        - area
        - type
        - billing_type
        - employment
      type: object
    VacancyDescription:
      description: 'описание в html, не менее 200 символов'
      title: Описание
      type: string
    VacancyManager:
      nullable: true
      properties:
        id:
          description: 'контактное лицо (менеджер) по размещаемой вакансии, по умолчанию текущий пользователь'
          nullable: true
          type: string
      title: Менеджер
      type: object
    VacancyEmployment:
      nullable: true
      properties:
        id:
          description: 'тип занятости из [справочника employment](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          nullable: true
          type: string
      type: object
    VacancyTest:
      description: 'объект - [тест](#tag/Spravochniki-rabotodatelya/paths/~1employers~1{employer_id}~1tests/get) для вакансии'
      nullable: true
      properties:
        id:
          description: 'тест, который будет добавлен в вакансию'
          nullable: true
          type: string
      type: object
    VacancyCode:
      description: внутренний код вакансии
      nullable: true
      title: Код вакансии
      type: string
    VacancyBillingType:
      properties:
        id:
          description: 'биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: string
      required:
        - id
      type: object
    VacancyKeySkills:
      description: 'список ключевых навыков, не более 30'
      items:
        $ref: '#/components/schemas/VacancyKeySkillItem'
      nullable: true
      title: Ключевые навыки
      type: array
    VacancyKeySkillItem:
      nullable: true
      properties:
        name:
          description: название ключевого навыка
          type: string
      title: Объект ключевых навыков
      type: object
    VacancySpecializationsWithProfessionalRoles:
      properties:
        professional_roles:
          allOf:
            - nullable: true
            - $ref: '#/components/schemas/VacancyProfessionalRoles'
        specializations:
          $ref: '#/components/schemas/VacancySpecializations'
      required:
        - specializations
      title: with_professional_roles=false
    SuggestsAreas:
      additionalProperties: false
      description: Подсказки по регионам
      properties:
        items:
          description: Информация о найденных регионах
          items:
            $ref: '#/components/schemas/SuggestsAreasItem'
          title: Массив регионов
          type: array
      required:
        - items
      title: Подсказки по регионам
      type: object
    SuggestsAreasItem:
      properties:
        id:
          description: Идентификатор региона
          type: string
        text:
          description: Название региона
          type: string
        url:
          description: URL региона
          type: string
      required:
        - id
        - text
        - url
      type: object
    VacancyDraftVacanciesDraftResponse:
      nullable: false
      properties:
        vacancy_ids:
          example:
            - 30251619
            - 30251620
          items:
            type: number
          minItems: 1
          type: array
      type: object
    AuthInvalidClientError:
      properties:
        error:
          description: |
            Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
          enum:
            - invalid_client
          example: invalid_client
          type: string
        error_description:
          description: |
            Дополнительное описание ошибки
            * `client_id or client_secret not found` Ошибка может возникнуть в случае, если данный `client_id` не найден или был удален, передан неправильный `client_secret`
          enum:
            - client_id or client_secret not found
          example: client_id or client_secret not found
          type: string
      required:
        - error
        - error_description
      title: invalid_client
      type: object
    EmployerManagersResponse:
      properties:
        found:
          title: Найдено результатов
          type: number
        items:
          items:
            $ref: '#/components/schemas/EmployerManagersEmployerManagerItem'
          minItems: 0
          title: Список менеджеров работодателя
          type: array
        page:
          title: Номер страницы
          type: number
        pages:
          title: Всего страниц
          type: number
        per_page:
          title: Результатов на странице
          type: number
      required:
        - items
        - found
        - page
        - pages
        - per_page
      title: Успешный ответ
    EmployerManagersEmployerManagerItem:
      properties:
        additional_phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Дополнительный телефон менеджера
        area:
          $ref: '#/components/schemas/EmployerManagersArea'
        email:
          description: Адрес электронной почты менеджера
          type: string
        first_name:
          description: Имя менеджера
          type: string
        full_name:
          description: Полное имя менеджера
          type: string
        id:
          description: Идентификатор менеджера
          type: string
        is_main_contact_person:
          description: Является ли менеджер основным контактным лицом
          type: boolean
        last_name:
          description: Фамилия менеджера
          type: string
        middle_name:
          description: Отчество менеджера
          type: string
        name:
          deprecated: true
          description: Полное имя менеджера
          type: string
        phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Основной телефон менеджера
        position:
          description: Должность менеджера
          type: string
        vacancies_count:
          description: Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера
          nullable: true
          type: number
      required:
        - id
        - email
        - position
        - area
      title: Менеджер
    EmployerManagersArea:
      properties:
        id:
          description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md)'
          type: string
        name:
          description: Название региона
          type: string
        url:
          description: Ссылка на информацию о регионе
          type: string
      required:
        - id
        - name
        - url
      title: Регион
    EmployerManagersManagerData:
      properties:
        additional_phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Дополнительный телефон менеджера
        permissions:
          description: 'Список прав, которые можно дать данному типу менеджера'
          items:
            $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
          type: array
        phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Основной телефон менеджера
        position:
          title: Должность менеджера
          type: string
      title: JSON c редактируемыми параметрами менеджера
    EmployerManagerTypesAvailablePermissions:
      properties:
        id:
          description: Идентификатор права
          type: string
        name:
          description: Название права
          type: string
      required:
        - id
        - name
      title: Типы прав доступа
    EmployersEmployerInfo:
      properties:
        alternate_url:
          description: Ссылка на описание работодателя на сайте
          type: string
        applicant_services:
          description: 'Информация о подключенных услугах соискателя, относящихся к данному работодателю'
          properties:
            target_employer:
              description: Услуга \"Хочу тут работать\"
              properties:
                count:
                  description: 'Количество резюме текущего соискателя, к которым подключена услуга \"Хочу тут работать\"'
                  type: number
              type: object
          type: object
        area:
          allOf:
            - $ref: '#/components/schemas/_IncludesArea'
            - type: object
          description: Информация о регионе работодателя
        branded_description:
          description: |
            Строка с кодом HTML (возможно наличие `<script/>` и `<style/>`), которая является альтернативой стандартному описанию работодателя. HTML адаптирован для мобильных устройств и корректно отображается без поддержки Javascript. 

            При этом:

            - Контент тянется по ширине на 100% ширины контейнера и умещается без прокрутки в 300px.
            - Контент рассчитан на то, что он будет вставлен в обвязку, в которую входит название, логотип, сайт и ссылка на вакансии работодателя.
            - Изображения, которые могут встретиться в таком описании, адаптированы под retina-дисплеи.
            - Размер шрифта не меньше 12px, размер межстрочного интервала не меньше 16px.

            Значение может быть `null`, если у работодателя отсутствует индивидуальное описание
          nullable: true
          type: string
        branding:
          description: 'Значение может быть `null`, если у работодателя отсутствует брендирование страницы'
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/_IncludesNullableObject'
            - $ref: '#/components/schemas/EmployersBrandingConstructor'
            - $ref: '#/components/schemas/EmployersBrandingMakeup'
        description:
          description: Описание работодателя в виде строки с кодом HTML (без `<script/>` и `<style/>`)
          nullable: true
          type: string
        id:
          description: Идентификатор работодателя
          type: string
        industries:
          description: 'Список отраслей работодателя. Элементы [справочника индустрий](https://api.hh.ru/openapi/redoc#tag/Obshie-spravochniki/paths/~1industries/get)'
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          type: array
        insider_interviews:
          description: Список интервью
          items:
            $ref: '#/components/schemas/EmployersInsiderInterviews'
          minItems: 0
          type: array
        logo_urls:
          description: 'Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`)'
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/_IncludesLogoUrls'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        name:
          description: Название работодателя
          type: string
        open_vacancies:
          description: Количество открытых вакансий у работодателя
          type: number
        relations:
          description: 'Если работодатель добавлен в черный список, то вернется `[''blacklisted'']`, иначе `[]`'
          items:
            enum:
              - blacklisted
              - null
            nullable: true
            type: string
          type: array
        site_url:
          description: Адрес сайта работодателя
          type: string
        trusted:
          description: 'Флаг, показывающий, прошел ли работодатель [проверку на сайте](https://feedback.hh.ru/article/details/id/5951)'
          type: boolean
        type:
          description: 'Тип работодателя (прямой работодатель, кадровое агентство и т.п.). Возможные значения описаны в [справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `employer_type`. Возвращает `null`, если тип работодателя скрыт'
          nullable: true
          type: string
        vacancies_url:
          description: URL для получения поисковой выдачи с вакансиями данного работодателя
          type: string
      required:
        - name
        - id
        - site_url
        - vacancies_url
        - open_vacancies
        - trusted
        - alternate_url
        - insider_interviews
        - area
        - relations
        - industries
      title: Работодатель
    EmployersBrandingConstructor:
      properties:
        type:
          enum:
            - constructor
          type: string
        url:
          description: Ссылка на webview версию бренд страницы
          type: string
        widgets:
          description: Список виджетов на странице
          items:
            oneOf:
              - $ref: '#/components/schemas/EmployersBrandingConstructorGalleryWidget'
          type: array
      required:
        - type
        - url
        - widgets
      title: Бренд страница сделанная с помощью конструктора бренд страниц
      type: object
    EmployersBrandingConstructorGalleryWidget:
      description: Виджет галереи
      properties:
        items:
          description: Список изображений в галерее
          items:
            properties:
              picture_id:
                description: Идентификатор изображения
                type: number
              resized_path:
                description: Путь к изображению на cdn хранилище
                type: string
            required:
              - picture_id
              - resized_path
            type: object
          type: array
        type:
          enum:
            - gallery
          type: string
      type: object
    EmployersInsiderInterviews:
      properties:
        id:
          description: Идентификатор интервью
          type: string
        title:
          description: Заголовок интервью
          type: string
        url:
          description: 'Адрес страницы, содержащей интервью'
          type: string
      required:
        - url
        - id
        - title
      title: Интервью
      type: object
    EmployersBrandingMakeup:
      properties:
        template_code:
          description: 'Уникальный код активного бренд шаблона страницы в формате "makeup:\d+"'
          example: 'makeup:123'
          type: string
        template_version_id:
          description: Идентификатор активной версии бренд шаблона страницы
          type: string
        type:
          enum:
            - makeup
          type: string
      required:
        - type
        - template_code
        - template_version_id
      title: Полностью кастомный вид бренд страниц
      type: object
    UserStatusesAvailable:
      example:
        job_search_statuses:
          - allowed_when_can_start_work_statuses:
              - tomorrow
              - in_two_weeks
              - more_than_two_weeks
            description: 'Откликаюсь, прохожу собеседования, готов выйти в ближайшее время'
            id: active_search
            name: В активном поиске работы
          - allowed_when_can_start_work_statuses:
              - tomorrow
              - in_two_weeks
              - more_than_two_weeks
            description: 'Хочу получать только подборки вакансий, рассматриваю избранные предложения'
            id: looking_for_offers
            name: Хочу рассмотреть предложения
          - allowed_when_can_start_work_statuses: []
            description: В данный момент не заинтересован в новых предложениях
            id: not_looking_for_job
            name: Пока не ищу работу
        job_search_statuses_applicant:
          - id: active_search
            name: В активном поиске работы
          - id: looking_for_offers
            name: Хочу рассмотреть предложения
          - id: not_looking_for_job
            name: Пока не ищу работу
        job_search_statuses_employer:
          - id: active_search
            name: Активно ищет работу
          - id: looking_for_offers
            name: Рассматривает предложения
          - id: not_looking_for_job
            name: Не ищет работу
        when_can_start_work_statuses:
          - id: tomorrow
            name: Готов выйти завтра
          - id: in_two_weeks
            name: В течение двух недель
          - id: more_than_two_weeks
            name: Через 2 недели и более
      properties:
        job_search_statuses:
          items:
            $ref: '#/components/schemas/UserStatusesJobSearchStatusDictionary'
          type: array
        job_search_statuses_applicant:
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          type: array
        job_search_statuses_employer:
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          type: array
        when_can_start_work_statuses:
          items:
            $ref: '#/components/schemas/UserStatusesWhenCanStartWorkStatus'
          type: array
      required:
        - job_search_statuses_applicant
        - job_search_statuses_employer
      title: Список доступных пользовательских статусов для соискателя
      type: object
    UserStatusesWhenCanStartWorkStatus:
      deprecated: true
      properties:
        id:
          description: Идентификатор статуса
          example: can_start_tomorrow
          type: string
        name:
          description: Название статуса
          example: Готов выйти завтра
          type: string
      required:
        - id
        - name
      title: Статус "когда смогу выйти на работу" Deprecated
      type: object
    UserStatusesJobSearchStatusDictionary:
      allOf:
        - $ref: '#/components/schemas/UserStatusesJobSearchStatus'
        - properties:
            allowed_when_can_start_work_statuses:
              description: Массив с доступными для выбора `when_can_start_work_status`
              items:
                type: string
              type: array
          required:
            - allowed_when_can_start_work_statuses
          type: object
      title: Статус поиска работы соискателем
      type: object
    UserStatusesJobSearchStatus:
      properties:
        description:
          deprecated: true
          description: Детальное описание статуса
          example: 'Откликаюсь, прохожу собеседования'
          type: string
        id:
          description: Идентификатор статуса
          example: active_search
          type: string
        name:
          description: Название статуса
          example: В активном поиске работы
          type: string
      required:
        - id
        - name
      title: Статус поиска работы соискателем
      type: object
    EmployerAddressesEmployerAddressResponse:
      allOf:
        - $ref: '#/components/schemas/EmployerAddressesEmployerAddressItems'
        - $ref: '#/components/schemas/_IncludesPagination'
      example:
        $ref: '#/components/examples/EmployerAddressItem/value'
      title: Успешный ответ
    EmployerAddressesEmployerAddressItems:
      properties:
        items:
          description: Список адресов работодателя
          items:
            $ref: '#/components/schemas/EmployerAddressesEmployerAddressItem'
          type: array
      required:
        - items
      title: JSON c параметрами адреса
    EmployerAddressesEmployerAddressItem:
      properties:
        building:
          description: Номер дома
          nullable: true
          type: string
        city:
          description: Город
          nullable: true
          type: string
        deleted:
          description: Удалён ли адрес
          type: boolean
        description:
          description: Дополнительная информация об адресе
          nullable: true
          type: string
        id:
          description: Идентификатор адреса
          type: string
        lat:
          description: Географическая широта
          nullable: true
          type: number
        lng:
          description: Географическая долгота
          nullable: true
          type: number
        metro_stations:
          items:
            $ref: '#/components/schemas/_IncludesMetroStation'
          type: array
        raw:
          description: Полный адрес
          nullable: true
          type: string
        street:
          description: Улица
          nullable: true
          type: string
      required:
        - city
        - lat
        - lng
      title: Адрес
    AuthInvalidGrantError:
      properties:
        error:
          description: |
            Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
          enum:
            - invalid_grant
          example: invalid_grant
          type: string
        error_description:
          description: |
            Дополнительное описание ошибки
            * `token has already been refreshed` Ошибка возникает при попытке воспользоваться refresh-токеном второй раз
            * `token not expired` Ошибка возникает при попытке обновить действующий access-токен. access-токен можно обновлять только после того, как он истек
            * `token was revoked` Токен был отозван. Например, токен отзывается, если время действия пароля истекло
            * `bad token ` Передано неправильное значение токена
            * `code has already been used` `authorization_code` уже был использован (его можно использовать только один раз)
            * `code expired` `authorization_code` истек
            * `code was revoke` `authorization_code` был отозван (это происходит, если время действия пароля истекло)
            * `token deactivated ` Токен был деактивирован. Токен деактивируется после того, как пользователь сменил пароль
          enum:
            - token has already been refreshed
            - token not expired
            - token was revoked
            - bad token
            - code has already been used
            - code expired
            - code was revoke
            - token deactivated
          example: account not found
          type: string
      required:
        - error
        - error_description
      title: invalid_grant
      type: object
    EmployerManagersEmployerManagerInfo:
      properties:
        additional_phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Дополнительный телефон менеджера
        area:
          $ref: '#/components/schemas/EmployerManagersArea'
        email:
          description: Адрес электронной почты менеджера
          type: string
        first_name:
          description: Имя менеджера
          type: string
        full_name:
          description: Полное имя менеджера
          type: string
        id:
          description: Идентификатор менеджера
          type: string
        is_main_contact_person:
          description: Является ли менеджер основным контактным лицом
          type: boolean
        last_name:
          description: Фамилия менеджера
          type: string
        manager_type:
          $ref: '#/components/schemas/EmployerManagersManagerType'
        middle_name:
          description: Отчество менеджера
          type: string
        name:
          deprecated: true
          description: Полное имя менеджера
          type: string
        permissions:
          description: 'Список [прав менеджера](#tag/Menedzhery-rabotodatelya/paths/~1employers~1%7Bemployer_id%7D~1manager_types/get)'
          items:
            $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
          type: array
        phone:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersPhone'
            - type: object
          description: Основной телефон менеджера
        position:
          description: Должность менеджера
          type: string
        vacancies_count:
          description: Количество опубликованных (активных) вакансий у данного менеджера. `null` — если у пользователя нет прав на просмотр вакансий этого менеджера
          nullable: true
          type: number
      required:
        - id
        - email
        - position
        - first_name
        - last_name
        - is_main_contact_person
        - phone
        - permissions
      title: Информация о менеджере
    EmployerManagersManagerType:
      properties:
        id:
          description: Идентификатор типа менеджера
          type: string
        name:
          description: Название типа менеджера
          type: string
      required:
        - id
        - name
      title: Тип менеджера
    EmployersEmployerVacancyAreasResponse:
      allOf:
        - $ref: '#/components/schemas/EmployersEmployerVacancyAreasItems'
        - $ref: '#/components/schemas/_IncludesPagination'
      title: Успешный ответ
    EmployersEmployerVacancyAreasItems:
      properties:
        items:
          description: Список регионов
          items:
            $ref: '#/components/schemas/_IncludesArea'
          minItems: 0
          type: array
      required:
        - items
    DictionariesFacultiesResponse:
      items:
        $ref: '#/components/schemas/_IncludesIdName'
      title: Список факультетов
      type: array
    LocalesResponse:
      items:
        $ref: '#/components/schemas/LocalesLocaleItem'
      title: Список доступных локалей
      type: array
    LocalesLocaleItem:
      properties:
        current:
          description: '`true` для текущей локали, `false` для остальных'
          type: boolean
        id:
          description: Идентификатор локали
          type: string
        name:
          description: Имя локали
          type: string
      required:
        - id
        - name
        - current
      title: Локаль
    WebhookSubscriptionUpdate:
      additionalProperties: false
      properties:
        actions:
          description: 'Cписок событий, на которые нужно подписаться.'
          items:
            anyOf:
              - $ref: '#/components/schemas/WebhookActionItem'
          minItems: 1
          type: array
        url:
          description: 'URL, на который будет отправляться POST запрос при наступлении события.'
          example: 'http://www.example.com'
          format: uri
          type: string
      title: Объект подписки
      type: object
    ErrorsBadArgumentEmployerBlacklistErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerBlacklistError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибка добавления работодателя в скрытые
    ErrorsBadArgumentEmployerBlacklistError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - employers_blacklist
          example: employers_blacklist
          type: string
        value:
          description: |
            Название поля с ошибкой:
            * `limit_exceeded` — превышен лимит на количество работодателей в списке скрытых
          enum:
            - limit_exceeded
          example: limit_exceeded
          type: string
      required:
        - type
      title: Ошибка в параметре запроса
      type: object
    AuthAppToken:
      additionalProperties: false
      properties:
        access_token:
          type: string
        token_type:
          description: Тип выданного токена. Всегда принимает значение `bearer`.
          enum:
            - bearer
          type: string
      required:
        - access_token
        - token_type
      title: Авторизация приложения
      type: object
    ApplicantCommentsApplicantCommentItem:
      properties:
        access_type:
          allOf:
            - $ref: '#/components/schemas/ApplicantCommentsAccessType'
            - type: object
          description: 'Тип доступа для комментария. Возможные значения перечислены [в справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `applicant_comment_access_type`'
        author:
          allOf:
            - $ref: '#/components/schemas/ApplicantCommentsAuthor'
            - type: object
          description: Автор комментария
        created_at:
          description: Дата создания комментария
          type: string
        id:
          description: Уникальный идентификатор комментария
          type: string
        is_mine:
          description: Комментарий написан текущим пользователем?
          type: boolean
        text:
          description: Текст комментария. Может содержать символы новой строки
          type: string
      required:
        - author
        - created_at
        - id
        - is_mine
        - text
        - access_type
      title: Комментарий
    ApplicantCommentsAuthor:
      properties:
        full_name:
          description: ФИО автора комментария
          type: string
      required:
        - full_name
      title: Автор комментария
    ApplicantCommentsAccessType:
      properties:
        id:
          description: Идентификатор типа доступа
          type: string
        name:
          description: Название типа доступа
          type: string
      required:
        - id
        - name
      title: Тип доступа
    ArtifactsArtifactUploadBody:
      properties:
        description:
          description: Текстовое описание. Имеет смысл для `portfolio`
          nullable: true
          type: string
        file:
          description: Файл изображения
          format: binary
          type: string
        type:
          description: 'Тип артефакта: `photo` или `portfolio`'
          type: string
      required:
        - type
        - file
    MeProfile:
      description: Информация о текущем авторизованном пользователе
      discriminator:
        mapping:
          applicant: '#/components/schemas/MeApplicantProfile'
          application: '#/components/schemas/MeAnyProfile'
          employer: '#/components/schemas/MeEmployerProfile'
        propertyName: auth_type
      oneOf:
        - $ref: '#/components/schemas/MeAnyProfile'
        - $ref: '#/components/schemas/MeApplicantProfile'
        - $ref: '#/components/schemas/MeEmployerProfile'
    MeEmployerProfile:
      allOf:
        - $ref: '#/components/schemas/MeAnyUserProfile'
        - additionalProperties: true
          properties:
            employer:
              $ref: '#/components/schemas/MeEmployerProfileCompany'
            is_in_search:
              deprecated: true
              nullable: true
            manager:
              $ref: '#/components/schemas/MeEmployerProfileManager'
            negotiations_url:
              deprecated: true
              nullable: true
            personal_manager:
              $ref: '#/components/schemas/MeEmployerProfilePersonalManager'
            resumes_url:
              deprecated: true
              nullable: true
          type: object
      description: 'Профиль текущего пользователя, авторизованного как работодатель.'
      title: Профиль работодателя
    MeEmployerProfileCompany:
      description: Информация о компании работодателя
      properties:
        id:
          description: Идентификатор компании
          example: '1455'
          type: string
        manager_id:
          description: Идентификатор персонального менеджера
          example: '4062820'
          type: string
        name:
          description: Название компании
          example: HeadHunter
          type: string
      required:
        - id
        - manager_id
        - name
      title: Компания работодателя
      type: object
    MeEmployerProfilePersonalManager:
      description: Информация о персональном менеджере для работодателя
      properties:
        email:
          description: email персонального менеджера
          example: smirnov@example.com
          format: email
          type: string
        first_name:
          description: Имя персонального менеджера
          example: Николай
          type: string
        id:
          description: Идентификатор персонального менеджера
          example: '1234567'
          type: string
        is_available:
          description: Доступен ли менеджер в данный момент
          example: false
          type: boolean
        last_name:
          description: Фамилия персонального менеджера
          example: Смирнов
          type: string
        photo_urls:
          additionalProperties: false
          description: Объект с фотографиями менеджера
          nullable: true
          properties:
            big:
              description: URL большой фотографии менеджера
              example: 'https://hhcdn.ru/file/big.jpg'
              format: uri
              nullable: true
              type: string
            small:
              description: URL маленькой фотографии менеджера
              example: 'https://hhcdn.ru/file/small.jpg'
              format: uri
              nullable: true
              type: string
          type: object
        unavailable:
          additionalProperties: false
          description: 'Информация об отсутствии менеджера, либо `null`, если менеджер доступен.'
          nullable: true
          properties:
            until:
              description: 'Время, до которого менеджер недоступен для контакта'
              example: '2016-07-01T08:00:00+0400'
              format: dateTime
              type: string
          type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - is_available
      title: Персональный менеджер для работодателя
      type: object
    MeAnyUserProfile:
      allOf:
        - $ref: '#/components/schemas/MeAnyProfile'
        - additionalProperties: true
          properties:
            email:
              description: Email текущего пользователя
              example: ivanov@example.com
              format: email
              nullable: true
              type: string
            first_name:
              description: Имя текущего пользователя
              example: Александр
              type: string
            id:
              description: Идентификатор текущего пользователя
              example: '12345678'
              type: string
            is_anonymous:
              deprecated: true
              type: boolean
            last_name:
              description: Фамилия текущего пользователя
              example: Иванов
              type: string
            mid_name:
              deprecated: true
              example: Николаевич
              type: string
            middle_name:
              description: Отчество текущего пользователя
              example: Петрович
              nullable: true
              type: string
            phone:
              description: Телефон текущего пользователя
              example: '79164555555'
              format: phone
              nullable: true
              type: string
          required:
            - id
            - first_name
            - last_name
          type: object
      description: 'Базовый профиль текущего пользователя, авторизованного как соискатель или работодатель.'
      title: Базовый профиль
    MeAnyProfile:
      description: |
        Содержит флаги, актуальные для любого типа авторизации: соискатель, работодатель, приложение.
      discriminator:
        mapping:
          applicant: '#/components/schemas/MeApplicantProfile'
          application: '#/components/schemas/MeAnyProfile'
          employer: '#/components/schemas/MeEmployerProfile'
        propertyName: auth_type
      properties:
        auth_type:
          description: Тип авторизации
          example: applicant
          type: string
        is_admin:
          description: Является ли текущий пользователь администратором сайта
          example: false
          type: boolean
        is_applicant:
          description: Является ли текущий пользователь соискателем
          example: false
          type: boolean
        is_application:
          description: Является ли авторизованный клиент приложением
          example: false
          type: boolean
        is_employer:
          description: Является ли текущий пользователь работодателем
          example: false
          type: boolean
      required:
        - is_application
        - is_applicant
        - is_employer
        - is_admin
        - auth_type
      title: Флаги профиля
      type: object
    MeApplicantProfile:
      allOf:
        - $ref: '#/components/schemas/MeAnyUserProfile'
        - additionalProperties: true
          properties:
            counters:
              $ref: '#/components/schemas/MeApplicantProfileCounters'
            employer:
              deprecated: true
              nullable: true
            is_in_search:
              description: Имеет ли текущий пользователь статус "ищу работу"
              example: false
              type: boolean
            manager:
              deprecated: true
              nullable: true
            negotiations_url:
              description: |
                URL, на который нужно сделать GET-запрос, чтобы получить список откликов/приглашений текущего пользователя.
              format: uri
              type: string
            personal_manager:
              deprecated: true
              nullable: true
            profile_videos:
              $ref: '#/components/schemas/ProfileVideosList'
            resumes_url:
              description: |
                URL, на который нужно сделать GET-запрос, чтобы получить список резюме текущего пользователя.
              example: 'https://api.hh.ru/resumes/mine'
              format: uri
              type: string
            user_statuses:
              $ref: '#/components/schemas/UserStatusesApplicant'
          required:
            - counters
            - resumes_url
            - negotiations_url
            - is_in_search
          type: object
      description: 'Профиль текущего пользователя, авторизованного как соискатель.'
      title: Профиль соискателя
    MeApplicantProfileCounters:
      description: Информация о счетчиках соискателя
      properties:
        new_resume_views:
          description: Общее количество новых просмотров всех резюме текущего пользователя.
          example: 2
          minimum: 0
          type: integer
        resumes_count:
          description: Общее количество созданных резюме текущего пользователя.
          example: 5
          minimum: 0
          type: integer
        unread_negotiations:
          description: 'Количество новых непрочитанных откликов (у которых `has_updates: true`).'
          example: 1
          minimum: 0
          type: integer
      required:
        - unread_negotiations
        - new_resume_views
        - resumes_count
      title: Счетчики соискателя
      type: object
    UserStatusesApplicant:
      properties:
        job_search_status:
          $ref: '#/components/schemas/UserStatusesJobSearchStatus'
        when_can_start_work_status:
          $ref: '#/components/schemas/UserStatusesWhenCanStartWorkStatus'
      title: Пользовательский статусы соискателя
      type: object
    ProfileVideosList:
      description: Список видео профиля для текущего или запрашиваемого соискателя.
      example:
        $ref: '#/components/examples/ProfileVideosProfileVideosList/value'
      properties:
        items:
          items:
            properties:
              download_url:
                properties:
                  expires_at:
                    description: 'Дата и время, до которых действительна ссылка'
                    type: string
                  url:
                    description: Ссылка на скачивание видео
                    type: string
                required:
                  - url
                  - expires_at
                type: object
              id:
                description: Идентификатор видео
                type: string
            required:
              - id
              - download_url
            type: object
          type: array
      required:
        - items
      title: Список видео профиля
      type: object
    MeEmployerProfileManager:
      description: 'Информация о пользователе, как о менеджере компании.'
      properties:
        has_admin_rights:
          description: Обладает ли текущий менеджер правами администратора
          example: true
          type: boolean
        has_multiple_manager_accounts:
          description: 'Существует ли у пользователя несколько [рабочих аккаунтов](#tag/Menedzhery-rabotodatelya/paths/~1manager_accounts~1mine/get)'
          example: true
          type: boolean
        id:
          description: Идентификатор менеджера
          example: '87654321'
          type: string
        is_main_contact_person:
          description: Является ли текущий менеджер главным контактным лицом компании
          example: true
          type: boolean
        manager_settings_url:
          description: 'URL, на который нужно сделать GET запрос, чтобы получить [предпочтения менеджера](tag/Menedzhery-rabotodatelya/paths/~1employers~1{employer_id}~1managers~1{manager_id}~1settings/get)'
          example: 'https://api.hh.ru/employers/1455/managers/87654321/settings'
          format: uri
          type: string
      required:
        - id
        - has_admin_rights
        - has_multiple_manager_accounts
        - is_main_contact_person
        - manager_settings_url
      title: Информация о менеджере компании
      type: object
    ResumeShouldSendSmsContainer:
      properties:
        phone:
          $ref: '#/components/schemas/ResumeShouldSendSmsPhone'
          description: Информация о телефоне
      required:
        - phone
      type: object
    ResumeShouldSendSmsPhone:
      description: Информация о телефоне соискателя
      properties:
        city:
          description: Префикс города номера телефона
          example: 929
          type: string
        country:
          description: Префикс страны номера телефона
          example: 7
          type: string
        formatted:
          description: Номер телефона отформатированный
          example: +7 (929) 667-21-67
          type: string
        need_verification:
          description: Нужно ли верифицировать номер телефона
          example: false
          type: boolean
        number:
          description: Номер телефона без префиксов
          example: 6672167
          type: string
        restricted_country:
          description: Находится ли номер телефона в черном списке по отправке смс
          example: false
          type: boolean
        verified:
          description: Верифицирован ли номер телефона пользователем
          example: true
          type: boolean
      required:
        - country
        - city
        - number
        - formatted
        - verified
        - need_verification
        - restricted_country
      type: object
    ApplicantCommentsApplicantCommentsList:
      allOf:
        - $ref: '#/components/schemas/ApplicantCommentsApplicantCommentItems'
          type: object
        - $ref: '#/components/schemas/_IncludesPagination'
          type: object
      title: Успешный ответ
    ApplicantCommentsApplicantCommentItems:
      properties:
        items:
          description: Список комментариев
          items:
            $ref: '#/components/schemas/ApplicantCommentsApplicantCommentItem'
          minItems: 0
          type: array
      required:
        - items
    SuggestsProfessionalRoles:
      additionalProperties: false
      description: Подсказки по профессиональным ролям
      properties:
        items:
          description: Информация о найденных профессиональных ролях
          items:
            $ref: '#/components/schemas/SuggestsProfessionalRoleItem'
          title: Массив найденных профессиональных ролей
          type: array
      required:
        - items
      title: Подсказки по профессиональным ролям
      type: object
    SuggestsProfessionalRoleItem:
      properties:
        accept_incomplete_resumes:
          description: 'Профессиональная роль, для которой можно принимать отклики неполным резюме'
          example: true
          type: boolean
        id:
          description: Идентификатор профессиональной роли
          example: '21'
          type: string
        text:
          description: Название профессиональной роли
          example: Водитель
          type: string
      required:
        - id
        - text
        - accept_incomplete_resumes
      type: object
    ArtifactsArtifactConditions:
      properties:
        counters:
          allOf:
            - $ref: '#/components/schemas/ArtifactsCounters'
            - type: object
          description: Счетчик артефактов данного типа
        fields:
          allOf:
            - $ref: '#/components/schemas/ArtifactsFields'
            - type: object
          description: Условия для полей артефакта
      required:
        - fields
        - counters
      title: Условия загрузки артефакта
      type: object
    ArtifactsFields:
      properties:
        description:
          allOf:
            - $ref: '#/components/schemas/ArtifactsDescription'
            - type: object
          description: Условия для поля `description`
        file:
          allOf:
            - $ref: '#/components/schemas/ArtifactsFile'
            - type: object
          description: Условия для поля `file`
        type:
          allOf:
            - $ref: '#/components/schemas/ArtifactsType'
            - type: object
          description: Условия для поля `type`
      required:
        - description
        - file
        - type
      title: Условия для полей артефакта
    ArtifactsDescription:
      properties:
        max_length:
          description: Максимальный размер текстового поля `description`
          type: number
        min_length:
          description: Минимальный размер текстового поля `description`
          type: number
        required:
          description: Является ли поле `description` обязательным
          type: boolean
      required:
        - max_length
        - min_length
        - required
      title: Условия для поля `description`
    ArtifactsFile:
      properties:
        max_size:
          description: Максимальный размер файла
          type: number
        mime_type:
          description: 'Список допустимых [MIME-типов](https://www.iana.org/assignments/media-types/media-types.xhtml) файлов'
          items:
            type: string
          type: array
        required:
          description: Является ли поле `file` обязательным
          type: boolean
      required:
        - max_size
        - mime_type
        - required
      title: Условия для поля `file`
    ArtifactsType:
      properties:
        required:
          description: Является ли поле `type` обязательным
          type: boolean
      required:
        - required
      title: Условия для поля `type`
    ArtifactsCounters:
      properties:
        max:
          description: 'Максимально возможное количество артефактов данного типа, которое можно загрузить'
          type: number
        uploaded:
          description: Количество уже загруженных артефактов данного типа
          type: number
      required:
        - max
        - uploaded
      title: Счетчик артефактов данного типа
    VacanciesAvailableVacancyTypeResponse:
      properties:
        items:
          description: Массив вариантов публикации вакансии
          items:
            $ref: '#/components/schemas/VacanciesAvailableVacancyTypeItem'
          type: array
      required:
        - items
      title: Информация о вариантах публикации вакансии
      type: object
    VacanciesAvailableVacancyTypeItem:
      properties:
        available_publications_count:
          description: 'Общее количество публикаций, доступных данному менеджеру'
          type: number
        description:
          description: Описание типа публикации
          type: string
        name:
          description: Название типа публикации
          type: string
        publications:
          $ref: '#/components/schemas/VacancyPublications'
        vacancy_billing_type:
          allOf:
            - description: 'Биллинговый тип вакансии. Возможные значения приведены в поле `vacancy_billing_type` [справочника полей](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
              type: object
            - $ref: '#/components/schemas/VacancyBillingType'
        vacancy_types:
          $ref: '#/components/schemas/VacancyTypes'
      required:
        - name
        - description
        - available_publications_count
        - vacancy_billing_type
        - vacancy_types
        - publications
      title: Вариант публикации вакансии
      type: object
    VacancyTypes:
      description: Список типов вакансии
      items:
        $ref: '#/components/schemas/VacancyType'
      type: array
    VacancyPublications:
      description: 'Список регионов, где может быть опубликована вакансия и количество публикаций, доступных работодателю'
      items:
        $ref: '#/components/schemas/VacancyPublication'
      type: array
    VacancyPublication:
      properties:
        areas_url:
          description: 'URL на список регионов, в которых можно опубликовать вакансию данного типа. Список возвращается в древовидной структуре и публикация вакансий возможна только в конечных (листовых) узлах дерева. Они помечены флагом `can_publish=true`'
          type: string
        count:
          description: 'Количество публикаций в регионе, доступных работодателю'
          type: number
        name:
          description: Название региона
          type: string
      required:
        - name
        - count
        - areas_url
      title: Информация о публикации
      type: object
    DictionariesDictResponse:
      description: 'Справочники полей и сущностей, используемых в API'
      properties:
        applicant_comment_access_type:
          description: Тип доступа для комментария к соискателю
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        applicant_comments_order:
          description: 'Типы сортировки [списка комментариев к соискателю](#tag/Kommentarii-k-soiskatelyu/paths/~1applicant_comments~1{applicant_id}/get)'
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        applicant_negotiation_status:
          description: Статусы откликов/приглашений
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для откликов/приглашений
          type: array
        business_trip_readiness:
          description: Готовность к командировкам
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        currency:
          description: Справочник валют
          items:
            $ref: '#/components/schemas/DictionariesCurrencyItem'
          title: Прочие справочники
          type: array
        driver_license_types:
          description: Категории водительских прав
          items:
            $ref: '#/components/schemas/_IncludesId'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        education_level:
          description: Образование в резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        employer_active_vacancies_order:
          description: Тип сортировки списка опубликованных вакансий
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для сортировки вакансий работодателя
          type: array
        employer_archived_vacancies_order:
          description: Тип сортировки списка архивных вакансий
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для сортировки вакансий работодателя
          type: array
        employer_hidden_vacancies_order:
          description: Тип сортировки скрытых вакансий
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для сортировки вакансий работодателя
          type: array
        employer_relation:
          description: Типы связи компании с пользователем
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        employer_type:
          description: Тип работодателя
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        employment:
          description: Тип занятости
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        experience:
          description: Опыт работы
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        gender:
          description: Пол
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        language_level:
          description: Уровень владения языком
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        messaging_status:
          description: Статус возможности отправки сообщения в переписке
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для откликов/приглашений
          type: array
        negotiations_order:
          description: Типы порядка отображения откликов
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для откликов/приглашений
          type: array
        negotiations_participant_type:
          description: Типы участников переписки
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для откликов/приглашений
          type: array
        negotiations_state:
          description: Типы состояний откликов
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для откликов/приглашений
          type: array
        phone_call_status:
          description: 'Статус звонка, зафиксированного в системе кол-трекинг'
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        preferred_contact_type:
          description: Предпочитаемый способ связи
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        relocation_type:
          description: Готовность к переезду
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        resume_access_type:
          description: Уровень доступа к резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        resume_contacts_site_type:
          description: Тип сайта в поле «контакты»
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        resume_hidden_fields:
          description: 'Поля резюме, которые могут быть [скрыты](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#hidden-fields)'
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        resume_moderation_note:
          description: Комментарий модератора
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        resume_search_experience_period:
          description: Условие поиска по опыту работы
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_search_fields:
          description: Область поиска в резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_search_label:
          description: Метки поиска резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_search_logic:
          description: Условие поиска резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_search_order:
          description: Тип сортировки резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_search_relocation:
          description: Условие поиска по проживанию в регионе и готовности к переезду
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник параметров поиска резюме
          type: array
        resume_status:
          description: Статус резюме
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        schedule:
          description: График работы
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        travel_time:
          description: Время в пути
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: 'Справочник для полей, используемых в резюме'
          type: array
        vacancy_billing_type:
          description: Варианты размещения вакансии с точки зрения биллинга
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        vacancy_cluster:
          description: Тип кластеров
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для параметров поиска вакансий
          type: array
        vacancy_label:
          description: Метки вакансии
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        vacancy_not_prolonged_reason:
          description: 'Причины, из-за которых невозможно [продлить вакансию](#tag/Upravlenie-vakansiyami/paths/~1vacancies~1%7Bvacancy_id%7D~1prolongate/get)'
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Прочие справочники
          type: array
        vacancy_relation:
          description: Типы связи вакансии с пользователем
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        vacancy_search_fields:
          description: Область поиска в вакансии
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для параметров поиска вакансий
          type: array
        vacancy_search_order:
          description: Тип сортировки вакансии
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для параметров поиска вакансий
          type: array
        vacancy_type:
          description: Тип вакансии
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        working_days:
          description: Рабочие дни
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        working_time_intervals:
          description: Временные интервалы работы
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
        working_time_modes:
          description: Режимы времени работы
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          title: Справочник для полей вакансии
          type: array
      required:
        - education_level
        - gender
        - language_level
        - preferred_contact_type
        - relocation_type
        - travel_time
        - resume_access_type
        - business_trip_readiness
        - resume_contacts_site_type
        - resume_status
        - resume_moderation_note
        - driver_license_types
        - resume_hidden_fields
        - employment
        - experience
        - schedule
        - vacancy_type
        - vacancy_label
        - vacancy_relation
        - vacancy_billing_type
        - working_days
        - working_time_intervals
        - working_time_modes
        - vacancy_search_fields
        - vacancy_search_order
        - vacancy_cluster
        - employer_active_vacancies_order
        - employer_archived_vacancies_order
        - negotiations_order
        - negotiations_state
        - messaging_status
        - negotiations_participant_type
        - applicant_negotiation_status
        - currency
        - employer_type
        - employer_relation
        - vacancy_not_prolonged_reason
        - applicant_comments_order
        - applicant_comment_access_type
        - phone_call_status
      type: object
    DictionariesCurrencyItem:
      properties:
        abbr:
          description: Краткое обозначение
          type: string
        code:
          description: Код
          type: string
        default:
          description: Используется ли в качестве валюты по умолчанию?
          type: boolean
        in_use:
          description: Можно ли использовать на данном хосте?
          type: boolean
        name:
          description: Название
          type: string
        rate:
          description: Курс по отношению к рублю
          type: number
      required:
        - code
        - abbr
        - name
        - default
        - rate
        - in_use
      type: object
    DictionariesIndustriesResponse:
      items:
        $ref: '#/components/schemas/DictionariesBranchItem'
      title: Список отраслей
      type: array
    DictionariesBranchItem:
      properties:
        id:
          description: Идентификатор отрасли
          type: string
        industries:
          description: Сферы деятельности
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          type: array
        name:
          description: Название отрасли
          type: string
      required:
        - id
        - name
        - industries
      title: Отрасль
      type: object
    ErrorsBadAuthorizationSavedSearchErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadAuthorizationSavedSearchError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки авторизации пользователя
    ErrorsBadAuthorizationSavedSearchError:
      additionalProperties: false
      properties:
        allowed_accounts:
          description: |
            Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.
            Актуально только в случае авторизации работодателя.
          items:
            $ref: '#/components/schemas/ManagerAccount'
          minItems: 1
          type: array
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - saved_searches
            - forbidden
            - oauth
          example: oauth
          type: string
        value:
          description: |
            Возможные ошибки:
            * `cant_send_to_yourself` — Нельзя передать сохраненный поиск самому себе
            * `user_auth_expected` — Передана авторизация приложения, метод требует [авторизации пользователя](https://github.com/hhru/api/blob/master/docs/authorization_for_user.md)
          enum:
            - cant_send_to_yourself
            - user_auth_expected
          example: bad_authorization
          type: string
      required:
        - type
      title: Ошибка авторизации пользователя
      type: object
    VacancyDraftDraftFull:
      allOf:
        - $ref: '#/components/schemas/VacancyDraftCommon'
        - properties:
            address:
              $ref: '#/components/schemas/VacancyDraftAddressOutput'
            areas:
              description: 'Коды и названия регионов (фед. округа, субъекты федерации, города)'
              items:
                $ref: '#/components/schemas/VacancyAreaOutput'
              minItems: 1
              type: array
            branded_template:
              $ref: '#/components/schemas/VacancyBrandedTemplate'
            contacts:
              $ref: '#/components/schemas/VacancyDraftContactsWithFullPhone'
            custom_employer_name:
              $ref: '#/components/schemas/VacancyCustomEmployerName'
            employer:
              $ref: '#/components/schemas/VacancyDraftEmployer'
            meta_info:
              $ref: '#/components/schemas/VacancyDraftVacancyDraftBase'
            with_zp:
              $ref: '#/components/schemas/VacancyDraftWithZp'
          required:
            - meta_info
            - areas
            - address
            - contacts
            - employer
            - with_zp
          type: object
      title: Объект черновика вакансии
    VacancyDraftContactsWithFullPhone:
      description: контактная информация
      properties:
        email:
          description: email
          nullable: true
          type: string
        name:
          description: имя менеджера
          nullable: true
          type: string
        phones:
          description: список телефонов для связи
          items:
            $ref: '#/components/schemas/VacancyDraftPhoneItemWithFullPhone'
          nullable: true
          type: array
      required:
        - phones
        - name
        - email
      title: Контакты
      type: object
    VacancyDraftPhoneItemWithFullPhone:
      properties:
        comment:
          description: комментарий (удобное время для звонка по этому номеру)
          nullable: true
          type: string
        formatted:
          description: телефонный номер
          pattern: ^\d+$
          type: string
      title: Объект телефона для связи
      type: object
    VacancyDraftCommon:
      properties:
        accept_handicapped:
          $ref: '#/components/schemas/VacancyAcceptHandicapped'
        accept_incomplete_resumes:
          $ref: '#/components/schemas/VacancyAcceptIncompleteResumes'
        accept_kids:
          $ref: '#/components/schemas/VacancyAcceptKids'
        accept_temporary:
          $ref: '#/components/schemas/VacancyAcceptTemporary'
        allow_messages:
          $ref: '#/components/schemas/VacancyAllowMessages'
        billing_type:
          $ref: '#/components/schemas/VacancyBillingTypeOutput'
        code:
          $ref: '#/components/schemas/VacancyCode'
        department:
          $ref: '#/components/schemas/VacancyDepartmentOutput'
        description:
          $ref: '#/components/schemas/VacancyDescription'
        driver_license_types:
          $ref: '#/components/schemas/VacancyDriverLicenseTypes'
        employment:
          $ref: '#/components/schemas/VacancyEmploymentOutput'
        experience:
          $ref: '#/components/schemas/VacancyExperienceOutput'
        has_test:
          description: Информация о наличии прикрепленного тестового задании к вакансии
          type: boolean
        key_skills:
          $ref: '#/components/schemas/VacancyKeySkills'
        languages:
          $ref: '#/components/schemas/VacancyLanguagesOutput'
        manager:
          $ref: '#/components/schemas/VacancyManager'
        name:
          $ref: '#/components/schemas/VacancyName'
        professional_roles:
          $ref: '#/components/schemas/VacancyProfessionalRolesOutput'
        response_letter_required:
          $ref: '#/components/schemas/VacancyResponseLetterRequired'
        response_notifications:
          $ref: '#/components/schemas/VacancyResponseNotifications'
        response_url:
          $ref: '#/components/schemas/VacancyResponseUrl'
        salary:
          $ref: '#/components/schemas/VacancySalary'
        schedule:
          $ref: '#/components/schemas/VacancyScheduleOutput'
        test:
          $ref: '#/components/schemas/VacancyDraftTest'
        type:
          $ref: '#/components/schemas/VacancyTypeOutput'
        working_days:
          $ref: '#/components/schemas/VacancyWorkingDaysOutput'
        working_time_intervals:
          $ref: '#/components/schemas/VacancyWorkingTimeIntervalsOutput'
        working_time_modes:
          $ref: '#/components/schemas/VacancyWorkingTimeModesOutput'
      required:
        - name
        - description
        - key_skills
        - schedule
        - accept_handicapped
        - accept_kids
        - experience
        - response_letter_required
        - type
        - billing_type
        - allow_messages
        - driver_license_types
        - accept_incomplete_resumes
        - professional_roles
        - manager
        - languages
        - response_notifications
        - has_test
      type: object
    VacancyEmploymentOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyEmployment'
        - properties:
            name:
              description: название типа занятости
              type: string
          type: object
      nullable: true
      title: Тип занятости
    VacancyProfessionalRolesOutput:
      description: список профессиональных ролей
      items:
        $ref: '#/components/schemas/VacancyProfessionalRoleItemOutput'
      title: Профессиональные роли
      type: array
    VacancyProfessionalRoleItemOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyProfessionalRoleItem'
        - properties:
            name:
              description: название профессиональной роли
              type: string
          type: object
    VacancyLanguagesOutput:
      description: список языков вакансии
      items:
        $ref: '#/components/schemas/VacancyLanguageOutput'
      title: Языки вакансии
      type: array
    VacancyLanguageOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyLanguage'
        - properties:
            level:
              properties:
                id:
                  description: идентификатор уровня владения языком
                  type: string
                name:
                  description: название уровня владения языком
                  type: string
              required:
                - id
                - name
              type: object
            name:
              description: название языка
              type: string
          required:
            - name
          type: object
    VacancyBillingTypeOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyBillingType'
        - properties:
            name:
              description: название биллингового типа вакансии
              type: string
          type: object
      title: Биллинговый тип вакансии
    VacancyExperienceOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyExperience'
        - properties:
            name:
              description: название опыта работы
              type: string
          type: object
      nullable: true
      title: Опыт работы
    VacancyDraftEmployer:
      properties:
        alternate_url:
          description: Url для просмотра работодателя на сайте
          type: string
        id:
          description: Идентификатор работодателя
          type: string
        logo_urls:
          description: Ссылки на логотипы работодателя разных размеров
          properties:
            '90':
              type: string
            '240':
              type: string
            original:
              type: string
          required:
            - '90'
            - '240'
          type: object
        name:
          description: Название работодателя
          type: string
        url:
          description: Url для просмотра работодателя
          type: string
      required:
        - id
        - name
        - logo_urls
        - alternate_url
        - url
      title: Работодатель
      type: object
    VacancyDraftVacancyDraftBase:
      properties:
        auto_publication:
          description: 'Состояние автопубликации. Объект при активной автопубликации, иначе null'
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/VacancyDraftAutoPublicationState'
            - $ref: '#/components/schemas/_IncludesNullableObject'
          type: object
        completed_fields_percentage:
          description: Процент заполнения черновика
          type: number
        draft_id:
          description: Идентификатор черновика
          minLength: 1
          type: string
        insufficient_publications:
          description: 'Массив объектов с информацией о том, каких публикаций не хватает на счету для публикации вакансии из данного черновика'
          items:
            $ref: '#/components/schemas/VacancyDraftPublications'
          nullable: true
          type: array
        insufficient_quotas:
          description: 'Массив объектов с информацией о том, какие квоты превышены'
          items:
            $ref: '#/components/schemas/VacancyDraftPublications'
          nullable: true
          type: array
        last_change_time:
          description: 'Время изменения черновика (в формате [ISO 8601](https://ru.wikipedia.org/wiki/ISO_8601) с точностью до секунды `YYYY-MM-DDThh:mm:ss±hhmm`)'
          nullable: true
          type: string
        publication_ready:
          description: Готовность черновика к публикации
          type: boolean
        required_publications:
          description: Массив объектов с информацией о необходимых публикациях на счету
          items:
            $ref: '#/components/schemas/VacancyDraftPublications'
          nullable: true
          type: array
      required:
        - completed_fields_percentage
        - draft_id
        - publication_ready
      title: Черновик
      type: object
    VacancyDraftAutoPublicationState:
      properties:
        bill_uid:
          description: Номер счета
          type: string
        cart_id:
          description: Идентификатор заказа
          type: string
      required:
        - bill_uid
        - cart_id
      title: Состояние публикации
      type: object
    VacancyDraftPublications:
      properties:
        billing_type:
          $ref: '#/components/schemas/VacancyBillingTypeOutput'
          description: 'Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
          type: object
        count:
          description: Количество публикаций
          type: number
        publication_type:
          deprecated: true
          description: 'Тип публикации (справочник [vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get))'
          type: string
        vacancy_type:
          description: 'Тип вакансии (справочник [vacancy_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get))'
          type: string
      required:
        - publication_type
        - billing_type
        - vacancy_type
        - count
      title: Публикация
    VacancyDraftAddressOutput:
      allOf:
        - $ref: '#/components/schemas/VacancyAddressOutput'
        - $ref: '#/components/schemas/VacancyAddress'
      title: Адрес
    VacancyAddressOutput:
      description: адрес
      nullable: true
      properties:
        building:
          description: дом
          nullable: true
          type: string
        city:
          description: город
          nullable: true
          type: string
        description:
          description: описание
          nullable: true
          type: string
        lat:
          description: широта
          nullable: true
          type: number
        lng:
          description: долгота
          nullable: true
          type: number
        metro_stations:
          items:
            $ref: '#/components/schemas/_IncludesMetroStation'
          type: array
        street:
          description: улица
          nullable: true
          type: string
      type: object
    VacancyAreaOutput:
      properties:
        id:
          description: Идентификатор региона
          type: string
        name:
          description: Название региона
          type: string
      required:
        - id
        - name
      title: Регион
      type: object
    ManagerAccounts:
      additionalProperties: false
      description: Информация о рабочих аккаунтах менеджера
      properties:
        current_account_id:
          description: |
            Идентификатор текущего рабочего аккаунта менеджера. Совпадает со значением переданного в заголовке `X-Manager-Account-Id`.
          example: '87654321'
          type: string
        is_primary_account_blocked:
          description: Заблокирован ли главный рабочий аккаунт менеджера
          example: false
          type: boolean
        items:
          description: Список рабочих аккаунтов менеджера
          items:
            $ref: '#/components/schemas/ManagerAccount'
          minItems: 0
          type: array
        primary_account_id:
          description: Идентификатор главного рабочего аккаунта менеджера
          example: '12345678'
          type: string
      required:
        - items
        - current_account_id
        - primary_account_id
        - is_primary_account_blocked
      title: Рабочие аккаунты менеджера
      type: object
    VacancyDraftDraftResponse:
      properties:
        found:
          title: Количество найденных черновиков
          type: number
        items:
          description: Список черновиков
          items:
            $ref: '#/components/schemas/VacancyDraftVacancyDraftItem'
          type: array
        page:
          title: Номер текущей страницы
          type: number
        pages:
          title: Количество страниц с черновиками
          type: number
        per_page:
          title: Количество элементов на страницу
          type: number
      required:
        - items
        - found
        - page
        - pages
        - per_page
      title: Успешный ответ
    VacancyDraftVacancyDraftItem:
      allOf:
        - $ref: '#/components/schemas/VacancyDraftVacancyDraftBase'
        - properties:
            areas:
              description: 'Коды и названия регионов (фед. округа, субъекты федерации, города)'
              items:
                $ref: '#/components/schemas/VacancyAreaOutput'
              minItems: 1
              type: array
            billing_type:
              $ref: '#/components/schemas/VacancyBillingTypeOutput'
              description: 'Биллинговый тип [из справочника vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get)'
              type: object
            name:
              description: Название вакансии
              type: string
            publication_type:
              deprecated: true
              description: 'Тип публикации (справочник [vacancy_billing_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get))'
              type: string
            url:
              description: Url для запроса полной информации черновика
              type: string
            vacancy_type:
              description: 'Тип вакансии (справочник [vacancy_type](#tag/Obshie-spravochniki/paths/~1dictionaries/get))'
              type: string
          required:
            - areas
            - publication_type
            - billing_type
            - vacancy_type
            - url
          type: object
      title: Черновик
    SuggestsVacancyPositions:
      additionalProperties: false
      description: Подсказки по должностям вакансий
      properties:
        items:
          description: Информация о найденных должностях вакансий
          items:
            $ref: '#/components/schemas/SuggestsVacancyPositionItem'
          title: Массив найденных должностей вакансий
          type: array
      required:
        - items
      title: Подсказки по должностям вакансий
      type: object
    SuggestsVacancyPositionItem:
      properties:
        id:
          description: Идентификатор должности
          example: '2063'
          type: string
        professional_roles:
          description: 'Информация о профессиональных ролях, соответствующих должности'
          items:
            $ref: '#/components/schemas/SuggestsProfessionalRoleItemWithName'
          minItems: 1
          title: 'Массив профессиональных ролей, соответствующих должности'
          type: array
        text:
          description: Название должности
          example: Личный водитель
          type: string
      required:
        - id
        - text
        - professional_roles
      type: object
    SuggestsProfessionalRoleItemWithName:
      properties:
        accept_incomplete_resumes:
          description: 'Профессиональная роль, для которой можно принимать отклики неполным резюме'
          example: true
          type: boolean
        id:
          description: Идентификатор профессиональной роли
          example: '21'
          type: string
        name:
          description: Название профессиональной роли
          example: Водитель
          type: string
      required:
        - id
        - name
        - accept_incomplete_resumes
      type: object
    SuggestsPositions:
      additionalProperties: false
      description: Подсказки по должностям
      properties:
        items:
          description: Информация о найденных должностях
          items:
            $ref: '#/components/schemas/SuggestsPositionItem'
          title: Массив найденных должностей
          type: array
      required:
        - items
      title: Подсказки по должностям резюме
      type: object
    SuggestsPositionItem:
      properties:
        id:
          description: Идентификатор должности
          example: '2063'
          type: string
        professional_roles:
          description: 'Информация о профессиональных ролях, соответствующих должности'
          items:
            $ref: '#/components/schemas/SuggestsProfessionalRoleItemWithName'
          minItems: 1
          title: 'Массив профессиональных ролей, соответствующих должности'
          type: array
        specializations:
          description: 'Информация о специализациях, соответствующих должности'
          items:
            $ref: '#/components/schemas/SuggestsSpecializationsWithName'
          minItems: 1
          title: 'Массив специализаций, соответствующих должности'
          type: array
        text:
          description: Название должности
          example: Личный водитель
          type: string
      required:
        - id
        - text
        - professional_roles
      type: object
    SuggestsSpecializationsWithName:
      properties:
        id:
          description: Идентификатор специализации
          example: '21.17'
          type: string
        name:
          description: Название специализации
          example: Автоперевозки
          type: string
        profarea_id:
          description: Идентификатор профессиональной области
          example: '21'
          type: string
        profarea_name:
          description: Название профессиональной области
          example: 'Транспорт, логистика'
          type: string
      required:
        - id
        - name
        - profarea_id
        - profarea_name
      type: object
    EmployerManagerTypesResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/EmployerManagerTypesEmployerManagerTypesItem'
          title: Список типов и прав менеджера
          type: array
      required:
        - items
      title: Успешный ответ
    EmployerManagerTypesEmployerManagerTypesItem:
      properties:
        available_permissions:
          description: 'Список прав, которые можно дать данному типу менеджера'
          items:
            $ref: '#/components/schemas/EmployerManagerTypesAvailablePermissions'
          type: array
        id:
          description: Идентификатор типа менеджера
          type: string
        name:
          description: Название типа менеджера
          type: string
      required:
        - id
        - name
        - available_permissions
      title: Тип и права менеджера
    ErrorsBadJsonDataAddEditVacancyErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadJsonDataAddEditVacancyError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Невалидный json
    ErrorsBadJsonDataAddEditVacancyError:
      properties:
        description:
          description: Описание ошибки
          example: Значение неправильное
          nullable: true
          type: string
        pointer:
          description: |
            Путь до параметра, в котором возникла ошибка.

            Для указания параметра используется формат JsonPointer [RFC 6901](https://tools.ietf.org/html/rfc6901)
          example: /contacts/phones/1/number
          type: string
        reason:
          description: |
            Причина ошибки. Возможные значения:
              * `required` - отстутствует поле в запросе
              * `invalid` - недопустимое значение в поле запроса
              * `is_empty` — пустое значение
              * `wrong_size` — значение имеет неправильный размер
              * `is_too_short` — значение имеет слишком маленький размер
              * `is_too_long` — значение имеет слишком большой размер
              * `currency_code_is_invalid` — валюта заработной платы введена некорректно
              * `chosen_area_is_not_a_leaf_or_not_exist` — местоположение вакансии введено неверно (например, передан несуществующий ID) или не является конечным регионом (город, населенный пункт)
              * `email_in_description` — в описании вакансии содержится email
              * `anonymous_vacancy_contains_address` — в анонимной вакансии содержится адрес работодателя
              * `anonymous_vacancy_has_real_company_name` — в названии вакансии содержится название компании работодателя
              * `only_for_anonymous_type` — действие доступно только для анонимных вакансий
              * `address_is_disabled` — адрес недоступен
              * `vacancy_type_employer_billing_type_mismatch` — тип вакансии не совместим с текущим биллинг-типом
              * `only_for_direct_type` — действие доступно только для прямых вакансий
              * `address_is_empty_with_checked_show_metro_flag` — введен пустой адрес, но указана опция показывать метро
              * `address_has_no_metro_but_checked_show_metro_flag` — по введенному адресу не доступно метро, но указана опция показывать метро
              * `default_vacancy_branded_template_is_invalid_or_not_enough_purchased_services` — в запросе указан шаблон, который отсутствует в списке доступных шаблонов (этот список можно получить [запросом](#tag/Informaciya-o-rabotodatele/paths/~1employers~1%7Bemployer_id%7D~1vacancy_branded_templates/get)). Также шаблон может отсутствовать в списке доступных шаблонов, если не оплачена услуга использования [брендированного шаблона вакансии](https://hh.ru/price?from=menu#branding)
              * `department_code_prohibited_in_anonymous_vacancy` — нельзя указать код подразделения для анонимной вакансии
              * `branded_template_prohibited_in_anonymous_vacancy` — использование брендированного шаблона невозможно для анонимной вакансии
              * `value_conflict_with_business_rules` — публикация вакансии с указанным `billing_type` запрещена
              * `can_not_accept_kids` — вакансия недоступна несовершеннолетним
          enum:
            - required
            - invalid
            - is_empty
            - wrong_size
            - is_too_short
            - is_too_long
            - currency_code_is_invalid
            - chosen_area_is_not_a_leaf_or_not_exist
            - email_in_description
            - anonymous_vacancy_contains_address
            - anonymous_vacancy_has_real_company_name
            - only_for_anonymous_type
            - address_is_disabled
            - vacancy_type_employer_billing_type_mismatch
            - only_for_direct_type
            - address_is_empty_with_checked_show_metro_flag
            - address_has_no_metro_but_checked_show_metro_flag
            - default_vacancy_branded_template_is_invalid_or_not_enough_purchased_services
            - department_code_prohibited_in_anonymous_vacancy
            - branded_template_prohibited_in_anonymous_vacancy
            - value_conflict_with_business_rules
            - can_not_accept_kids
          example: is_empty
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_json_data
            - vacancies
          example: bad_json_data
          type: string
        value:
          description: Название поля с ошибкой
          example: salary
          type: string
      required:
        - type
      title: Ошибка при публикации или редактировании вакансии
      type: object
    EmployersVacancyBrandedTemplatesList:
      properties:
        items:
          description: Список доступных брендированных шаблонов вакансий
          items:
            properties:
              id:
                description: Идентификатор брендированного шаблона вакансий
                minLength: 1
                type: string
              name:
                description: Название брендированного шаблона вакансий
                type: string
              version_id:
                description: |
                  Идентификатор активной версии брендированного шаблона. 
                  Равен null в случае шаблонов-конструкторов и шаблонов-гибридов.
                nullable: true
                type: string
            required:
              - id
              - version_id
              - name
            type: object
          type: array
      required:
        - items
      title: Успешный ответ
      type: object
    AuthRefreshToken:
      additionalProperties: false
      properties:
        grant_type:
          description: Cпособ запроса токена
          enum:
            - refresh_token
          example: refresh_token
          type: string
        refresh_token:
          description: 'Refresh-токен, полученный ранее при [получении пары токенов](#refresh_token) или прошлом обновлении пары.'
          example: xuLNvUSv7FYM4MPfXDP9aJWe
          minLength: 1
          type: string
      required:
        - grant_type
        - refresh_token
      title: Параметры для обновление пары access и refresh токенов
      type: object
    EmployerDictionariesTestsResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/EmployerDictionariesTestItem'
          minItems: 0
          title: Список тестов
          type: array
      required:
        - items
      title: Успешный ответ
    EmployerDictionariesTestItem:
      properties:
        id:
          description: Идентификатор теста
          type: string
        name:
          description: Название теста
          type: string
      required:
        - id
        - name
      title: Тест
    ErrorsBadAuthorizationEmployerManagerErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            description:
              description: Описание ошибки
              example: Forbidden
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Плохая авторизация
    ErrorsBadAuthorizationEmployerManagerError:
      additionalProperties: false
      properties:
        allowed_accounts:
          description: |
            Список доступных для токена аккаунтов менеджера в случае, если используемый рабочий аккаунт заблокирован.
            Актуально только в случае авторизации работодателя.
          items:
            $ref: '#/components/schemas/ManagerAccount'
          minItems: 1
          type: array
        reason:
          description: |
            Ошибки при создании или редактировании менеджера работодателя:
              * `already_exist` — Менеджер с такой почтой уже существует
              * `creation_limit_exceeded` — Достигнут лимит на создание менеджеров
              * `not_editable` — Поле *field_name* недоступно для редактирования
          enum:
            - already_exist
            - creation_limit_exceeded
            - not_editable
          example: already_exist
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - forbidden
            - oauth
            - manager_extra_accounts
            - manager_accounts
            - managers
          example: oauth
          type: string
        value:
          description: |
            Общие ошибки:
              * `bad_authorization` — Токен авторизации не существует или не валидный
              * `token_expired` — Время жизни access_token завершилось, необходимо [выполнить обновление access_token](https://github.com/hhru/api/blob/master/docs/authorization.md#refresh_token)
              * `token_revoked` — Токен отозван пользователем, приложению необходимо [запросить новую авторизацию](https://github.com/hhru/api/blob/master/docs/authorization.md)
              * `application_not_found` — Ваше приложение было удалено
              * `used_manager_account_forbidden` — [Рабочий аккаунт заблокирован](https://github.com/hhru/api/blob/master/docs/errors.md#manager-accounts-blocked)
              * `manager_extra_account_not_found` — В заголовке передан некорректный id аккаунта
              * `email` — Менеджер с такой почтой уже существует
              * `user_auth_expected` — Ожидается авторизация пользователя, передана авторизация приложения
          enum:
            - bad_authorization
            - token_expired
            - token_revoked
            - application_not_found
            - manager_extra_account_not_found
            - used_manager_account_forbidden
            - email
            - user_auth_expected
          example: bad_authorization
          type: string
      required:
        - type
      title: Ошибка
      type: object
    AuthUnsupportedGrantTypeError:
      properties:
        error:
          description: |
            Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
          enum:
            - unsupported_grant_type
          example: unsupported_grant_type
          type: string
        error_description:
          description: |
            Дополнительное описание ошибки
            * `unsupported grant_type` Возникает, если передать неправильное значение в поле `grant_type`
          enum:
            - unsupported grant_type
          example: unsupported grant_type
          type: string
      required:
        - error
        - error_description
      title: unsupported_grant_type
      type: object
    ResumePhoneGenerateCodeGenerateCode:
      properties:
        can_request_code_again_in:
          description: Ближайшая возможная повторная отправка кода в секундах
          example: 15
          type: string
        notification_type:
          description: Тип сгенерированного сообщения
          example: sms
          type: string
      title: Сгенерированный код
      type: object
    ErrorsBadArgumentErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadArgumentError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки в параметрах запроса
    ErrorsBadArgumentError:
      additionalProperties: false
      properties:
        reason:
          description: Описание ошибки
          example: too_long_value
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_argument
          example: bad_argument
          type: string
        value:
          description: |
            Название поля с ошибкой.
          example: resume_id
          type: string
      required:
        - type
      title: Ошибка в параметре запроса
      type: object
    MeSetInSearch:
      properties:
        is_in_search:
          description: 'Флаг «ищу работу». Возможные значения: `true`/`false`'
          example: 'true'
          type: string
      required:
        - is_in_search
      type: object
    EmployerServicesEmployerServices:
      properties:
        items:
          items:
            $ref: '#/components/schemas/EmployerServicesEmployerServiceItem'
          minItems: 0
          title: Перечень услуг
          type: array
      required:
        - items
    EmployerServicesEmployerServiceItem:
      properties:
        activated_at:
          description: 'Время активации услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
          pattern: '^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?((\+|-)[0-1][0-9]{3})?$'
          type: string
        balance:
          $ref: '#/components/schemas/EmployerServicesBalance'
          description: Значения баланса. Только для пакетных услуг
          nullable: true
        expires_at:
          description: 'Время истечения услуги (в формате [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) с точностью до секунды: `YYYY-MM-DDThh:mm:ss±hhmm`'
          pattern: '^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?((\+|-)[0-1][0-9]{3})?$'
          type: string
        id:
          description: Идентификатор услуги
          type: string
        service_type:
          $ref: '#/components/schemas/EmployerServicesServiceType'
          description: Тип услуги
      required:
        - id
        - service_type
        - activated_at
        - expires_at
      title: Услуга
    EmployerServicesServiceType:
      properties:
        id:
          description: Идентификатор типа услуги
          type: string
        name:
          description: Локализованное название типа услуги
          type: string
      required:
        - id
        - name
      title: Тип услуги
    EmployerServicesBalance:
      properties:
        actual:
          description: Текущее значение баланса
          type: integer
        initial:
          description: Значение баланса на момент активации услуги
          type: integer
      required:
        - actual
        - initial
    AuthInvalidRequestError:
      properties:
        error:
          description: |
            Идентификатор типа ошибки, используются значения, описанные в [документе RFC 6749](http://tools.ietf.org/html/rfc6749#section-5.2).
          enum:
            - invalid_request
          example: invalid_request
          type: string
        error_description:
          description: |
            Дополнительное описание ошибки
            * `account not found` Ошибка может возникнуть, если передана неправильная пара `client_id` и `client_secret`
            * `account is locked` Пользовательский аккаунт заблокирован. Пользователь должен обратиться в службу поддержки сайта
            * `password invalidated` Пароль от пользовательского аккаунта устарел. Пользователь должен восстановить пароль на сайте `https://hh.ru`
            * `login not verified` Пользовательский аккаунт не подтвержден. Пользователь должен обратиться в службу поддержки сайта
            * `bad redirect url` передан неправильный `redirect_url`
            * `token is empty` Не передан `refresh_token`
            * `token not found` передан не правильный `refresh_token`
            * `code not found ` переданный `authorization_code` не найден
          enum:
            - account not found
            - account is locked
            - password invalidated
            - login not verified
            - bad redirect url
            - token is empty
            - token not found
            - code not found
          example: account not found
          type: string
      required:
        - error
        - error_description
      title: invalid_request
      type: object
    EmployersEmployersList:
      properties:
        found:
          description: Найдено результатов
          type: number
        items:
          description: Найденные работодатели
          items:
            $ref: '#/components/schemas/EmployersEmployerItem'
          minItems: 0
          type: array
        page:
          description: Номер страницы
          type: number
        pages:
          description: Всего страниц
          type: number
        per_page:
          description: Результатов на странице
          type: number
      required:
        - items
        - found
        - page
        - pages
        - per_page
      title: Успешный ответ
    EmployersEmployerItem:
      properties:
        alternate_url:
          description: Ссылка на описание работодателя на сайте
          type: string
        id:
          description: Идентификатор работодателя
          type: string
        logo_urls:
          description: 'Ссылки на изображения логотипов работодателя разных размеров. `original` — это необработанный логотип, который может быть большого размера. Если изначально загруженный компанией логотип меньше, чем 240px и/или 90px по меньшей стороне, то в соответствующих ключах будут ссылки на изображения оригинального размера. Объект может быть `null`, если компания не загрузила логотип. Клиент должен предусмотреть возможность отсутствия логотипа по указанной ссылке (ответ с кодом `404 Not Found`)'
          nullable: true
          oneOf:
            - $ref: '#/components/schemas/_IncludesLogoUrls'
            - $ref: '#/components/schemas/_IncludesNullableObject'
        name:
          description: Название работодателя
          type: string
        open_vacancies:
          description: Количество открытых вакансий у работодателя
          type: number
        url:
          description: URL для получения полного описания работодателя
          type: string
        vacancies_url:
          description: URL для получения поисковой выдачи с вакансиями данного работодателя
          type: string
      required:
        - id
        - name
        - url
        - alternate_url
        - vacancies_url
        - open_vacancies
      title: Работодатель
    MetroMetroResponse:
      items:
        $ref: '#/components/schemas/MetroMetroItem'
      title: Список всех станций метро во всех городах
      type: array
    MetroMetroItem:
      properties:
        id:
          description: Идентификатор города
          type: string
        lines:
          description: Список линий метро в городе
          items:
            $ref: '#/components/schemas/MetroMetroLine'
          type: array
        name:
          description: Название города
          type: string
        url:
          description: URL запроса
          type: string
      required:
        - id
        - url
        - name
        - lines
      title: Город
    ErrorsNotFoundErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок.
              items:
                $ref: '#/components/schemas/ErrorsNotFoundError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках.
      title: Не найдено.
    ErrorsNotFoundError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки.
          enum:
            - not_found
          example: not_found
          type: string
      required:
        - type
      title: Ошибка.
      type: object
    ErrorsBadArgumentEmployerAddressErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerAddressError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибки в параметрах запроса
    ErrorsBadArgumentEmployerAddressError:
      additionalProperties: false
      properties:
        reason:
          description: |
            Причина ошибки. Описание:
            * `too_early` - Отступ по времени от текущей даты слишком большой.
            * `must_be_a_valid_ISO_8601_date-time_string` - Дата-время указаны в неверном формате.
          example: must_be_a_valid_ISO_8601_date
          type: string
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_argument
            - bad_request
          example: bad_argument
          type: string
        value:
          description: Название поля с ошибкой
          example: changed_after
          type: string
      required:
        - type
      title: Ошибка в параметре запроса
      type: object
    EmployerManagersEmployerManagerLimits:
      properties:
        left:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersResumeView'
          description: 'Количество оставшихся просмотров резюме. В этом параметре содержится лимит просмотров на компанию. Из-за этого он может быть меньше, чем доступно текущему пользователю'
        limits:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersResumeView'
          description: Лимит на просмотр резюме
        spend:
          allOf:
            - $ref: '#/components/schemas/EmployerManagersResumeView'
          description: Количество просмотренных резюме
      required:
        - limits
        - spend
        - left
      title: Дневной лимит просмотра резюме
    EmployerManagersResumeView:
      properties:
        resume_view:
          description: Просмотры резюме через сайт
          type: integer
        resume_view_from_api:
          description: 'Просмотры резюме из API. Возвращаются, если они предусмотрены в текущей конфигурации доступа к резюме для работодателя'
          type: integer
      required:
        - resume_view
    EmployersEmployerDepartmentsResponse:
      properties:
        items:
          description: Список департаментов работодателя
          items:
            $ref: '#/components/schemas/_IncludesIdName'
          type: array
      required:
        - items
      title: Департаменты работодателя
    ErrorsNotFoundSavedSearchErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsNotFoundSavedSearchError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Автопоиск или менеджер не найден
    ErrorsNotFoundSavedSearchError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - saved_searches
            - not_found
          example: saved_searches
          type: string
        value:
          description: |
            Название поля запроса с ошибкой. Возможные значения:

            * `saved_search_not_found` — автопоиск не найден или не принадлежит текущему пользователю.
            * `manager_not_found` — менеджер не найден
          enum:
            - saved_search_not_found
            - manager_not_found
          example: saved_search_not_found
          type: string
      required:
        - type
      title: Ошибка
      type: object
    ErrorsConflictBothChangedErrors:
      allOf:
        - $ref: '#/components/schemas/ErrorsErrorRequestId'
        - properties:
            bad_argument:
              description: 'Имя аргумента, с которым связана ошибка'
              enum:
                - name
                - subscription
              type: string
            bad_arguments:
              description: 'Список аргументов, с которыми связаны ошибки'
              items:
                $ref: '#/components/schemas/_IncludesNameDescription'
              type: array
            description:
              description: Описание причины ошибки
              type: string
            errors:
              description: Массив с данными ошибок
              items:
                $ref: '#/components/schemas/ErrorsConflictBothChangedError'
              minItems: 1
              type: array
          required:
            - errors
          type: object
      description: Информация о возникших ошибках
      title: Ошибка конфликта запроса при одновременном изменении параметров
    _IncludesNameDescription:
      properties:
        description:
          description: Описание
          type: string
        name:
          description: Название
          type: string
      required:
        - name
        - description
      title: Объект
      type: object
    ErrorsConflictBothChangedError:
      additionalProperties: false
      properties:
        type:
          description: Текстовый идентификатор типа ошибки
          enum:
            - bad_argument
          example: bad_argument
          type: string
        value:
          description: Имя конфликтующего аргумента
          enum:
            - name
            - subscription
            - email_subscription
          example: name
          type: string
      required:
        - type
        - value
      title: Ошибка конфликта запроса при одновременном изменении параметров
      type: object
  securitySchemes:
    OauthToken:
      description: |
        Токен доступа для авторизации в формате `Bearer {ACCESS_TOKEN}` (см. [Авторизация](https://github.com/hhru/api/blob/master/docs/authorization.md))
      scheme: bearer
      type: http
info:
  contact:
    email: api@hh.ru
    name: API Support
    url: 'https://feedback.hh.ru/'
  description: |
    [Switch to English](https://api.hh.ru/openapi/en/redoc) | По-русски

    В OpenAPI ведется пока что только небольшая часть документации
    [Основная документация](https://github.com/hhru/api).

    Для поиска по документации можно использовать Ctrl+F.

    # Типы авторизаций
    API поддерживает следующие уровни авторизации:
      - [авторизация приложения](#get-client-auth)
      - [авторизация пользователя](#get-auth)
    <!-- ReDoc-Inject: <security-definitions> -->
  termsOfService: 'https://dev.hh.ru/admin/developer_agreement'
  title: HeadHunter API
  version: 1.0.0
  x-logo:
    altText: HH Logo
    url: 'https://hhcdn.ru/icms/10132131.svg'
openapi: 3.0.3
security:
  - OauthToken: []
servers:
  - description: hhapi production server
    url: 'https://api.hh.ru'
tags:
  - description: '<a name="app_auth"></a>Методы для получение токена [приложения](#get-client-auth).'
    name: Авторизация приложения
  - description: 'Методы для получение токена [пользователя](#get-auth).'
    name: Авторизация соискателя
  - description: 'Методы для получение токена [пользователя](#get-auth).'
    name: Авторизация работодателя
  - description: Методы для работы с черновиками вакансий
    name: Черновики вакансий
  - description: Методы для работы со статусами соискателя
    name: Соискательские статусы
  - description: Действия с резюме соискателя связанные с отправкой/получением информации на его телефон
    name: Резюме. Работа с телефоном
  - description: Методы для работы с менеджерами работодателя
    name: Менеджеры работодателя
  - description: 'Методы для получения справочной информации, независимые от авторизации'
    name: Общие справочники
  - description: Методы для работы с адресами работодателя
    name: Адреса работодателя
  - description: 'Методы для получения справочной информации о работодателе в виде списка. Эта информация, введённая работодателем заранее, может использоваться в различных запросах. <br><br>Внимание! Значения в справочниках могут поменяться в любой момент. Не нужно завязываться на них.'
    name: Справочники работодателя
  - description: 'Методы для получения справочной информации в виде списка, элементы которого частично или полностью могут совпадать со значением, отправленным в одном из параметров.'
    name: Подсказки
  - description: Методы для просмотра информации об авторизованном менеджере
    name: Информация о менеджере
  - description: Методы для просмотра информации об авторизованном соискателе
    name: Информация о соискателе
  - description: Методы для просмотра информации о приложении
    name: Информация о приложении
  - description: Методы для получения информации о компании текущего менеджера
    name: Информация о работодателе
  - description: 'Сохраненный поиск (автопоиск) — это сохраненный набор параметров поиска, по которому можно отслеживать новые резюме по заданному запросу. Помимо сохранения параметров поисковых запросов, автопоиск позволяет получать оповещения о новых результатах поиска. Для удобства автопоиску можно задавать имя. '
    name: Сохраненные поиски вакансий
  - description: 'Сохраненный поиск (автопоиск) — это сохраненный набор параметров поиска, по которому можно отслеживать новые резюме по заданному запросу. Помимо сохранения параметров поисковых запросов, автопоиск позволяет получать оповещения о новых результатах поиска. Для удобства автопоиску можно задавать имя. '
    name: Сохраненные поиски резюме
  - description: Методы для управления подписками на уведомления.
    name: Webhook API
x-tagGroups:
  - name: Работодатель
    tags:
      - Авторизация работодателя
      - Информация о менеджере
      - Информация о работодателе
      - Черновики вакансий
      - Услуги работодателя
      - Менеджеры работодателя
      - Адреса работодателя
      - Webhook API
      - Комментарии к соискателю
      - Справочники работодателя
      - Отклики/приглашения работодателя
      - Управление вакансиями
      - Сохраненные поиски резюме
  - name: Соискатель
    tags:
      - Авторизация соискателя
      - Резюме. Работа с телефоном
      - Скрытые вакансии
      - Скрытые работодатели
      - Отобранные вакансии
      - Сохраненные поиски вакансий
      - Информация о соискателе
      - Соискательские статусы
      - Работа с артефактами
  - name: Общедоступные методы
    tags:
      - Общие справочники
      - Подсказки
      - Работодатель
  - name: Приложение
    tags:
      - Авторизация приложения
      - Информация о приложении
paths:
  /resume_phone_confirm:
    x-name: /resume_phone_confirm
    post:
      tags:
        - Резюме. Работа с телефоном
      summary: Подтвердить телефон кодом
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone:
                  description: Телефон который надо подтвердить
                  type: string
                  example: 8(454)555-55-55
                code:
                  description: Код для подтверждения
                  type: string
                  example: 5675
              required:
                - phone
                - code
      responses:
        '200':
          description: 'Успешный ответ, номер верифицирован'
        '400':
          description: Ошибки в аргументах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /me:
    x-name: /me
    get:
      tags:
        - Информация о соискателе
        - Информация о менеджере
        - Информация о приложении
      summary: Информация о текущем пользователе
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeProfile'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
    post:
      tags:
        - Информация о соискателе
      summary: Редактирование информации авторизованного пользователя
      description: Редактирование ФИО или изменение флага «ищу работу». Данные можно редактировать только группами
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/MeChangeName'
                - $ref: '#/components/schemas/MeSetInSearch'
      responses:
        '204':
          description: 'Успешный ответ, данные переданы'
        '400':
          description: 'Переданы не все поля, или параметры относятся к разным группам'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Ошибка авторизации. Пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /oauth/token:
    x-name: /oauth/token
    post:
      tags:
        - Авторизация приложения
        - Авторизация работодателя
        - Авторизация соискателя
      summary: Получение access-токена
      description: |
        * [Получение авторизации пользователя](#get-auth)
          * [Правила формирования специального redirect_uri](#redirect_uri)
          * [Процесс авторизации](#get-auth-process)
          * [Успешное получение временного `authorization_code`](#get-authorization_code)
          * [Получение access и refresh токенов](#get-tokens)
        * [Обновление пары access и refresh токенов](#refresh_token)
        * [Инвалидация токена](#invalidate_token)
        * [Запрос авторизации под другим пользователем](#force_login)
        * [Авторизация под разными рабочими аккаунтами](#implant)
        * [Получение авторизации приложения](#get-client-auth)


        ## Авторизация пользователя
        <a name="get-auth"></a>
        ### Получение авторизации пользователя
        Для выполнения запросов от имени пользователя необходимо пользоваться токеном пользователя.

        В начале приложению необходимо направить пользователя (открыть страницу) по адресу:

        ```
        https://hh.ru/oauth/authorize?
        response_type=code&
        client_id={client_id}&
        state={state}&
        redirect_uri={redirect_uri}
        ```

        Обязательные параметры:

        * `response_type=code` — указание на способ получения авторизации, используя `authorization code`
        * `client_id` — идентификатор, полученный при создании приложения


        Необязательные параметры:

        * `state` — в случае указания, будет включен в ответный редирект.
        Это позволяет исключить возможность взлома путём подделки межсайтовых
        запросов. Подробнее об этом:
        [RFC 6749. Section 10.12](http://tools.ietf.org/html/rfc6749#section-10.12)
        * `redirect_uri` — uri для перенаправления пользователя после
        авторизации. Если не указать, используется из настроек приложения. При
        наличии происходит валидация значения. Вероятнее всего, потребуется сделать
        urlencode значения параметра.

        <a name="redirect_uri"></a>
        ### Правила формирования специального redirect_uri

        К примеру, если в настройках сохранен `http://example.com/oauth`, то разрешено
        указывать:

        * `http://www.example.com/oauth` — поддомен;
        * `http://www.example.com/oauth/sub/path` — уточнение пути;
        * `http://example.com/oauth?lang=RU` — дополнительный параметр;
        * `http://www.example.com/oauth/sub/path?lang=RU` — всё вместе.

        Запрещено:

        * `https://example.com/oauth` — различные протоколы;
        * `http://wwwexample.com/oauth` — различные домены;
        * `http://wwwexample.com/` — другой путь;
        * `http://example.com/oauths` — другой путь;
        * `http://example.com:80/oauths` — указание изначально отсутствующего порта;


        <a name="get-auth-process"></a>
        ### Процесс авторизации

        Если пользователь не авторизован на сайте, ему будет показана форма
        авторизации на сайте. После прохождения авторизации на сайте, пользователю
        будет выведена форма с запросом разрешения доступа вашего приложения к его
        персональным данным.

        Если пользователь не разрешает доступ приложению, пользователь будет
        перенаправлен на указанный `redirect_uri` с `?error=access_denied` и
        `state={state}`, если таковой был указан при первом запросе.

        <a name="get-authorization_code"></a>
        ### Успешное получение временного `authorization_code`

        В случае разрешения прав, в редиректе будет указан
        временный `authorization_code`:

        ```http
        HTTP/1.1 302 FOUND
        Location: {redirect_uri}?code={authorization_code}
        ```

        Если пользователь авторизован на сайте и доступ данному приложению однажды
        ранее выдан, ответом будет сразу вышеописанный редирект с `authorization_code`
        (без показа формы логина и выдачи прав).


        <a name="get-tokens"></a>
        ### Получение access и refresh токенов

        После получения `authorization_code` приложению необходимо сделать сервер-сервер запрос `POST https://hh.ru/oauth/token` для обмена полученного
        `authorization_code` на `access_token`.

        В теле запроса необходимо передать [дополнительные параметры](#required_parameters).

        Тело запроса необходимо передавать в стандартном
        `application/x-www-form-urlencoded` с указанием соответствующего заголовка
        `Content-Type`.

        `authorization_code` имеет довольно короткий срок жизни, при его истечении
        необходимо запросить новый.

        <a name="refresh_token"></a>
        ### Обновление пары access и refresh токенов
        `access_token` также имеет срок жизни (ключ `expires_in`, в секундах), при его
        истечении приложение должно сделать запрос с `refresh_token` для получения
        нового.

        Запрос необходимо делать в `application/x-www-form-urlencoded`.

        ```
        POST https://hh.ru/oauth/token
        ```

        В теле запроса необходимо передать [дополнительные параметры](#required_parameters)

        `refresh_token` можно использовать только один раз и только по истечению
        срока действия `access_token`.

        После получения новой пары access и refresh токенов, их необходимо использовать
        в дальнейших запросах в api и запросах на продление токена.

        <a name="force_login"></a>
        ### Запрос авторизации под другим пользователем

        Возможен следующий сценарий:

        1. Приложение перенаправляет пользователя на сайт с запросом авторизации.
        2. Пользователь на сайте уже авторизован и данному приложение доступ уже был
        разрешен.
        3. Пользователю будет предложена возможность продолжить работу под текущим аккаунтом,
        либо зайти под другим аккаунтом.

        Если есть необходимость, чтобы на шаге 3 сразу происходило перенаправление (redirect) с временным токеном,
        необходимо добавить к запросу `/oauth/authorize...` параметр `skip_choose_account=true`.
        В этом случае автоматически выдаётся доступ пользователю авторизованному на сайте.

        Если есть необходимость всегда показывать форму авторизации, приложение может
        добавить к запросу `/oauth/authorize...` параметр `force_login=true`. В этом
        случае, пользователю будет показана форма авторизации с логином и паролем
        даже в случае, если пользователь уже авторизован.

        Это может быть полезно приложениям, которые предоставляют сервис только для
        соискателей. Если пришел пользователь-работодатель, приложение может предложить
        пользователю повторно разрешить доступ на сайте, уже указав
        другую учетную запись.

        Также, после авторизации приложение может показать пользователю сообщение:

        ```
        Вы вошли как %Имя_Фамилия%. Это не вы?
        ```
        и предоставить ссылку с `force_login=true` для возможности захода под
        другим логином.

        <a name="implant"></a>
        ### Авторизация под разными рабочими аккаунтами

        Для получения списка рабочих аккаунтов менеджера и для работы под разными рабочими аккаунтами менеджера необходимо прочитать документацию по [рабочим аккаунтам менеджера](#tag/Menedzhery-rabotodatelya/paths/~1manager_accounts~1mine/get)


        <a name="get-client-auth"></a>
        ## Авторизация приложения

        Токен приложения необходимо сгенерировать 1 раз.
        В случае, если токен был скомпрометирован, его нужно запросить еще раз. При этом ранее выданный токен отзывается.
        Владелец приложения может посмотреть актуальный `access_token` для приложения на сайте [https://dev.hh.ru/admin](https://dev.hh.ru/admin). В случае, если вы еще ни разу [не получали токен приложения](#get-client-token), токен отображаться не будет.

        <a name="get-client-token"></a>
        ### Получение токена приложения
        Для получения `access_token` необходимо сделать запрос:

        ```
        POST https://hh.ru/oauth/token
        ```

        В теле запроса необходимо передать [дополнительные параметры](#required_parameters).
        Тело запроса необходимо передавать в стандартном
        `application/x-www-form-urlencoded` с указанием соответствующего заголовка `Content-Type`.

        Данный `access_token` имеет **неограниченный** срок жизни. При повторном запросе ранее выданный токен отзывается и выдается новый. Запрашивать `access_token` можно не чаще, чем один раз в 5 минут.

        В случае компрометации токена необходимо [инвалидировать](#invalidate_token) скомпроментированный токен и запросить токен заново!
      servers:
        - url: 'https://hh.ru'
      requestBody:
        description: |
          <a name="required_parameters"></a>
          В зависимости от способа получения токена `grant_type` необходимо передавать различные наборы параметров.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AuthCode'
                - $ref: '#/components/schemas/AuthRefreshToken'
                - $ref: '#/components/schemas/AuthClientCredentials'
            examples:
              authorization_code:
                value:
                  grant_type: authorization_code
                  client_id: ETVQdMs2n9VKw7SMXkh9nX5H
                  client_secret: 95dNjB8FmtxQsmygm6dtEy53
                  redirect_uri: 'http://www.example.com/oauth'
                  code: 29CtxMcaA8pRFDYyC8e8Gkm4
              refresh_token:
                value:
                  grant_type: refresh_token
                  refresh_token: xuLNvUSv7FYM4MPfXDP9aJWe
              client_credentials:
                value:
                  grant_type: client_credentials
                  client_id: ETVQdMs2n9VKw7SMXkh9nX5H
                  client_secret: 95dNjB8FmtxQsmygm6dtEy53
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthUserToken'
                  - $ref: '#/components/schemas/AuthAppToken'
              examples:
                user auth:
                  value:
                    access_token: Bh3JBzcbPxcwxQJtWuHTUV7H
                    token_type: bearer
                    expires_in: 1209600
                    refresh_token: xuLNvUSv7FYM4MPfXDP9aJWe
                app auth:
                  value:
                    access_token: Bh3JBzcbPxcwxQJtWuHTUV7H
                    token_type: bearer
        '400':
          description: Ошибка параметров запроса.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/AuthInvalidRequestError'
                  - $ref: '#/components/schemas/AuthInvalidClientError'
                  - $ref: '#/components/schemas/AuthInvalidGrantError'
                  - $ref: '#/components/schemas/AuthUnsupportedGrantTypeError'
              examples:
                account not found:
                  value:
                    summary: Передана неправильная пара `client_id` и `client_secret`
                    error: invalid_request
                    error_description: account not found
                account is locked:
                  value:
                    summary: 'Пользовательский аккаунт заблокирован, пользователь должен обратиться в [службу поддержки сайта](https://github.com/hhru/api#feedback)'
                    error: invalid_request
                    error_description: account is locked
        '403':
          description: Действие запрещено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  '/employers/{employer_id}/managers/{manager_id}':
    x-name: '/employers/{employer_id}/managers/{manager_id}'
    put:
      tags:
        - Менеджеры работодателя
      summary: Редактирование менеджера
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: Идентификатор менеджера
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/EmployerManagersManagerData'
            examples:
              Пример запроса:
                $ref: '#/components/examples/EditEmployerManagers'
      responses:
        '200':
          description: Параметры менеджера отредактированы
        '400':
          description: Параметры запроса переданы с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
        '403':
          description: Текущий пользователь не имеет прав на редактирование менеджера или иные причины
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
        '404':
          description: 'Указанный работодатель или менеджер не существует, или пользователь не имеет прав на редактирование менеджера'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    get:
      tags:
        - Менеджеры работодателя
      summary: Получение информации о менеджере
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: Идентификатор менеджера
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerManagersEmployerManagerInfo'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerManagerInfo'
        '404':
          description: Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Менеджеры работодателя
      summary: Удаление менеджера
      description: 'Удаление менеджера занимает некоторое время. По этой причине, если сразу после успешного удаления менеджера вы запросите, например, список менеджеров, в ответе может вернуться удаленный менеджер.'
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: Идентификатор менеджера
          required: true
          schema:
            type: string
        - name: successor_id
          in: query
          description: 'Идентификатор менеджера, которому передаются данные, связанные с удаляемым менеджером, в частности: вакансии, отклики, папки отобранных резюме, комментарии к соискателю, автопоиски и т. п.'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          description: 'Успешное выполнение запроса, менеджер удалён'
        '400':
          description: Параметры запроса переданы с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
        '403':
          description: Неподходящая авторизация или иные причины отказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
        '404':
          description: 'Указанный работодатель или менеджер не существует, или пользователь не имеет прав на удаление данного менеджера'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/addresses':
    x-name: '/employers/{employer_id}/addresses'
    get:
      tags:
        - Адреса работодателя
      summary: Список адресов работодателя
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - name: changed_after
          in: query
          description: 'Позволяет загрузить все адреса, изменённые после этой даты (добавление, удаление или изменение адреса). Изменения возвращаются без пагинации. Значение указывается в формате [ISO 8601](https://github.com/hhru/api/blob/master/docs/general.md#date-format) - `YYYY-MM-DDThh:mm:ss` или c указанием отступа для часового пояса `YYYY-MM-DDThh:mm:ss±hhmm`. Максимальное значение отступа от текущей даты - 7 дней. При передаче этого параметра, для каждого адреса в теле ответа возвращается поле `deleted`, указывающее на то, удалён ли адрес.'
          required: false
          schema:
            type: string
            pattern: '^\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?((\+|-)[0-1][0-9]{3})?$'
        - name: per_page
          in: query
          description: |
            Количество элементов на странице выдачи. Поддерживаются [стандартные параметры пагинации](https://github.com/hhru/api/blob/master/docs/general.md#pagination). Значение по умолчанию и максимальное значение per_page составляет 10000.
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: |
            Порядковый номер страницы в выдаче. Поддерживаются [стандартные параметры пагинации](https://github.com/hhru/api/blob/master/docs/general.md#pagination). По умолчанию нумерация начинается с 0 страницы.
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: 'Успешный ответ, в поле `items` содержится список адресов компании'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerAddressesEmployerAddressResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerAddressItem'
        '400':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerAddressErrors'
        '403':
          description: Текущий пользователь не имеет прав на просмотр адресов данного работодателя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/managers/{manager_id}/settings':
    x-name: '/employers/{employer_id}/managers/{manager_id}/settings'
    get:
      tags:
        - Менеджеры работодателя
      summary: Предпочтения менеджера
      description: |
        Возвращает информацию о предпочтениях менеджера.

        Проще всего получить URL из поля `manager_settings_url` объекта `manager`
        в [информации о текущем пользователе](#tag/Rabotodatelskie/paths/~1me/get).

        Предпочтения менеджера *не влияют* на действия в API по умолчанию. Например, брендированный шаблон оформления
        (`default_vacancy_branded_template`) не будет применен автоматически при публикации вакансии, если шаблон не был передан.
        Приложение может использовать эту информацию для того, чтобы реализовать логику предзаполнения полей.
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя.
          required: true
          schema:
            type: string
          example: '1455'
        - name: manager_id
          in: path
          description: Идентификатор менеджера.
          required: true
          schema:
            type: string
          example: '87654321'
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerSettings'
        '403':
          description: Текущий пользователь не является менеджером.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: 'Менеджер не существует, либо просмотр его настроек не доступен.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/managers':
    x-name: '/employers/{employer_id}/managers'
    get:
      tags:
        - Менеджеры работодателя
      summary: Список менеджеров работодателя
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerManagersResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerManagers'
        '403':
          description: Текущий пользователь не имеет прав на просмотр менеджеров данного работодателя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    post:
      tags:
        - Менеджеры работодателя
      summary: Добавление менеджера
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя. Чтобы получить его, используйте метод [Информация о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployerManagersAddEmployerManager'
            examples:
              Пример запроса:
                $ref: '#/components/examples/AddEmployerManager'
      responses:
        '201':
          description: Менеджер добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerManagersEmployerManagerId'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerManagerId'
        '400':
          description: Параметры во входном JSON переданы с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerManagerErrors'
        '403':
          description: Неподходящая авторизация или другие причины
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationEmployerManagerErrors'
        '404':
          description: 'Указанный работодатель не существует, или пользователь не имеет прав на создание менеджера'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/managers/{manager_id}/limits/resume':
    x-name: '/employers/{employer_id}/managers/{manager_id}/limits/resume'
    get:
      tags:
        - Менеджеры работодателя
      summary: Дневной лимит просмотра резюме для текущего менеджера
      description: Метод доступен менеджеру только для просмотра своего дневного лимита
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get).'
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: 'Идентификатор менеджера, который можно узнать в [информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerManagersEmployerManagerLimits'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerManagerLimits'
        '403':
          description: Неподходящая авторизация
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный работодатель или менеджер не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /resume_should_send_sms:
    x-name: /resume_should_send_sms
    get:
      tags:
        - Резюме. Работа с телефоном
      summary: Получить информацию о телефоне соискателя
      parameters:
        - name: phone
          in: query
          description: Номер телефона в любом формате
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeShouldSendSmsContainer'
        '400':
          description: Ошибки в аргументах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  /manager_accounts/mine:
    x-name: /manager_accounts/mine
    get:
      tags:
        - Менеджеры работодателя
      summary: Рабочие аккаунты менеджера
      description: |
        Возвращает список рабочих аккаунтов менеджера и информацию об основном и текущем аккаунте.

        Для работы под определенным аккаунтом необходимо передать значение account_id, полученное из списка, в заголовке:

        `X-Manager-Account-Id: {account_id}`

        Использовать данный заголовок можно во всех методах, доступных для работодателей.

        В заголовке можно передавать account_id основного аккаунта, который также подразумевается по умолчанию, при отсутствии заголовка.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagerAccounts'
        '403':
          description: Ошибка авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/employers/{employer_id}/manager_types':
    x-name: '/employers/{employer_id}/manager_types'
    get:
      tags:
        - Менеджеры работодателя
      summary: Справочник типов и прав менеджера
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerManagerTypesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerManagerTypes'
        '403':
          description: Текущий пользователь не имеет прав на просмотр типов менеджеров данного работодателя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /resume_phone_generate_code:
    x-name: /resume_phone_generate_code
    post:
      tags:
        - Резюме. Работа с телефоном
      summary: Отправить код подтверждения для телефона резюме
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                phone:
                  description: Телефон на который надо отправить подтверждающий код
                  type: string
              required:
                - phone
      responses:
        '201':
          description: Успешно отправлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumePhoneGenerateCodeGenerateCode'
        '400':
          description: Ошибки в аргументах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Ошибка авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /webhook/subscriptions:
    x-name: /webhook/subscriptions
    post:
      tags:
        - Webhook API
      summary: Подписаться на уведомления
      description: |
        В рамках одного приложения работодатель может получать уведомления только на 1 url: нельзя подписаться разными действиями на разные урлы.
        После наступления события будет отправлен POST запрос на указанный URL c json телом. 
        Мы ожидаем, что в ответ на запрос придет ответ с любым кодом состояния 2хх Success или 409 Conflict, если вам пришел дубль сообщения. 
        Если ваш сервис долгое время постоянно отвечает неуспешными кодами ответа, мы автоматически деактивируем подписку. Предварительно на почту разработчика приложения будет отправлено уведомительное письмо об этом.
        В случае прихода ответа с другими кодами состояния несколько раз подряд, попытки отправки будут прекращены. 
        Могут быть случаи, когда одно и то же сообщение отправилось несколько раз (например, мы не получили ответ из-за проблем с сетью или получили ответ, который мы считаем неуспешным), для определения повторов нужно использовать id из запроса (это уникальный идентификатор для пары пользователь + приложение в рамках одного типа события в подписке).
        Также следует учитывать, что подписки на уведомления удаляются при удалении приложения владельцем или отзыве доступа у приложения пользователем. После восстановления доступа необходимо переподписывать пользователей заново.
        Вебхуки не являются средствами гарантированной доставки. Мы отправляем все сообщения, но не гарантируем что адресат из получит.

        ## Типы вебхуков:

        Все вебхуки содержат общие поля `id`, `subscription_id`, `action_type`, `user_id` и имеют различные структуры в поле `payload`

        ### `NEW_NEGOTIATION_VACANCY`
        Новый отклик на вакансию.

         ### `NEW_RESPONSE_OR_INVITATION_VACANCY`
        Новый отклик или приглашение на вакансии отличается от `NEW_NEGOTIATION_VACANCY`,
        данное событие будет вызываться как на отклик со стороны соискателя, так и на приглашение со стороны работодателя

        ### `VACANCY_ARCHIVATION`
        Архивация вакансии.

        ### `VACANCY_PUBLICATION_FOR_VACANCY_MANAGER`
        Публикация вакансии. Событие вызывается только для менеджера опубликованной вакансии.

        ### `VACANCY_PROLONGATION`
        Продление вакансии.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscriptionCreate'
      responses:
        '200':
          $ref: '#/components/responses/SuccessCreated'
        '400':
          description: Ошибка параметров запроса.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorsBadJsonDataErrors'
                  - $ref: '#/components/schemas/WebhookErrors'
        '403':
          description: Запрос не от работодателя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      callbacks:
        onData:
          /url_used_for_subscription:
            post:
              requestBody:
                description: Отправленный объект
                content:
                  application/json:
                    schema:
                      oneOf:
                        - $ref: '#/components/schemas/WebhookSendObjectBaseUser'
              responses:
                '409':
                  description: В ответ на наше исходящее сообщение код 2** или 409 принимается за успех
                2XX:
                  description: В ответ на наше исходящее сообщение код 2** или 409 принимается за успех
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
    get:
      tags:
        - Webhook API
      summary: 'Получить список уведомлений, на которые подписан пользователь'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSubscriptionsOutput'
        '403':
          description: Запрос выполнен не с авторизацией работодателя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  '/webhook/subscriptions/{subscription_id}':
    x-name: '/webhook/subscriptions/{subscription_id}'
    put:
      tags:
        - Webhook API
      summary: Изменить подписки на уведомления
      parameters:
        - name: subscription_id
          in: path
          description: Идентификатор подписки
          required: true
          schema:
            type: string
          example: '1455'
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      description: |
        Обновить можно как каждое поле по отдельности (в таком случае нужно отправить только обновляемое поле), так и оба поля одновременно. Для обновления `actions` нужно передать полный список типов событий, по которым будут формироваться уведомления. Переданные типы событий не добавляются к типам событий, на которые пользователь уже подписан.
        Пустой список `actions` передать нельзя.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookSubscriptionUpdate'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          description: Ошибка параметров запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadJsonDataErrors'
        '403':
          description: Запрос выполнен не с авторизацией работодателя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Подписка не найдена или недоступна текущему пользователю.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Webhook API
      summary: Удалить подписку на уведомление
      parameters:
        - name: subscription_id
          in: path
          description: Идентификатор подписки
          required: true
          schema:
            type: string
          example: '1455'
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Запрос выполнен не с авторизацией работодателя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Подписка не найдена или недоступна текущему пользователю.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/educational_institutions/{id}/faculties':
    x-name: '/educational_institutions/{id}/faculties'
    get:
      tags:
        - Общие справочники
      summary: Список факультетов учебного заведения
      description: Возвращает список факультетов указанного учебного заведения
      parameters:
        - name: id
          in: path
          description: 'Идентификатор учебного заведения, который можно узнать из [подсказки](#tag/Podskazki/paths/~1suggests~1companies/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionariesFacultiesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/DictionariesFaculties'
        '404':
          description: Указанное учебное заведение не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /professional_roles:
    x-name: /professional_roles
    get:
      tags:
        - Общие справочники
      summary: Справочник профессиональных ролей
      description: |
        Возвращает профессиональные роли, их категории и другую информацию о профессиональных ролях.
        Профессиональные роли приходят на замену [специализациям](https://github.com/hhru/api/blob/master/docs/specializations.md). В настоящее время профессиональные роли и специализации используются параллельно для обеспечения обратной совместимости.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessionalRolesCatalog'
        '400':
          $ref: '#/components/responses/ErrorBadArgument'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /languages:
    x-name: /languages
    get:
      tags:
        - Общие справочники
      summary: Список всех языков
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionariesLangResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/Languages'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /dictionaries:
    x-name: /dictionaries
    get:
      tags:
        - Общие справочники
      summary: Справочники полей
      description: 'Справочники полей и сущностей, используемых в API. Значения в справочниках могут поменяться в любой момент'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionariesDictResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/DictionariesDictionaries'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /industries:
    x-name: /industries
    get:
      tags:
        - Общие справочники
      summary: Отрасли компаний
      description: Возвращает двухуровневый справочник всех отраслей
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionariesIndustriesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/DictionariesIndustries'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /educational_institutions:
    x-name: /educational_institutions
    get:
      tags:
        - Общие справочники
      summary: Основная информация об учебных заведениях
      parameters:
        - name: id
          in: query
          description: 'Идентификаторы учебных заведений. Идентификатор конкретного заведения можно узнать в [подсказке](#tag/Podskazki/paths/~1suggests~1educational_institutions/get). Передать можно не более 50 значений. Например: `?id=39196&id=45470&id=0`. Если был передан идентификатор несуществующего заведения, для него не вернется никакой информации'
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsEducationalInstitutions'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsEducationalInstitutions'
        '400':
          description: 'Неверные параметры запроса, либо ошибка [bulk-запроса](https://github.com/hhru/api/blob/master/docs/errors.md#bulk-request)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
  /skills:
    x-name: /skills
    get:
      tags:
        - Общие справочники
      summary: Справочник ключевых навыков
      description: |
        Метод возвращает информацию по запрашиваемым ключевым навыкам.

        Значения в справочнике могут поменяться в любой момент
      parameters:
        - name: id
          in: query
          description: 'Идентификаторы ключевых навыков. Идентификатор конкретного навыка можно узнать по [подсказке](#tag/Podskazki/paths/~1suggests~1skill_set/get). Передать можно не более 50 значений. Например: `?id=2716&id=3019&id=0`. Если был передан идентификатор несуществующего ключевого навыка, для него не вернется никакой информации'
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionariesSkillsResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/DictionariesSkills'
        '400':
          description: 'Неверные параметры запроса, либо ошибка [bulk-запроса](https://github.com/hhru/api/blob/master/docs/errors.md#bulk-request)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
  /vacancies/drafts:
    x-name: /vacancies/drafts
    post:
      tags:
        - Черновики вакансий
      summary: Создание черновика вакансии
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyDraftDraftCreate'
            examples:
              Пример запроса:
                $ref: '#/components/examples/VacancyDraftVacancyDraftCreation'
      responses:
        '201':
          description: Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftResponseSchema'
        '400':
          description: Переданный формат не json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadJsonErrors'
        '403':
          description: Запрос выполнен не с авторизацией работодателя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '429':
          description: Превышено допустимое количество черновиков
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsDraftError'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
    get:
      tags:
        - Черновики вакансий
      summary: Получение списка черновиков вакансий
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesDraft'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/vacancies/drafts/{draft_id}':
    x-name: '/vacancies/drafts/{draft_id}'
    get:
      tags:
        - Черновики вакансий
      summary: Получение черновика вакансии
      parameters:
        - name: draft_id
          in: path
          description: Идентификатор черновика
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ содержит информацию по созданному черновику и дополнительную информацию по полям
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftFull'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacancyDraftVacancyDraftFull'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Черновик не найден или пользователь не имеет прав на просмотр указанного черновика
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    put:
      tags:
        - Черновики вакансий
      summary: Изменение черновика вакансии
      parameters:
        - name: draft_id
          in: path
          description: Идентификатор черновика
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VacancyDraftDraftCreate'
            examples:
              Пример запроса:
                $ref: '#/components/examples/VacancyDraftVacancyDraftCreation'
      responses:
        '200':
          description: Успешный ответ содержит информацию по измененому черновику и дополнительную информацию по полям
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDraftDraftResponseSchema'
        '400':
          description: Переданный формат не json
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadJsonErrors'
        '403':
          description: Запрос выполнен не с авторизацией работодателя или черновик не был создан вами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Черновик не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Черновики вакансий
      summary: Удаление черновика вакансии
      parameters:
        - name: draft_id
          in: path
          description: Идентификатор черновика
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          description: 'Успешное выполнение запроса, черновик удалён'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Черновик не найден или у пользователя нет прав на удаление данного черновика
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /vacancies/auto_publication:
    x-name: /vacancies/auto_publication
    delete:
      tags:
        - Черновики вакансий
      summary: Отмена автопубликации вакансии
      parameters:
        - name: draft_id
          in: query
          description: Идентификатор черновика
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          description: 'Успешное выполнение запроса, автопубликация произведена не будет'
        '400':
          description: Не передан draft_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Черновик не найден или у пользователя нет прав на удаление данного расписания
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/vacancies/drafts/{draft_id}/publish':
    x-name: '/vacancies/drafts/{draft_id}/publish'
    post:
      tags:
        - Черновики вакансий
      summary: Публикация вакансии на основе черновика
      parameters:
        - name: draft_id
          in: path
          description: Идентификатор черновика вакансии
          required: true
          schema:
            type: string
          example: '1110031'
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '201':
          description: Массив идентификаторов опубликованных вакансий
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacancyDraftVacanciesDraftResponse'
        '400':
          description: Ошибки в полях при добавлении вакансии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsVacancyErrors'
        '403':
          description: Запрос выполнен не с авторизацией работодателя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Черновик не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/vacancy_areas/active':
    x-name: '/employers/{employer_id}/vacancy_areas/active'
    get:
      tags:
        - Информация о работодателе
      summary: 'Список регионов, в которых есть активные вакансии'
      description: |
        Возвращает список регионов, в которых на данный момент есть активные вакансии от указанного работодателя.

        Значения в справочнике могут поменяться в любой момент
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Rabotodatel/paths/~1employers/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersEmployerVacancyAreasResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployersEmployerVacancyAreas'
        '400':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Пользователь не имеет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /employers:
    x-name: /employers
    get:
      tags:
        - Работодатель
      summary: Поиск работодателя
      description: 'При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `5000`. Например, возможен запрос `per_page=10&page=499` (выдача с `4991` по `5000` работодателя), но запрос с `per_page=10&page=500` вернёт ошибку (выдача с `5001` до `5010` работодателя)'
      parameters:
        - name: text
          in: query
          description: Текст для поиска. Переданное значение ищется в названии и описании работодателя
          required: false
          schema:
            type: string
        - name: area
          in: query
          description: 'Идентификатор региона работодателя, множественный параметр. Идентификаторы регионов можно узнать в [справочнике регионов](https://github.com/hhru/api/blob/master/docs/areas.md)'
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: 'Тип работодателя, множественный параметр. Разрешенные значения перечислены в [справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `employer_type`'
          required: false
          schema:
            type: string
        - name: only_with_vacancies
          in: query
          description: Возвращать только работодателей у которых есть в данный момент открытые вакансии (`true`) или же всех (`false`). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          description: 'Номер страницы с работодателями (считается от `0`, по умолчанию — `0`)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов на страницу (по умолчанию — 20, максимум — 100 )'
          required: false
          schema:
            type: number
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersEmployersList'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployersEmployersExample'
        '400':
          description: Ошибка в параметрах запроса. В теле ответа может содержаться название параметра с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
  '/employers/{employer_id}/vacancy_branded_templates':
    x-name: '/employers/{employer_id}/vacancy_branded_templates'
    get:
      tags:
        - Информация о работодателе
      summary: Список доступных бренд шаблонов вакансий работодателя.
      description: |
        Внимание! Значения в справочниках могут поменяться в любой момент. Не нужно завязываться на них.

        Использование брендированных шаблонов вакансии доступно работодателям, оплатившим и активировавшим соответствующую 
        услугу. Подробнее на сайте [hh.ru](https://hh.ru/article/brand).

        Брендированные шаблоны можно использовать при 
        [публикации и редактировании вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#branded-template-field).
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
          example: '12345'
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersVacancyBrandedTemplatesList'
        '403':
          description: Если текущий пользователь не авторизован или не является работодателем.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Если получение шаблонов по данной компании недоступно или компания не существует.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/blacklisted/{employer_id}':
    x-name: '/employers/blacklisted/{employer_id}'
    put:
      tags:
        - Скрытые работодатели
      summary: Добавление работодателя в список скрытых
      description: 'Добавляет указанного работодателя в [список скрытых работодателей](#tag/Skrytye-vakansii/paths/~1vacancies~1blacklisted/get)'
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          description: Превышен лимит на количество элементов в списке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentEmployerBlacklistErrors'
        '403':
          description: Текущий пользователь не является соискателем или не имеет прав на добавление работодателя в скрытые
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundEmployersBlacklistedErrors'
    delete:
      tags:
        - Скрытые работодатели
      summary: Удаление работодателя из списка скрытых
      description: 'Удаляет указанного работодателя из [списка скрытых работодателей](#tag/Skrytye-vakansii/paths/~1vacancies~1blacklisted/get)'
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundEmployersBlacklistedErrors'
  '/employers/{employer_id}':
    x-name: '/employers/{employer_id}'
    get:
      tags:
        - Работодатель
      summary: Информация о работодателе
      description: Возвращает данные о работодателе со ссылкой на выдачу вакансий этого работодателя
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Rabotodatel/paths/~1employers/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersEmployerInfo'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployersEmployerInfoExample'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /employers/blacklisted:
    x-name: /employers/blacklisted
    get:
      tags:
        - Скрытые работодатели
      summary: Список скрытых работодателей
      description: 'Возвращает [подмножество работодателей](#tag/Rabotodatel/paths/~1employers/get), скрытых пользователем, а также один дополнительный параметр'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersEmployersBlacklistedResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployersEmployersBlacklisted'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/employers/{employer_id}/departments':
    x-name: '/employers/{employer_id}/departments'
    get:
      tags:
        - Информация о работодателе
      summary: Справочник департаментов работодателя
      description: |
        Возвращает список департаментов работодателя.

        Значения в справочнике могут поменяться в любой момент
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно получить в [списке работодателей](#tag/Rabotodatel/paths/~1employers/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployersEmployerDepartmentsResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployersEmployerDepartments'
        '403':
          description: Пользователь не имеет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /locales/resume:
    x-name: /locales/resume
    get:
      tags:
        - Общие справочники
      summary: Список доступных локалей для резюме
      description: |
        Возвращает справочник возможных локалей резюме. Подколлекция [справочника локалей](#tag/Spravochniki/paths/locales/~1locales/get).

        Изменив локаль, можно, например, создать резюме на английском языке.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/Locales'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /locales:
    x-name: /locales
    get:
      tags:
        - Общие справочники
      summary: Список доступных локалей
      description: |
        Возвращает список возможных значений (доступных локалей) в поле `id`. Список локалей будет зависеть от указанного сайта (параметр `host`). В любом запросе к API можно указывать параметр `?locale=` для передачи значения локали (языка).
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/Locales'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/employers/{employer_id}/services/payable_api_actions/active':
    x-name: '/employers/{employer_id}/services/payable_api_actions/active'
    get:
      tags:
        - Услуги работодателя
      summary: Информация по активным услугам API для платных методов
      description: |
        Каждая подключенная услуга отображается отдельным объектом в массиве `items`, даже при условии, что подключено несколько услуг одного типа.
        Если у работодателя нет активных услуг, то в ответе придет пустой массив `items`.
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerServicesEmployerServices'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ServicesEmployerServices'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный работодатель не существует или у текущего пользователя нет прав на просмотр информации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/saved_searches/vacancies/{id}':
    x-name: '/saved_searches/vacancies/{id}'
    get:
      tags:
        - Сохраненные поиски вакансий
      summary: Получение единичного сохраненного поиска вакансий
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchesSavedSearchItem'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SavedSearchesSavedSearchVacancyItem'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Сохраненный поиск не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    put:
      tags:
        - Сохраненные поиски вакансий
      summary: Обновление сохраненного поиска вакансий
      description: У сохраненного поиска можно изменить имя (`name`) и статус подписки (`subscription`). В одном запросе можно передать только один из параметров
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Новое имя сохраненного поиска
          required: false
          schema:
            type: string
        - name: subscription
          in: query
          description: Статус подписки
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          $ref: '#/components/responses/ErrorBadArgument'
        '403':
          $ref: '#/components/responses/ErrorBadAuthorization'
        '404':
          $ref: '#/components/responses/ErrorNotFound'
        '409':
          $ref: '#/components/responses/ErrorBothChangedConflict'
    delete:
      tags:
        - Сохраненные поиски вакансий
      summary: Удаление сохраненного поиска вакансий
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ErrorBadAuthorization'
        '404':
          $ref: '#/components/responses/ErrorNotFound'
  '/vacancies/{vacancy_id}/prolongate':
    x-name: '/vacancies/{vacancy_id}/prolongate'
    get:
      tags:
        - Управление вакансиями
      summary: Информация о возможности продления вакансии
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesVacancyProlongate'
              examples:
                'Пример ответа, когда продление возможно':
                  $ref: '#/components/examples/VacanciesVacancyProlongateAvailable'
                'Пример ответа, когда продление невозможно':
                  $ref: '#/components/examples/VacanciesVacancyProlongateUnavailable'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Текущему пользователю недоступно получение информации о вакансии или вакансия не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    post:
      tags:
        - Управление вакансиями
      summary: Продление вакансии
      description: |
        Продлевает срок размещения указанной вакансии.

        Условия продления:

        * Стоимость продления вакансии равна стоимости новой публикации.
        * Стандартные вакансии можно продлевать, если с момента предыдущего продления прошло не менее 1 минуты.
        * Вакансии "стандарт-плюс" можно продлевать не ранее, чем за 7 дней до окончания срока публикации.
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является работодателем или продление невозможно
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
                  - $ref: '#/components/schemas/ErrorsVacancyProlongateErrors'
        '404':
          description: Текущему пользователю недоступно получение информации о вакансии или вакансия не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /vacancies/blacklisted:
    x-name: /vacancies/blacklisted
    get:
      tags:
        - Скрытые вакансии
      summary: Список скрытых вакансий
      description: 'Возвращает [подмножество вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#item), скрытых пользователем, а также один дополнительный параметр'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesVacanciesBlacklistedResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesVacanciesBlacklisted'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /vacancies:
    x-name: /vacancies
    post:
      tags:
        - Управление вакансиями
      summary: Публикация вакансии
      description: |
        Создает новую вакансию с полями, передаваемыми в теле запроса. 

        В соответствии с [законом РФ № 1032-1 от 19.04.1991 в ред. от 02.07.2013 г.](https://hh.ru/article/13967) запрещено размещать информацию, ограничивающую права или устанавливающую преимущества для соискателей по полу, возрасту, семейному положению и другим обстоятельствам, не связанным с деловыми качествами работников.

        Примечания:

        * При успешной публикации будут списаны соответствующие услуги.
        * Все вакансии проходят ручную модерацию.
        * В течение нескольких минут после публикации вакансия станет доступна в поиске.

        Полезные ссылки:

        * [Правила размещения вакансий](https://hh.ru/article/341)
        * [Как составить хорошее описание вакансии](https://hh.ru/article/16239)
      parameters:
        - name: ignore_duplicates
          in: query
          description: Форсирование добавления дубликатов
          required: false
          schema:
            type: boolean
        - name: with_professional_roles
          in: query
          description: |
            Публикация вакансии с профессиональными ролями вместо специализаций.

            При указании параметра `with_professional_roles=true` поле `specializations` перестает быть обязательным и игнорируется, а массив `professional_roles` становится обязательным, при этом количество его элементов равно 1. По умолчанию значение параметра равно `false`, а массив `professional_roles` необязателен и игнорируется
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/VacancyAddVacancyRequestBody'
            examples:
              Пример запроса:
                $ref: '#/components/examples/VacancyAddVacancyRequestBody'
      responses:
        '201':
          description: Успешный ответ
          headers:
            Location:
              schema:
                type: string
                description: 'Ссылка на добавленную вакансию, например: `/vacancies/78789890`'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_IncludesId'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/Id'
        '400':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ErrorsBadJsonDataErrors'
                  - $ref: '#/components/schemas/ErrorsBadJsonDataAddEditVacancyErrors'
        '403':
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
                  - $ref: '#/components/schemas/ErrorsBadAuthorizationAddEditVacancyErrors'
  '/employers/{employer_id}/managers/{manager_id}/vacancies/available_types':
    x-name: '/employers/{employer_id}/managers/{manager_id}/vacancies/available_types'
    get:
      tags:
        - Информация о менеджере
      summary: Варианты публикации вакансий у текущего менеджера
      description: 'Метод позволяет понять, может ли менеджер публиковать вакансии и какие типы вакансий ему доступны. Возвращает все возможные типы публикации'
      parameters:
        - name: employer_id
          in: path
          description: 'Идентификатор работодателя, который можно узнать [в списке работодателей](#tag/Rabotodatel/paths/~1employers/get)'
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: 'Идентификатор менеджера, который можно узнать [в информации о текущем пользователе](#tag/Informaciya-o-menedzhere/paths/~1me/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesAvailableVacancyTypeResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesAvailableVacancyType'
        '403':
          description: Текущий пользователь не является работодателем или не имеет доступа к данным
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Менеджер или компания не существуют или не доступны для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/resumes/{resume_id}/similar_vacancies':
    x-name: '/resumes/{resume_id}/similar_vacancies'
    get:
      tags:
        - Сохраненные поиски вакансий
      summary: 'Поиск по вакансиям, похожим на резюме'
      description: |
        Данные доступны только автору резюме.

        При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `2000`. Например, возможен запрос `per_page=10&page=199` (выдача с `1991` по `2000` вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с `2001` по `2010` вакансию)
      parameters:
        - name: resume_id
          in: path
          description: Идентификатор резюме
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию - 10, максимальное значение - 100)'
          required: false
          schema:
            type: number
        - name: text
          in: query
          description: 'Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](https://github.com/hhru/api/blob/master/docs/suggests.md#vacancy-search-keyword)'
          required: false
          schema:
            type: string
        - name: search_field
          in: query
          description: |
            Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            По умолчанию, используются все поля. Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: experience
          in: query
          description: |
            Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employment
          in: query
          description: |
            Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: schedule
          in: query
          description: |
            График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: area
          in: query
          description: |
            Регион. Необходимо передавать `id` из справочника [/areas](https://github.com/hhru/api/blob/master/docs/areas.md). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: metro
          in: query
          description: |
            Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/paths/~1metro/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: professional_role
          in: query
          description: |
            Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/paths/~1professional_roles/get)
          required: false
          schema:
            type: string
        - name: industry
          in: query
          description: |
            Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/paths/~1industries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employer_id
          in: query
          description: |
            Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: currency
          in: query
          description: |
            Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Имеет смысл указывать только совместно с параметром `salary`
          required: false
          schema:
            type: string
        - name: salary
          in: query
          description: |
            Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.
            При указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.
            По умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`
          required: false
          schema:
            type: number
        - name: label
          in: query
          description: |
            Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: only_with_salary
          in: query
          description: |
            Показывать вакансии только с указанием зарплаты. По умолчанию `false`
          required: false
          schema:
            type: boolean
        - name: period
          in: query
          description: |
            Количество дней, в пределах которых производится поиск по вакансиям
          required: false
          schema:
            type: number
        - name: date_from
          in: query
          description: |
            Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.
            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: date_to
          in: query
          description: |
            Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.
            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: top_lat
          in: query
          description: |
            Верхняя граница широты.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: bottom_lat
          in: query
          description: |
            Нижняя граница широты.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: left_lng
          in: query
          description: |
            Левая граница долготы.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: right_lng
          in: query
          description: |
            Правая граница долготы.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: order_by
          in: query
          description: |
            Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            Если выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`.
          required: false
          schema:
            type: string
        - name: sort_point_lat
          in: query
          description: |
            Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: sort_point_lng
          in: query
          description: |
            Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: clusters
          in: query
          description: |
            Возвращать ли [кластеры для данного поиска](https://github.com/hhru/api/blob/master/docs/clusters.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: describe_arguments
          in: query
          description: |
            Возвращать ли [описание использованных параметров поиска](https://github.com/hhru/api/blob/master/docs/vacancies_search_arguments.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: no_magic
          in: query
          description: |
            Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.
            При включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`
          required: false
          schema:
            type: boolean
        - name: premium
          in: query
          description: |
            Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false
          required: false
          schema:
            type: boolean
        - name: responses_count_enabled
          in: query
          description: |
            Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: part_time
          in: query
          description: |
            Вакансии для подработки. Возможные значения:
            * Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.
            Можно указать несколько значений
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesVacanciesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesVacancies'
        '400':
          description: Параметры переданы с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '404':
          description: Указанное резюме не существует или у текущего пользователя нет доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/vacancies/{vacancy_id}/similar_vacancies':
    x-name: '/vacancies/{vacancy_id}/similar_vacancies'
    get:
      tags:
        - Сохраненные поиски вакансий
      summary: 'Поиск по вакансиям, похожим на вакансию'
      description: |
        Если не передан токен авторизации, то после первого запроса будет предложено пройти капчу.

        При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше `2000`. Например, возможен запрос `per_page=10&page=199` (выдача с `1991` по `2000` вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с `2001` по `2010` вакансию)
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию - 10, максимальное значение - 100)'
          required: false
          schema:
            type: number
        - name: text
          in: query
          description: 'Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](https://github.com/hhru/api/blob/master/docs/suggests.md#vacancy-search-keyword)'
          required: false
          schema:
            type: string
        - name: search_field
          in: query
          description: |
            Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            По умолчанию, используются все поля. Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: experience
          in: query
          description: |
            Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employment
          in: query
          description: |
            Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: schedule
          in: query
          description: |
            График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: area
          in: query
          description: |
            Регион. Необходимо передавать `id` из справочника [/areas](https://github.com/hhru/api/blob/master/docs/areas.md). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: metro
          in: query
          description: |
            Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/paths/~1metro/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: professional_role
          in: query
          description: |
            Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/paths/~1professional_roles/get)
          required: false
          schema:
            type: string
        - name: industry
          in: query
          description: |
            Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/paths/~1industries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employer_id
          in: query
          description: |
            Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: currency
          in: query
          description: |
            Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Имеет смысл указывать только совместно с параметром `salary`
          required: false
          schema:
            type: string
        - name: salary
          in: query
          description: |
            Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.
            При указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.
            По умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`
          required: false
          schema:
            type: number
        - name: label
          in: query
          description: |
            Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: only_with_salary
          in: query
          description: |
            Показывать вакансии только с указанием зарплаты. По умолчанию `false`
          required: false
          schema:
            type: boolean
        - name: period
          in: query
          description: |
            Количество дней, в пределах которых производится поиск по вакансиям
          required: false
          schema:
            type: number
        - name: date_from
          in: query
          description: |
            Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.
            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: date_to
          in: query
          description: |
            Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.
            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: top_lat
          in: query
          description: |
            Верхняя граница широты.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: bottom_lat
          in: query
          description: |
            Нижняя граница широты.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: left_lng
          in: query
          description: |
            Левая граница долготы.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: right_lng
          in: query
          description: |
            Правая граница долготы.
            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.
            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: order_by
          in: query
          description: |
            Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            Если выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`.
          required: false
          schema:
            type: string
        - name: sort_point_lat
          in: query
          description: |
            Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: sort_point_lng
          in: query
          description: |
            Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: clusters
          in: query
          description: |
            Возвращать ли [кластеры для данного поиска](https://github.com/hhru/api/blob/master/docs/clusters.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: describe_arguments
          in: query
          description: |
            Возвращать ли [описание использованных параметров поиска](https://github.com/hhru/api/blob/master/docs/vacancies_search_arguments.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: no_magic
          in: query
          description: |
            Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.
            При включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`
          required: false
          schema:
            type: boolean
        - name: premium
          in: query
          description: |
            Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false
          required: false
          schema:
            type: boolean
        - name: responses_count_enabled
          in: query
          description: |
            Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: part_time
          in: query
          description: |
            Вакансии для подработки. Возможные значения:
            * Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.
            Можно указать несколько значений
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesVacanciesResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesVacancies'
        '400':
          description: Параметры переданы с ошибкой
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Требуется ввести капчу
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsCaptchaCaptchaErrors'
        '404':
          description: Указанная вакансия не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/vacancies/favorited/{vacancy_id}':
    x-name: '/vacancies/favorited/{vacancy_id}'
    put:
      tags:
        - Отобранные вакансии
      summary: Добавление вакансии в список отобранных
      description: 'Добавляет указанную вакансию в [список отобранных вакансий](#tag/Otobrannye-vakansii/paths/~1vacancies~1favorited/get)'
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является соискателем или не имеет прав на добавление вакансии в отобранные
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
                  - $ref: '#/components/schemas/ErrorsBadAuthorizationVacancyErrors'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Отобранные вакансии
      summary: Удаление вакансии из списка отобранных
      description: 'Удаляет указанную вакансию из [списка отобранных вакансий](#tag/Otobrannye-vakansii/paths/~1vacancies~1favorited/get)'
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /saved_searches/vacancies:
    x-name: /saved_searches/vacancies
    get:
      tags:
        - Сохраненные поиски вакансий
      summary: Список сохраненных поисков вакансий
      parameters:
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию - 10, максимальное значение - 10)'
          required: false
          schema:
            type: number
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchesSavedSearchResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SavedSearchesSavedSearchesVacancies'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
    post:
      tags:
        - Сохраненные поиски вакансий
      summary: Создание нового сохраненного поиска вакансий
      description: |
        Некоторые параметры принимают множественные значения: `key=value&key=value`.

        При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше 2000. Например, возможен запрос `per_page=10&page=199` (выдача с 1991 по 2000 вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с 2001 до 2010 вакансию)
      parameters:
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию - 10, максимальное значение - 100)'
          required: false
          schema:
            type: number
        - name: text
          in: query
          description: 'Переданное значение ищется в полях вакансии, указанных в параметре `search_field`. Доступен [язык запросов](https://hh.ru/article/1175). Специально для этого поля есть [автодополнение](https://github.com/hhru/api/blob/master/docs/suggests.md#vacancy-search-keyword)'
          required: false
          schema:
            type: string
        - name: search_field
          in: query
          description: |
            Область поиска. Справочник с возможными значениями: `vacancy_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            По умолчанию, используются все поля. Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: experience
          in: query
          description: |
            Опыт работы. Необходимо передавать `id` из справочника `experience` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employment
          in: query
          description: |
            Тип занятости. Необходимо передавать `id` из справочника `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: schedule
          in: query
          description: |
            График работы. Необходимо передавать `id` из справочника `schedule` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: area
          in: query
          description: |
            Регион. Необходимо передавать `id` из справочника [/areas](https://github.com/hhru/api/blob/master/docs/areas.md). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: metro
          in: query
          description: |
            Ветка или станция метро. Необходимо передавать `id` из справочника [/metro](#tag/Obshie-spravochniki/paths/~1metro/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: professional_role
          in: query
          description: |
            Профессиональная область. Необходимо передавать `id` из справочника [/professional_roles](#tag/Obshie-spravochniki/paths/~1professional_roles/get)
          required: false
          schema:
            type: string
        - name: industry
          in: query
          description: |
            Индустрия компании, разместившей вакансию. Необходимо передавать `id` из справочника [/industries](#tag/Obshie-spravochniki/paths/~1industries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: employer_id
          in: query
          description: |
            Идентификатор [работодателя](#tag/Rabotodatel). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: currency
          in: query
          description: |
            Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Имеет смысл указывать только совместно с параметром `salary`
          required: false
          schema:
            type: string
        - name: salary
          in: query
          description: |
            Размер заработной платы. Если указано это поле, но не указано `currency`, то для `currency` используется значение RUR.

            При указании значения будут найдены вакансии, в которых вилка зарплаты близка к указанной в запросе. При этом значения пересчитываются по текущим курсам ЦБ РФ. Например, при указании `salary=100&currency=EUR` будут найдены вакансии, где вилка зарплаты указана в рублях и после пересчёта в Евро близка к 100 EUR.

            По умолчанию будут также найдены вакансии, в которых вилка зарплаты не указана, чтобы такие вакансии отфильтровать, используйте `only_with_salary=true`
          required: false
          schema:
            type: number
        - name: label
          in: query
          description: |
            Фильтр по меткам вакансий. Необходимо передавать `id` из справочника `vacancy_label` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: only_with_salary
          in: query
          description: |
            Показывать вакансии только с указанием зарплаты. По умолчанию `false`
          required: false
          schema:
            type: boolean
        - name: period
          in: query
          description: |
            Количество дней, в пределах которых производится поиск по вакансиям
          required: false
          schema:
            type: number
        - name: date_from
          in: query
          description: |
            Дата, которая ограничивает снизу диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.

            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: date_to
          in: query
          description: |
            Дата, которая ограничивает сверху диапазон дат публикации вакансий. Нельзя передавать вместе с параметром `period`.

            Значение указывается в формате `ISO 8601 - YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Указанное значение будет округлено до ближайших пяти минут
          required: false
          schema:
            type: string
        - name: top_lat
          in: query
          description: |
            Верхняя граница широты.

            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.

            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: bottom_lat
          in: query
          description: |
            Нижняя граница широты.

            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.

            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: left_lng
          in: query
          description: |
            Левая граница долготы.

            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.

            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: right_lng
          in: query
          description: |
            Правая граница долготы.

            При поиске используется значение указанного в вакансии адреса. Принимаемое значение — градусы в виде десятичной дроби.

            Необходимо передавать одновременно все четыре параметра гео-координат, иначе вернется ошибка
          required: false
          schema:
            type: number
        - name: order_by
          in: query
          description: |
            Сортировка списка вакансий. Справочник с возможными значениями: `vacancy_search_order` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).

            Если выбрана сортировка по удалённости от гео-точки `distance`, необходимо также задать её координаты: `sort_point_lat`, `sort_point_lng`.
          required: false
          schema:
            type: string
        - name: sort_point_lat
          in: query
          description: |
            Значение географической широты точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: sort_point_lng
          in: query
          description: |
            Значение географической долготы точки, по расстоянию от которой будут отсортированы вакансии. Необходимо указывать только, если `order_by` установлено в `distance`
          required: false
          schema:
            type: number
        - name: clusters
          in: query
          description: |
            Возвращать ли [кластеры для данного поиска](https://github.com/hhru/api/blob/master/docs/clusters.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: describe_arguments
          in: query
          description: |
            Возвращать ли [описание использованных параметров поиска](https://github.com/hhru/api/blob/master/docs/vacancies_search_arguments.md). По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: no_magic
          in: query
          description: |
            Если значение `true` — автоматическое преобразование вакансий отключено. По умолчанию – false.

            При включённом автоматическом преобразовании, будет предпринята попытка изменить текстовый запрос пользователя на набор параметров. Например, запрос `text=москва бухгалтер 100500` будет преобразован в `text=бухгалтер&only_with_salary=true&area=1&salary=100500`
          required: false
          schema:
            type: boolean
        - name: premium
          in: query
          description: |
            Если значение `true` — в сортировке вакансий будет учтены премиум вакансии. Такая сортировка используется на сайте. По умолчанию — false
          required: false
          schema:
            type: boolean
        - name: responses_count_enabled
          in: query
          description: |
            Если значение `true` — дополнительное поле `counters` с количеством откликов для вакансии включено. По-умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: part_time
          in: query
          description: |
            Вакансии для подработки. Возможные значения:

            * Все элементы из `working_days` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_intervals` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Все элементы из `working_time_modes` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элементы `part` или `project` из `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
            * Элемент `accept_temporary`, показывает вакансии только с временным трудоустройством.

            Можно указать несколько значений
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '201':
          description: Успешно создано
          content:
            text/html:
              schema:
                type: string
          headers:
            Location:
              schema:
                type: string
                description: 'Путь к созданному автопоиску. Пример: `/saved_searches/vacancies/123`, где `123` — `id` созданного автопоиска'
        '400':
          description: Ошибки в аргументах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  '/vacancies/blacklisted/{vacancy_id}':
    x-name: '/vacancies/blacklisted/{vacancy_id}'
    put:
      tags:
        - Скрытые вакансии
      summary: Добавление вакансии в список скрытых
      description: 'Добавляет указанную вакансию в [список скрытых вакансий](#tag/Skrytye-vakansii/paths/~1vacancies~1blacklisted/get)'
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          description: Превышен лимит на количество элементов в списке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentVacancyErrors'
        '403':
          description: Текущий пользователь не является соискателем или не имеет прав на добавление вакансии в скрытые
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundVacancyBlacklistedErrors'
    delete:
      tags:
        - Скрытые вакансии
      summary: Удаление вакансии из списка скрытых
      description: 'Удаляет указанную вакансию из [списка скрытых вакансий](#tag/Skrytye-vakansii/paths/~1vacancies~1blacklisted/get)'
      parameters:
        - name: vacancy_id
          in: path
          description: Идентификатор вакансии
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Вакансия не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundVacancyBlacklistedErrors'
  /vacancies/favorited:
    x-name: /vacancies/favorited
    get:
      tags:
        - Отобранные вакансии
      summary: Список отобранных вакансий
      description: 'Возвращает [подмножество вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#item), добавленных пользователем в отобранные, а также ряд дополнительных полей'
      parameters:
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: number
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VacanciesVacanciesFavoritedResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/VacanciesVacanciesFavorited'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  /user_statuses/available:
    x-name: /user_statuses/available
    get:
      tags:
        - Общие справочники
        - Соискательские статусы
      summary: Справочник доступных пользовательских статусов
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStatusesAvailable'
        '403':
          $ref: '#/components/responses/ErrorBadAuthorization'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /saved_searches/resumes:
    x-name: /saved_searches/resumes
    get:
      tags:
        - Сохраненные поиски резюме
      summary: Список сохраненных поисков резюме
      parameters:
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию - 5, максимальное значение - 10)'
          required: false
          schema:
            type: number
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchesSavedSearchResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SavedSearchesSavedSearchResumes'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
    post:
      tags:
        - Сохраненные поиски резюме
      summary: Создание нового сохраненного поиска резюме
      description: |
        Некоторые параметры принимают множественные значения: `key=value&key=value`.

        При указании параметров пагинации (`page`, `per_page`) работает ограничение: глубина возвращаемых результатов не может быть больше 2000. Например, возможен запрос `per_page=10&page=199` (выдача с 1991 по 2000 вакансию), но запрос с `per_page=10&page=200` вернёт ошибку (выдача с 2001 до 2010 вакансию)
      parameters:
        - name: page
          in: query
          description: 'Номер страницы (считается от 0, по умолчанию - 0)'
          required: false
          schema:
            type: number
        - name: per_page
          in: query
          description: 'Количество элементов (по умолчанию — 10, максимальное значение — 50)'
          required: false
          schema:
            type: number
        - name: text
          in: query
          description: |
            Поисковая фраза. Найдет резюме, в которых встречаются все слова заданной фразы. Можно указать несколько значений.

            Каждый дополнительный `text` уточняет поиск. В качестве поисковой фразы можно использовать [язык поисковых запросов](http://hh.ru/article.xml?articleId=1175). Специально для этого поля есть [автодополнение](https://github.com/hhru/api/blob/master/docs/suggests.md#resume-search-keyword).

            Для тонкой настройки по фразе можно использовать параметры `text.logic`, `text.field`, `text.period`. При использовании дополнительных `text.*` полей, необходимо указывать весь набор (триаду) параметров
          required: false
          schema:
            type: string
        - name: text.logic
          in: query
          description: |
            Описывает, как производится поиск. Справочник с возможными значениями: `resume_search_logic` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: text.field
          in: query
          description: |
            Описывает, где должны встречаться слова из поисковой фразы `text`.

            В параметре `text.field` можно указать несколько значений через запятую, например — `?text.field=education,keywords`. Справочник с возможными значениями: `resume_search_fields` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: text.period
          in: query
          description: |
            Период опыта работы.

            Параметр имеет смысл только при `text.field` равным одному из значений: `experience`, `experience_company`, `experience_position`, `experience_description`, но указывать его необходимо всегда при указании других `text.*`. Если параметр не имеет смысла, то его значение можно оставить пустым
          required: false
          schema:
            type: string
        - name: age_from
          in: query
          description: |
            Минимальный возраст соискателя в годах.

            По умолчанию в выдачу добавляются также резюме с неуказанным возрастом, для выдачи резюме только с указанным возрастом используйте специальный [label](https://github.com/hhru/api/blob/master/docs/resumes_search.md#resume_search_label) "only_with_age"
          required: false
          schema:
            type: number
        - name: age_to
          in: query
          description: |
            Максимальный возраст соискателя в годах.

            По умолчанию в выдачу добавляются также резюме с неуказанным возрастом, для выдачи резюме только с указанным возрастом используйте специальный [label](https://github.com/hhru/api/blob/master/docs/resumes_search.md#resume_search_label) "only_with_age"
          required: false
          schema:
            type: number
        - name: area
          in: query
          description: |
            Регион. Справочник с возможными значениями: [/areas](https://github.com/hhru/api/blob/master/docs/areas.md). Можно указать несколько значений.

            По умолчанию выбираются резюме, в которых соискатели живут в указанных регионах или готовы в них переехать. Поменять это поведение поиска можно указанием поля `relocation`.
          required: false
          schema:
            type: string
        - name: relocation
          in: query
          description: |
            Готовность к переезду. Справочник с возможными значениями: `resume_search_relocation` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Необходимо указывать вместе с параметром `area`
          required: false
          schema:
            type: string
        - name: period
          in: query
          description: |
            В днях, ищет резюме опубликованные за указанный период. Если не указан, поиск ведется без ограничений по дате публикации
          required: false
          schema:
            type: number
        - name: date_from
          in: query
          description: |
            Дата, от которой нужно начать поиск. Значение указывается в формате [ISO 8601](https://github.com/hhru/api/blob/master/docs/general.md#date-format) — `YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Нельзя передавать вместе с параметром `period`
          required: false
          schema:
            type: string
        - name: date_to
          in: query
          description: |
            Дата, до которой нужно искать. Значение указывается в формате [ISO 8601](https://github.com/hhru/api/blob/master/docs/general.md#date-format) — `YYYY-MM-DD` или с точность до секунды `YYYY-MM-DDThh:mm:ss±hhmm`. Можно передавать только в паре с параметром `date_from`. Нельзя передавать вместе с параметром `period`
          required: false
          schema:
            type: string
        - name: education_level
          in: query
          description: |
            Уровень образования. Справочник с возможными значениями: `education_level` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Если не указан, поиск ведется без ограничений на уровень образования
          required: false
          schema:
            type: string
        - name: employment
          in: query
          description: |
            Тип занятости. Справочник с возможными значениями: `employment` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: experience
          in: query
          description: |
            Опыт работы. Справочник с возможными значениями: `experience` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: skill
          in: query
          description: |
            Ключевые навыки. Указывается один или несколько идентификаторов ключевых навыков. Значения можно получить из поля `id` в [подсказке по ключевым навыкам](https://github.com/hhru/api/blob/master/docs/suggests.md#key-skills).
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: |
            Пол соискателя. Справочник с возможными значениями: `gender` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).

            По умолчанию вне зависимости от значения параметра будут найдены резюме, в которых пол не указан, убрать такие резюме можно с помощью `label=only_with_gender`
          required: false
          schema:
            type: string
        - name: label
          in: query
          description: |
            Дополнительный фильтр. Справочник с возможными значениями: `resume_search_label` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: language
          in: query
          description: |
            Знание языка. Можно указать несколько значений

            Значения из справочника [/languages](#tag/Obshie-spravochniki/paths/~1languages/get)
          required: false
          schema:
            type: string
        - name: language.level
          in: query
          description: |
            Уровень знания языка. Можно указать несколько значений

            Значения из справочника `language_level` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: metro
          in: query
          description: |
            Линия, либо станция метро. Справочник с возможными значениями: [/metro](#tag/Obshie-spravochniki/paths/~1metro/get)
          required: false
          schema:
            type: string
        - name: currency
          in: query
          description: |
            Код валюты. Справочник с возможными значениями: `currency` (ключ `code`) в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: salary_from
          in: query
          description: |
            Нижняя граница желаемой заработной платы (ЗП).

            По умолчанию в выдачу добавляются также резюме с неуказанной ЗП, для выдачи резюме только с указанной ЗП используйте специальный [label](https://github.com/hhru/api/blob/master/docs/resumes_search.md#resume_search_label) "only_with_salary"
          required: false
          schema:
            type: number
        - name: salary_to
          in: query
          description: |
            Верхняя граница желаемой заработной платы (ЗП).

            По умолчанию в выдачу добавляются также резюме с неуказанной ЗП, для выдачи резюме только с указанной ЗП используйте специальный [label](https://github.com/hhru/api/blob/master/docs/resumes_search.md#resume_search_label) "only_with_salary"
          required: false
          schema:
            type: number
        - name: schedule
          in: query
          description: |
            График работы. Справочник с возможными значениями: `schedule` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: order_by
          in: query
          description: |
            Сортировка списка резюме. Справочник с возможными значениями: `resume_search_order` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get).
          required: false
          schema:
            type: string
        - name: citizenship
          in: query
          description: |
            Страна желаемого гражданства. Возможные значения можно посмотреть в [справочнике стран](https://github.com/hhru/api/blob/master/docs/areas.md#%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA-%D1%81%D1%82%D1%80%D0%B0%D0%BD). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: work_ticket
          in: query
          description: |
            Страна, в которой есть разрешение на работу. Возможные значения можно посмотреть в [справочнике стран](https://github.com/hhru/api/blob/master/docs/areas.md#%D1%81%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA-%D1%81%D1%82%D1%80%D0%B0%D0%BD). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: educational_institution
          in: query
          description: |
            Учебные заведения соискателя. В качестве параметров используются подсказки по названиям университетов [/suggests/educational_institutions](https://github.com/hhru/api/blob/master/docs/suggests.md). Можно указать несколько значений
          required: false
          schema:
            type: string
        - name: search_in_responses
          in: query
          description: |
            Если `true`, то поиск осуществляется только по резюме, которыми соискатели откликались на вакансии компании текущего пользователя, если `false` — поиск осуществляется по всем резюме. По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: by_text_prefix
          in: query
          description: |
            Если `true`, включается поиск по префиксу. Для каждого параметра `text` будут находиться не только полные совпадения слов, но еще и слова, начинающиеся с `text`. По умолчанию — `false`
          required: false
          schema:
            type: boolean
        - name: driver_license_types
          in: query
          description: |
            Категории водительских прав. Справочник с возможными значениями: `driver_license_types` в [/dictionaries](#tag/Obshie-spravochniki/paths/~1dictionaries/get)
          required: false
          schema:
            type: string
        - name: vacancy_id
          in: query
          description: |
            Идентификатор вакансии для поиска похожих резюме. Необходимо передавать идентификатор активной или архивной вакансии работодателя
          required: false
          schema:
            type: string
        - name: professional_role
          in: query
          description: |
            Профессиональная роль. Элемент справочника [professional_roles](#tag/Obshie-spravochniki/paths/~1professional_roles/get). Можно указать несколько значений.
          required: false
          schema:
            type: string
        - name: folder
          in: query
          description: |
            Один или несколько идентификаторов папок с отобранными резюме. Если данный параметр передан, поиск будет ограничен содержимым указанных папок. Можно передавать идентификаторы нескольких папок, например: `folder=111&folder=222&folder=333`
          required: false
          schema:
            type: string
        - name: include_all_folders
          in: query
          description: |
            Признак, указывающий, нужно ли вести поиск по всем папкам с отобранными резюме. Если у менеджера есть доступ к избранным папкам, то поиск проходит по умолчанию в избранных папках. Если передать параметр `false`, то поиск не будет ограничен папками. Если будут переданы параметры `folder` и `include_all_folders` в одном запросе, вернется ошибка `400 Bad Request`
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '201':
          description: Успешно создано
          content:
            text/html:
              schema:
                type: string
          headers:
            Location:
              schema:
                type: string
                description: 'Путь к созданному автопоиску. Пример: `/saved_searches/resumes/123`, где `123` — `id` созданного автопоиска'
        '400':
          description: Ошибки в аргументах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
  '/resumes/{resume_id}/negotiations_history':
    x-name: '/resumes/{resume_id}/negotiations_history'
    get:
      tags:
        - Отклики/приглашения работодателя
      summary: История откликов/приглашений по резюме
      description: |
        Возвращает последние действия с указанным резюме, ограниченные 30-ю вакансиями данного работодателя, и 10-ю изменениями состояний откликов/приглашений по каждой из этих вакансий.

        Метод требует наличия [платного доступа для работодателя](https://github.com/hhru/api/blob/master/docs/payable/employer_methods.md)
      parameters:
        - name: resume_id
          in: path
          description: Идентификатор резюме
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumesResumeNegotiationsHistoryResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ResumesResumeNegotiationsHistory'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Резюме не существует или недоступно для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/saved_searches/resumes/{saved_search_id}/managers/{manager_id}':
    x-name: '/saved_searches/resumes/{saved_search_id}/managers/{manager_id}'
    put:
      tags:
        - Сохраненные поиски резюме
      summary: Передача сохраненного поиска резюме другому менеджеру
      parameters:
        - name: saved_search_id
          in: path
          description: Идентификатор автопоиска
          required: true
          schema:
            type: string
        - name: manager_id
          in: path
          description: 'Идентификатор менеджера, которому надо передать автопоиск ([список менеджеров компании](https://github.com/hhru/api/blob/master/docs/employer_managers.md#list))'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationSavedSearchErrors'
        '404':
          $ref: '#/components/responses/ErrorSavedSearchNotFound'
  '/saved_searches/resumes/{id}':
    x-name: '/saved_searches/resumes/{id}'
    get:
      tags:
        - Сохраненные поиски резюме
      summary: Получение единичного сохраненного поиска резюме
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedSearchesSavedSearchItem'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SavedSearchesSavedSearchResumeItem'
        '403':
          description: Текущий пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Сохраненный поиск не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    put:
      tags:
        - Сохраненные поиски резюме
      summary: Обновление сохраненного поиска резюме
      description: У сохраненного поиска можно изменить имя (`name`) и статус подписки (`subscription`). В одном запросе можно передать только один из параметров
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Новое имя сохраненного поиска
          required: false
          schema:
            type: string
        - name: subscription
          in: query
          description: Статус подписки
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          $ref: '#/components/responses/ErrorBadArgument'
        '403':
          $ref: '#/components/responses/ErrorBadAuthorization'
        '404':
          $ref: '#/components/responses/ErrorNotFound'
        '409':
          $ref: '#/components/responses/ErrorBothChangedConflict'
    delete:
      tags:
        - Сохраненные поиски резюме
      summary: Удаление сохраненного поиска резюме
      parameters:
        - name: id
          in: path
          description: Идентификатор сохраненного поиска
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          $ref: '#/components/responses/ErrorBadAuthorization'
        '404':
          $ref: '#/components/responses/ErrorNotFound'
  /metro:
    x-name: /metro
    get:
      tags:
        - Общие справочники
      summary: Список станций метро во всех городах
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroMetroResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/MetroMetro'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/metro/{city_id}':
    x-name: '/metro/{city_id}'
    get:
      tags:
        - Общие справочники
      summary: Список станций метро в указанном городе
      parameters:
        - name: city_id
          in: path
          description: Идентификатор города
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetroCityMetroItem'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/MetroCityMetro'
        '404':
          description: Город с указанным идентификатором не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /artifacts:
    x-name: /artifacts
    post:
      tags:
        - Работа с артефактами
      summary: Загрузка артефакта
      description: |
        Запрос загружает файл с локальной машины в сервис. 

        Ограничения на типы файлов и их размер доступны в [условиях загрузки артефактов](#tag/Rabota-s-artefaktami).

        Для прикрепления загруженных изображений в резюме, необходимо передать `id` артефакта в [соответствующее поле резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#resume-fields). Для удаления артефакта из резюме укажите `null`
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              $ref: '#/components/schemas/ArtifactsArtifactUploadBody'
            encoding:
              file:
                contentType: 'image/png, image/jpeg'
      responses:
        '201':
          description: Результат отправки файла
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsArtifactItem'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ArtifactsArtifactUpload'
        '400':
          description: Ошибка в параметрах запроса или добавление изображения невозможно
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ErrorsBadJsonDataArtifactUploadErrors'
                  - $ref: '#/components/schemas/ErrorsBadJsonDataErrors'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '413':
          description: Изображение слишком большое
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsRequestEntityTooLargeErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /artifacts/portfolio/conditions:
    x-name: /artifacts/portfolio/conditions
    get:
      tags:
        - Работа с артефактами
      summary: Условия загрузки портфолио
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsArtifactConditions'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ArtifactsArtifactConditions'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /artifacts/photo:
    x-name: /artifacts/photo
    get:
      tags:
        - Работа с артефактами
      summary: Получение фотографий
      description: Возвращает список ранее загруженных изображений с фотографиями. Их можно использовать при создании/редактировании резюме
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsArtifactPhotoResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ArtifactsArtifactsPhoto'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /artifacts/photo/conditions:
    x-name: /artifacts/photo/conditions
    get:
      tags:
        - Работа с артефактами
      summary: Условия загрузки фотографий
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsArtifactConditions'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ArtifactsArtifactConditions'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  /artifacts/portfolio:
    x-name: /artifacts/portfolio
    get:
      tags:
        - Работа с артефактами
      summary: Получение портфолио
      description: Возвращает список ранее загруженных изображений с портфолио. Их можно использовать при создании/редактировании резюме
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactsArtifactPortfolioResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ArtifactsArtifactsPortfolio'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
      parameters:
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
  '/artifacts/{id}':
    x-name: '/artifacts/{id}'
    put:
      tags:
        - Работа с артефактами
      summary: Редактирование артефакта
      description: Метод позволяет отредактировать описание портфолио
      parameters:
        - name: id
          in: path
          description: 'Идентификатор артефакта. Чтобы получить его, используйте метод [Получение портфолио](#tag/Rabota-s-artefaktami/paths/~1artifacts~1portfolio/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArtifactsPortfolioDescription'
            examples:
              Пример запроса:
                $ref: '#/components/examples/ArtifactsPortfolioDescription'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '400':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Артефакт не существует или не принадлежит текущему пользователю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Работа с артефактами
      summary: Удаление артефакта
      parameters:
        - name: id
          in: path
          description: 'Идентификатор артефакта. Чтобы получить его, используйте метод [Получение портфолио](#tag/Rabota-s-artefaktami/paths/~1artifacts~1portfolio/get) или [Получение фотографий](#tag/Rabota-s-artefaktami/paths/~1artifacts~1photo/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          $ref: '#/components/responses/SuccessNoContent'
        '403':
          description: Текущий пользователь не является соискателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Артефакт не существует или не принадлежит текущему пользователю
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  /suggests/vacancy_search_keyword:
    x-name: /suggests/vacancy_search_keyword
    get:
      tags:
        - Подсказки
      summary: Подсказки по ключевым словам поиска вакансий
      description: 'Предназначены для использования в поле `text` при [поиске вакансий](https://github.com/hhru/api/blob/master/docs/vacancies.md#search). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске вакансий'
      parameters:
        - name: text
          in: query
          description: Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsSearchKeyword'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsVacancySearchKeyword'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/area_leaves:
    x-name: /suggests/area_leaves
    get:
      tags:
        - Подсказки
      summary: 'Подсказки по регионам, являющимися листами в дереве регионов'
      description: 'Также доступна загрузка [полного дерева регионов](https://github.com/hhru/api/blob/master/docs/areas.md#areas) и [части дерева от определенного элемента](https://github.com/hhru/api/blob/master/docs/areas.md#item)'
      parameters:
        - name: text
          in: query
          description: Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
          required: true
          schema:
            type: string
        - name: area_id
          in: query
          description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md#areas). Сужает подсказки поддеревом переданного идентификатора региона'
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsAreas'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsSuggestsAreas'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/areas:
    x-name: /suggests/areas
    get:
      tags:
        - Подсказки
      summary: Подсказки по регионам
      description: 'Также доступна загрузка [полного дерева регионов](https://github.com/hhru/api/blob/master/docs/areas.md#areas) и [части дерева от определенного элемента](https://github.com/hhru/api/blob/master/docs/areas.md#item)'
      parameters:
        - name: text
          in: query
          description: Текст для поиска региона. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
          required: true
          schema:
            type: string
        - name: area_id
          in: query
          description: 'Идентификатор региона из [справочника](https://github.com/hhru/api/blob/master/docs/areas.md#areas). Сужает подсказки поддеревом переданного идентификатора региона'
          required: false
          schema:
            type: integer
        - name: include_parent
          in: query
          description: 'Включать ли в ответ регион, переданный в параметре `area_id`, если он подходит по искомому тексту'
          required: false
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsAreas'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsSuggestsAreas'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/skill_set:
    x-name: /suggests/skill_set
    get:
      tags:
        - Подсказки
      summary: Подсказки по ключевым навыкам
      parameters:
        - name: text
          in: query
          description: Текст для поиска ключевых навыков. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsSkillSet'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsSkillSet'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/professional_roles:
    x-name: /suggests/professional_roles
    get:
      tags:
        - Подсказки
      summary: Подсказки по профессиональным ролям
      parameters:
        - name: text
          in: query
          description: Текст для поиска профессиональной роли. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
          example: водитель
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsProfessionalRoles'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/companies:
    x-name: /suggests/companies
    get:
      tags:
        - Подсказки
      summary: Подсказки по зарегистрированным организациям
      description: 'Данные из этой подсказки можно использовать, например, для выбора компании при заполнении опыта работы [в резюме](https://github.com/hhru/api/blob/master/docs/resumes.md#create_edit). Чтобы найти организации, которые могут публиковать вакансии, используйте [поиск](#tag/Rabotodatel/paths/~1employers/get)'
      parameters:
        - name: text
          in: query
          description: Текст для поиска организации. Искомый текст должен быть длиной два или более символа и не более 3 000 символов
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsCompanies'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsCompanies'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/fields_of_study:
    x-name: /suggests/fields_of_study
    get:
      tags:
        - Подсказки
      summary: Подсказки по специализациям
      parameters:
        - name: text
          in: query
          description: Текст для поиска специализаций. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsFieldsOfStudy'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsFieldsOfStudy'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/resume_search_keyword:
    x-name: /suggests/resume_search_keyword
    get:
      tags:
        - Подсказки
      summary: Подсказки по ключевым словам поиска резюме
      description: 'Предназначены для использования в поле `text` при [поиске резюме](https://github.com/hhru/api/blob/master/docs/resumes_search.md#search-params). Содержит названия должностей, компаний и другие фразы, часто используемые при поиске резюме'
      parameters:
        - name: text
          in: query
          description: Текст для поиска ключевого слова. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsSearchKeyword'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsResumeSearchKeyword'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/educational_institutions:
    x-name: /suggests/educational_institutions
    get:
      tags:
        - Подсказки
      summary: Подсказки по названиям учебных заведений
      description: 'Чтобы узнать список факультетов, обратитесь к [соответствующему методу](#tag/Obshie-spravochniki/paths/~1educational_institutions/get)'
      parameters:
        - name: text
          in: query
          description: Текст для поиска учебного заведения. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsEducationalInstitutions'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsEducationalInstitutions'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/vacancy_positions:
    x-name: /suggests/vacancy_positions
    get:
      tags:
        - Подсказки
      summary: Подсказки по должностям вакансий
      parameters:
        - name: text
          in: query
          description: Текст для поиска должности в вакансии. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
          example: водитель
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsVacancyPositions'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  /suggests/positions:
    x-name: /suggests/positions
    get:
      tags:
        - Подсказки
      summary: Подсказки по должностям резюме
      parameters:
        - name: text
          in: query
          description: Текст для поиска должности. Искомый текст должен быть длиной два или более символа и не более 3 000 символов.
          required: true
          schema:
            type: string
          example: водитель
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsPositions'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/SuggestsSuggestsPositions'
        '400':
          description: Ошибки запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestsErrors'
  '/applicant_comments/{applicant_id}/{comment_id}':
    x-name: '/applicant_comments/{applicant_id}/{comment_id}'
    put:
      tags:
        - Комментарии к соискателю
      summary: Обновление комментария
      description: |
        Метод требует наличия [платного доступа для работодателя](https://github.com/hhru/api/blob/master/docs/payable/employer_methods.md).

        Автор комментария может изменить его текст и тип доступа. Если параметр не передан, то его значение останется прежним
      parameters:
        - name: applicant_id
          in: path
          description: 'Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)'
          required: true
          schema:
            type: string
        - name: comment_id
          in: path
          description: 'Идентификатор комментария, который можно узнать в [списке комментариев](#tag/Kommentarii-k-soiskatelyu/paths/~1applicant_comments~1%7Bapplicant_id%7D/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: false
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  description: Текст комментария
                  type: string
                access_type:
                  description: 'Тип доступа. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `applicant_comment_access_type`'
                  type: string
      responses:
        '204':
          description: Успешный ответ. Комментарий обновлен
        '400':
          description: Ошибка в параметрах запроса. Дополнительно могут быть указаны названия параметров с ошибками
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Изменение комментария недоступно для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный соискатель или комментарий не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    delete:
      tags:
        - Комментарии к соискателю
      summary: Удаление комментария
      description: |
        Метод требует наличия [платного доступа для работодателя](https://github.com/hhru/api/blob/master/docs/payable/employer_methods.md).

        Удалить комментарий может только его автор
      parameters:
        - name: applicant_id
          in: path
          description: 'Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)'
          required: true
          schema:
            type: string
        - name: comment_id
          in: path
          description: 'Идентификатор комментария, который будет удален. Его можно узнать в [списке комментариев](#tag/Kommentarii-k-soiskatelyu/paths/~1applicant_comments~1%7Bapplicant_id%7D/get)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '204':
          description: Успешный ответ. Комментарий удален
        '403':
          description: Удаление комментария недоступно для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный соискатель не существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/applicant_comments/{applicant_id}':
    x-name: '/applicant_comments/{applicant_id}'
    get:
      tags:
        - Комментарии к соискателю
      summary: Получение списка комментариев
      description: |
        Метод требует наличия [платного доступа для работодателя](https://github.com/hhru/api/blob/master/docs/payable/employer_methods.md).

        Список будет содержать комментарии текущего пользователя, а также комментарии других менеджеров компании, если они открыли доступ к ним при публикации
      parameters:
        - name: applicant_id
          in: path
          description: 'Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: false
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                page:
                  description: Номер страницы
                  type: number
                per_page:
                  description: Результатов на странице
                  type: number
                order_by:
                  description: 'Сортировка комментариев. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `applicant_comments_order`'
                  type: string
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantCommentsApplicantCommentsList'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ApplicantCommentsApplicantCommentsListExample'
        '403':
          description: Получение комментариев недоступно для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный соискатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
    post:
      tags:
        - Комментарии к соискателю
      summary: Добавление комментария
      description: 'Метод требует наличия [платного доступа для работодателя](https://github.com/hhru/api/blob/master/docs/payable/employer_methods.md)'
      parameters:
        - name: applicant_id
          in: path
          description: 'Идентификатор соискателя, который можно узнать из поля `owner` [в резюме](https://github.com/hhru/api/blob/master/docs/employer_resumes.md#owner-field)'
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  description: Текст комментария
                  type: string
                access_type:
                  description: 'Тип доступа. Доступные значения перечислены [в справочнике](#tag/Obshie-spravochniki/paths/~1dictionaries/get) в поле `applicant_comment_access_type`'
                  type: string
      responses:
        '201':
          description: Комментарий добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicantCommentsApplicantCommentItem'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/ApplicantCommentsAddApplicantCommentExample'
        '400':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadArgumentErrors'
        '403':
          description: Получение комментариев недоступно для текущего пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Указанный соискатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
  '/employers/{employer_id}/tests':
    x-name: '/employers/{employer_id}/tests'
    get:
      tags:
        - Справочники работодателя
      summary: Справочник тестов работодателя
      description: Возвращает список сохраненных тестов работодателя.
      parameters:
        - name: employer_id
          in: path
          description: Идентификатор работодателя
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/HHUserAgent'
        - $ref: '#/components/parameters/Locale'
        - $ref: '#/components/parameters/Host'
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerDictionariesTestsResponse'
              examples:
                Пример ответа:
                  $ref: '#/components/examples/EmployerDictionariesTests'
        '403':
          description: Ошибка авторизации. Пользователь не является работодателем
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsBadAuthorizationErrors'
        '404':
          description: Работодатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorsNotFoundErrors'
